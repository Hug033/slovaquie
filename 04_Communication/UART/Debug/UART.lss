
UART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000104  00800100  00000f4a  00000fde  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f4a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800204  00800204  000010e2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000010e2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001140  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  00001180  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002549  00000000  00000000  000012c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011e8  00000000  00000000  00003811  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000db7  00000000  00000000  000049f9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000270  00000000  00000000  000057b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000778  00000000  00000000  00005a20  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000fb5  00000000  00000000  00006198  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000100  00000000  00000000  0000714d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 47 00 	jmp	0x8e	; 0x8e <__ctors_end>
   4:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
   8:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
   c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  10:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  14:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  18:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  1c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  20:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  24:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  28:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  2c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  30:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  34:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  38:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  3c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  40:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  44:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  48:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  4c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  50:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  54:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  58:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  5c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  60:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  64:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  68:	83 01       	movw	r16, r6
  6a:	a9 01       	movw	r20, r18
  6c:	85 01       	movw	r16, r10
  6e:	87 01       	movw	r16, r14
  70:	89 01       	movw	r16, r18
  72:	8b 01       	movw	r16, r22
  74:	8d 01       	movw	r16, r26
  76:	8f 01       	movw	r16, r30
  78:	91 01       	movw	r18, r2
  7a:	93 01       	movw	r18, r6
  7c:	95 01       	movw	r18, r10
  7e:	97 01       	movw	r18, r14
  80:	99 01       	movw	r18, r18
  82:	9b 01       	movw	r18, r22
  84:	9d 01       	movw	r18, r26
  86:	9f 01       	movw	r18, r30
  88:	a1 01       	movw	r20, r2
  8a:	a3 01       	movw	r20, r6
  8c:	a5 01       	movw	r20, r10

0000008e <__ctors_end>:
  8e:	11 24       	eor	r1, r1
  90:	1f be       	out	0x3f, r1	; 63
  92:	cf ef       	ldi	r28, 0xFF	; 255
  94:	d8 e0       	ldi	r29, 0x08	; 8
  96:	de bf       	out	0x3e, r29	; 62
  98:	cd bf       	out	0x3d, r28	; 61

0000009a <__do_copy_data>:
  9a:	12 e0       	ldi	r17, 0x02	; 2
  9c:	a0 e0       	ldi	r26, 0x00	; 0
  9e:	b1 e0       	ldi	r27, 0x01	; 1
  a0:	ea e4       	ldi	r30, 0x4A	; 74
  a2:	ff e0       	ldi	r31, 0x0F	; 15
  a4:	02 c0       	rjmp	.+4      	; 0xaa <__do_copy_data+0x10>
  a6:	05 90       	lpm	r0, Z+
  a8:	0d 92       	st	X+, r0
  aa:	a4 30       	cpi	r26, 0x04	; 4
  ac:	b1 07       	cpc	r27, r17
  ae:	d9 f7       	brne	.-10     	; 0xa6 <__do_copy_data+0xc>

000000b0 <__do_clear_bss>:
  b0:	22 e0       	ldi	r18, 0x02	; 2
  b2:	a4 e0       	ldi	r26, 0x04	; 4
  b4:	b2 e0       	ldi	r27, 0x02	; 2
  b6:	01 c0       	rjmp	.+2      	; 0xba <.do_clear_bss_start>

000000b8 <.do_clear_bss_loop>:
  b8:	1d 92       	st	X+, r1

000000ba <.do_clear_bss_start>:
  ba:	ae 30       	cpi	r26, 0x0E	; 14
  bc:	b2 07       	cpc	r27, r18
  be:	e1 f7       	brne	.-8      	; 0xb8 <.do_clear_bss_loop>
  c0:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <main>
  c4:	0c 94 a3 07 	jmp	0xf46	; 0xf46 <_exit>

000000c8 <__bad_interrupt>:
  c8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000cc <_ZN6ButtonC1Ev>:
	cbi(DDRD,BTN);		// set as input
	sbi(PORTD,BTN);		// set pull-up 
} //Button

// default destructor
Button::~Button()
  cc:	8a b1       	in	r24, 0x0a	; 10
  ce:	8b 7f       	andi	r24, 0xFB	; 251
  d0:	8a b9       	out	0x0a, r24	; 10
  d2:	8b b1       	in	r24, 0x0b	; 11
  d4:	84 60       	ori	r24, 0x04	; 4
  d6:	8b b9       	out	0x0b, r24	; 11
  d8:	08 95       	ret

000000da <_ZN6Button9isPressedEv>:
/*	while((PIND & (1<<BTN))!=0){};			// wait, BTN=1
	_delay_ms(10);							// delay
	while((PIND & (1<<BTN))==0){};			// wait for release button	 
	return true;							// if BTN = 0  . . . pressed
*/
	if((PIND & (1<<BTN))==0) return true;	// pressed
  da:	4a 99       	sbic	0x09, 2	; 9
  dc:	02 c0       	rjmp	.+4      	; 0xe2 <_ZN6Button9isPressedEv+0x8>
  de:	81 e0       	ldi	r24, 0x01	; 1
  e0:	08 95       	ret
	else return false;						// released
  e2:	80 e0       	ldi	r24, 0x00	; 0
  e4:	08 95       	ret

000000e6 <_ZN3DHTC1Ev>:
		printf("Temp     : %d.",pom);
		pom = (uint8_t)x;
		printf("%d degrees Celsius\r\n",pom);
	}
	
}
  e6:	08 95       	ret

000000e8 <_ZN3DHT8getValueEv>:
  e8:	85 b1       	in	r24, 0x05	; 5
  ea:	81 60       	ori	r24, 0x01	; 1
  ec:	85 b9       	out	0x05, r24	; 5
  ee:	84 b1       	in	r24, 0x04	; 4
  f0:	81 60       	ori	r24, 0x01	; 1
  f2:	84 b9       	out	0x04, r24	; 4
  f4:	28 ec       	ldi	r18, 0xC8	; 200
  f6:	2a 95       	dec	r18
  f8:	f1 f7       	brne	.-4      	; 0xf6 <_ZN3DHT8getValueEv+0xe>
  fa:	85 b1       	in	r24, 0x05	; 5
  fc:	8e 7f       	andi	r24, 0xFE	; 254
  fe:	85 b9       	out	0x05, r24	; 5
 100:	5f e3       	ldi	r21, 0x3F	; 63
 102:	8e ec       	ldi	r24, 0xCE	; 206
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	51 50       	subi	r21, 0x01	; 1
 108:	80 40       	sbci	r24, 0x00	; 0
 10a:	90 40       	sbci	r25, 0x00	; 0
 10c:	e1 f7       	brne	.-8      	; 0x106 <_ZN3DHT8getValueEv+0x1e>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <_ZN3DHT8getValueEv+0x28>
 110:	00 00       	nop
 112:	84 b1       	in	r24, 0x04	; 4
 114:	8e 7f       	andi	r24, 0xFE	; 254
 116:	84 b9       	out	0x04, r24	; 4
 118:	28 e0       	ldi	r18, 0x08	; 8
 11a:	2a 95       	dec	r18
 11c:	f1 f7       	brne	.-4      	; 0x11a <_ZN3DHT8getValueEv+0x32>
 11e:	18 99       	sbic	0x03, 0	; 3
 120:	fe cf       	rjmp	.-4      	; 0x11e <_ZN3DHT8getValueEv+0x36>
 122:	58 e0       	ldi	r21, 0x08	; 8
 124:	5a 95       	dec	r21
 126:	f1 f7       	brne	.-4      	; 0x124 <_ZN3DHT8getValueEv+0x3c>
 128:	18 9b       	sbis	0x03, 0	; 3
 12a:	fe cf       	rjmp	.-4      	; 0x128 <_ZN3DHT8getValueEv+0x40>
 12c:	88 e0       	ldi	r24, 0x08	; 8
 12e:	8a 95       	dec	r24
 130:	f1 f7       	brne	.-4      	; 0x12e <_ZN3DHT8getValueEv+0x46>
 132:	18 99       	sbic	0x03, 0	; 3
 134:	fe cf       	rjmp	.-4      	; 0x132 <_ZN3DHT8getValueEv+0x4a>
 136:	98 e0       	ldi	r25, 0x08	; 8
 138:	9a 95       	dec	r25
 13a:	f1 f7       	brne	.-4      	; 0x138 <_ZN3DHT8getValueEv+0x50>
 13c:	80 e0       	ldi	r24, 0x00	; 0
 13e:	60 e0       	ldi	r22, 0x00	; 0
 140:	88 30       	cpi	r24, 0x08	; 8
 142:	90 f4       	brcc	.+36     	; 0x168 <_ZN3DHT8getValueEv+0x80>
 144:	18 9b       	sbis	0x03, 0	; 3
 146:	fe cf       	rjmp	.-4      	; 0x144 <_ZN3DHT8getValueEv+0x5c>
 148:	24 ed       	ldi	r18, 0xD4	; 212
 14a:	2a 95       	dec	r18
 14c:	f1 f7       	brne	.-4      	; 0x14a <_ZN3DHT8getValueEv+0x62>
 14e:	93 b1       	in	r25, 0x03	; 3
 150:	91 70       	andi	r25, 0x01	; 1
 152:	69 2b       	or	r22, r25
 154:	60 ff       	sbrs	r22, 0
 156:	03 c0       	rjmp	.+6      	; 0x15e <_ZN3DHT8getValueEv+0x76>
 158:	54 e9       	ldi	r21, 0x94	; 148
 15a:	5a 95       	dec	r21
 15c:	f1 f7       	brne	.-4      	; 0x15a <_ZN3DHT8getValueEv+0x72>
 15e:	87 30       	cpi	r24, 0x07	; 7
 160:	09 f0       	breq	.+2      	; 0x164 <_ZN3DHT8getValueEv+0x7c>
 162:	66 0f       	add	r22, r22
 164:	8f 5f       	subi	r24, 0xFF	; 255
 166:	ec cf       	rjmp	.-40     	; 0x140 <_ZN3DHT8getValueEv+0x58>
 168:	80 e0       	ldi	r24, 0x00	; 0
 16a:	40 e0       	ldi	r20, 0x00	; 0
 16c:	88 30       	cpi	r24, 0x08	; 8
 16e:	90 f4       	brcc	.+36     	; 0x194 <_ZN3DHT8getValueEv+0xac>
 170:	18 9b       	sbis	0x03, 0	; 3
 172:	fe cf       	rjmp	.-4      	; 0x170 <_ZN3DHT8getValueEv+0x88>
 174:	94 ed       	ldi	r25, 0xD4	; 212
 176:	9a 95       	dec	r25
 178:	f1 f7       	brne	.-4      	; 0x176 <_ZN3DHT8getValueEv+0x8e>
 17a:	93 b1       	in	r25, 0x03	; 3
 17c:	91 70       	andi	r25, 0x01	; 1
 17e:	49 2b       	or	r20, r25
 180:	40 ff       	sbrs	r20, 0
 182:	03 c0       	rjmp	.+6      	; 0x18a <_ZN3DHT8getValueEv+0xa2>
 184:	24 e9       	ldi	r18, 0x94	; 148
 186:	2a 95       	dec	r18
 188:	f1 f7       	brne	.-4      	; 0x186 <_ZN3DHT8getValueEv+0x9e>
 18a:	87 30       	cpi	r24, 0x07	; 7
 18c:	09 f0       	breq	.+2      	; 0x190 <_ZN3DHT8getValueEv+0xa8>
 18e:	44 0f       	add	r20, r20
 190:	8f 5f       	subi	r24, 0xFF	; 255
 192:	ec cf       	rjmp	.-40     	; 0x16c <_ZN3DHT8getValueEv+0x84>
 194:	80 e0       	ldi	r24, 0x00	; 0
 196:	30 e0       	ldi	r19, 0x00	; 0
 198:	88 30       	cpi	r24, 0x08	; 8
 19a:	90 f4       	brcc	.+36     	; 0x1c0 <_ZN3DHT8getValueEv+0xd8>
 19c:	18 9b       	sbis	0x03, 0	; 3
 19e:	fe cf       	rjmp	.-4      	; 0x19c <_ZN3DHT8getValueEv+0xb4>
 1a0:	54 ed       	ldi	r21, 0xD4	; 212
 1a2:	5a 95       	dec	r21
 1a4:	f1 f7       	brne	.-4      	; 0x1a2 <_ZN3DHT8getValueEv+0xba>
 1a6:	93 b1       	in	r25, 0x03	; 3
 1a8:	91 70       	andi	r25, 0x01	; 1
 1aa:	39 2b       	or	r19, r25
 1ac:	30 ff       	sbrs	r19, 0
 1ae:	03 c0       	rjmp	.+6      	; 0x1b6 <_ZN3DHT8getValueEv+0xce>
 1b0:	94 e9       	ldi	r25, 0x94	; 148
 1b2:	9a 95       	dec	r25
 1b4:	f1 f7       	brne	.-4      	; 0x1b2 <_ZN3DHT8getValueEv+0xca>
 1b6:	87 30       	cpi	r24, 0x07	; 7
 1b8:	09 f0       	breq	.+2      	; 0x1bc <_ZN3DHT8getValueEv+0xd4>
 1ba:	33 0f       	add	r19, r19
 1bc:	8f 5f       	subi	r24, 0xFF	; 255
 1be:	ec cf       	rjmp	.-40     	; 0x198 <_ZN3DHT8getValueEv+0xb0>
 1c0:	80 e0       	ldi	r24, 0x00	; 0
 1c2:	20 e0       	ldi	r18, 0x00	; 0
 1c4:	88 30       	cpi	r24, 0x08	; 8
 1c6:	90 f4       	brcc	.+36     	; 0x1ec <_ZN3DHT8getValueEv+0x104>
 1c8:	18 9b       	sbis	0x03, 0	; 3
 1ca:	fe cf       	rjmp	.-4      	; 0x1c8 <_ZN3DHT8getValueEv+0xe0>
 1cc:	54 ed       	ldi	r21, 0xD4	; 212
 1ce:	5a 95       	dec	r21
 1d0:	f1 f7       	brne	.-4      	; 0x1ce <_ZN3DHT8getValueEv+0xe6>
 1d2:	93 b1       	in	r25, 0x03	; 3
 1d4:	91 70       	andi	r25, 0x01	; 1
 1d6:	29 2b       	or	r18, r25
 1d8:	20 ff       	sbrs	r18, 0
 1da:	03 c0       	rjmp	.+6      	; 0x1e2 <_ZN3DHT8getValueEv+0xfa>
 1dc:	94 e9       	ldi	r25, 0x94	; 148
 1de:	9a 95       	dec	r25
 1e0:	f1 f7       	brne	.-4      	; 0x1de <_ZN3DHT8getValueEv+0xf6>
 1e2:	87 30       	cpi	r24, 0x07	; 7
 1e4:	09 f0       	breq	.+2      	; 0x1e8 <_ZN3DHT8getValueEv+0x100>
 1e6:	22 0f       	add	r18, r18
 1e8:	8f 5f       	subi	r24, 0xFF	; 255
 1ea:	ec cf       	rjmp	.-40     	; 0x1c4 <_ZN3DHT8getValueEv+0xdc>
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	80 e0       	ldi	r24, 0x00	; 0
 1f0:	98 30       	cpi	r25, 0x08	; 8
 1f2:	90 f4       	brcc	.+36     	; 0x218 <_ZN3DHT8getValueEv+0x130>
 1f4:	18 9b       	sbis	0x03, 0	; 3
 1f6:	fe cf       	rjmp	.-4      	; 0x1f4 <_ZN3DHT8getValueEv+0x10c>
 1f8:	54 ed       	ldi	r21, 0xD4	; 212
 1fa:	5a 95       	dec	r21
 1fc:	f1 f7       	brne	.-4      	; 0x1fa <_ZN3DHT8getValueEv+0x112>
 1fe:	53 b1       	in	r21, 0x03	; 3
 200:	51 70       	andi	r21, 0x01	; 1
 202:	85 2b       	or	r24, r21
 204:	80 ff       	sbrs	r24, 0
 206:	03 c0       	rjmp	.+6      	; 0x20e <_ZN3DHT8getValueEv+0x126>
 208:	54 e9       	ldi	r21, 0x94	; 148
 20a:	5a 95       	dec	r21
 20c:	f1 f7       	brne	.-4      	; 0x20a <_ZN3DHT8getValueEv+0x122>
 20e:	97 30       	cpi	r25, 0x07	; 7
 210:	09 f0       	breq	.+2      	; 0x214 <_ZN3DHT8getValueEv+0x12c>
 212:	88 0f       	add	r24, r24
 214:	9f 5f       	subi	r25, 0xFF	; 255
 216:	ec cf       	rjmp	.-40     	; 0x1f0 <_ZN3DHT8getValueEv+0x108>
 218:	e4 2f       	mov	r30, r20
 21a:	f0 e0       	ldi	r31, 0x00	; 0
 21c:	e6 0f       	add	r30, r22
 21e:	f1 1d       	adc	r31, r1
 220:	e3 0f       	add	r30, r19
 222:	f1 1d       	adc	r31, r1
 224:	e2 0f       	add	r30, r18
 226:	f1 1d       	adc	r31, r1
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	e8 17       	cp	r30, r24
 22c:	f9 07       	cpc	r31, r25
 22e:	b1 f4       	brne	.+44     	; 0x25c <_ZN3DHT8getValueEv+0x174>
 230:	86 2f       	mov	r24, r22
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	a0 e0       	ldi	r26, 0x00	; 0
 236:	b0 e0       	ldi	r27, 0x00	; 0
 238:	ba 2f       	mov	r27, r26
 23a:	a9 2f       	mov	r26, r25
 23c:	98 2f       	mov	r25, r24
 23e:	88 27       	eor	r24, r24
 240:	84 2b       	or	r24, r20
 242:	ba 2f       	mov	r27, r26
 244:	a9 2f       	mov	r26, r25
 246:	98 2f       	mov	r25, r24
 248:	88 27       	eor	r24, r24
 24a:	83 2b       	or	r24, r19
 24c:	ba 2f       	mov	r27, r26
 24e:	a9 2f       	mov	r26, r25
 250:	98 2f       	mov	r25, r24
 252:	88 27       	eor	r24, r24
 254:	bc 01       	movw	r22, r24
 256:	cd 01       	movw	r24, r26
 258:	62 2b       	or	r22, r18
 25a:	08 95       	ret
 25c:	60 e0       	ldi	r22, 0x00	; 0
 25e:	70 e0       	ldi	r23, 0x00	; 0
 260:	cb 01       	movw	r24, r22
 262:	08 95       	ret

00000264 <_ZN3DHT7getTempEv>:

uint8_t DHT::getTemp(void)
{
	uint32_t x = getValue();
 264:	0e 94 74 00 	call	0xe8	; 0xe8 <_ZN3DHT8getValueEv>
	
	if(x != 0)
 268:	61 15       	cp	r22, r1
 26a:	71 05       	cpc	r23, r1
 26c:	81 05       	cpc	r24, r1
 26e:	91 05       	cpc	r25, r1
 270:	11 f0       	breq	.+4      	; 0x276 <_ZN3DHT7getTempEv+0x12>
	{
		uint32_t y = x;
		y = y >>8;
		return (uint8_t)y;
 272:	87 2f       	mov	r24, r23
 274:	08 95       	ret
	}
	return 0;
 276:	80 e0       	ldi	r24, 0x00	; 0
};
 278:	08 95       	ret

0000027a <_ZN3DHT6getHumEv>:


uint8_t DHT::getHum(void)
{
	uint32_t x = getValue();
 27a:	0e 94 74 00 	call	0xe8	; 0xe8 <_ZN3DHT8getValueEv>
	
	if(x != 0)
 27e:	61 15       	cp	r22, r1
 280:	71 05       	cpc	r23, r1
 282:	81 05       	cpc	r24, r1
 284:	91 05       	cpc	r25, r1
 286:	11 f0       	breq	.+4      	; 0x28c <_ZN3DHT6getHumEv+0x12>
	{
		uint32_t y = x;
		y = y >> 24;
		return (uint8_t)y;
 288:	89 2f       	mov	r24, r25
 28a:	08 95       	ret
	}
	return 0;
 28c:	80 e0       	ldi	r24, 0x00	; 0
 28e:	08 95       	ret

00000290 <_ZN7DisplayC1Ev>:
	sbi(DDRD,RCLK);
	sbi(DDRB,SRCLK);
} //Display

// default destructor
Display::~Display()
 290:	87 b1       	in	r24, 0x07	; 7
 292:	80 62       	ori	r24, 0x20	; 32
 294:	87 b9       	out	0x07, r24	; 7
 296:	87 b1       	in	r24, 0x07	; 7
 298:	80 61       	ori	r24, 0x10	; 16
 29a:	87 b9       	out	0x07, r24	; 7
 29c:	8a b1       	in	r24, 0x0a	; 10
 29e:	80 68       	ori	r24, 0x80	; 128
 2a0:	8a b9       	out	0x0a, r24	; 10
 2a2:	84 b1       	in	r24, 0x04	; 4
 2a4:	82 60       	ori	r24, 0x02	; 2
 2a6:	84 b9       	out	0x04, r24	; 4
 2a8:	08 95       	ret

000002aa <_ZN7Display7displayEh>:
}

/* private method */
void Display::display(uint8_t character)
{
	sbi(PORTC,OE);				// set output to HI (high impedance)
 2aa:	88 b1       	in	r24, 0x08	; 8
 2ac:	80 61       	ori	r24, 0x10	; 16
 2ae:	88 b9       	out	0x08, r24	; 8
	for(uint8_t i=0;i<8;i++)
 2b0:	90 e0       	ldi	r25, 0x00	; 0
 2b2:	98 30       	cpi	r25, 0x08	; 8
 2b4:	90 f4       	brcc	.+36     	; 0x2da <_ZN7Display7displayEh+0x30>
	{
		if((character & 0b10000000)==0b10000000) sbi(PORTC,SER);else cbi(PORTC,SER);	//data
 2b6:	66 23       	and	r22, r22
 2b8:	24 f4       	brge	.+8      	; 0x2c2 <_ZN7Display7displayEh+0x18>
 2ba:	88 b1       	in	r24, 0x08	; 8
 2bc:	80 62       	ori	r24, 0x20	; 32
 2be:	88 b9       	out	0x08, r24	; 8
 2c0:	03 c0       	rjmp	.+6      	; 0x2c8 <_ZN7Display7displayEh+0x1e>
 2c2:	88 b1       	in	r24, 0x08	; 8
 2c4:	8f 7d       	andi	r24, 0xDF	; 223
 2c6:	88 b9       	out	0x08, r24	; 8
		sbi(PORTB,SRCLK);
 2c8:	85 b1       	in	r24, 0x05	; 5
 2ca:	82 60       	ori	r24, 0x02	; 2
 2cc:	85 b9       	out	0x05, r24	; 5
		cbi(PORTB,SRCLK);	// clock
 2ce:	85 b1       	in	r24, 0x05	; 5
 2d0:	8d 7f       	andi	r24, 0xFD	; 253
 2d2:	85 b9       	out	0x05, r24	; 5
		character=character<<1;
 2d4:	66 0f       	add	r22, r22

/* private method */
void Display::display(uint8_t character)
{
	sbi(PORTC,OE);				// set output to HI (high impedance)
	for(uint8_t i=0;i<8;i++)
 2d6:	9f 5f       	subi	r25, 0xFF	; 255
 2d8:	ec cf       	rjmp	.-40     	; 0x2b2 <_ZN7Display7displayEh+0x8>
		if((character & 0b10000000)==0b10000000) sbi(PORTC,SER);else cbi(PORTC,SER);	//data
		sbi(PORTB,SRCLK);
		cbi(PORTB,SRCLK);	// clock
		character=character<<1;
	}
	sbi(PORTD,RCLK);		//	transcript from shift register to memory
 2da:	8b b1       	in	r24, 0x0b	; 11
 2dc:	80 68       	ori	r24, 0x80	; 128
 2de:	8b b9       	out	0x0b, r24	; 11
	cbi(PORTD,RCLK);		//  impulse
 2e0:	8b b1       	in	r24, 0x0b	; 11
 2e2:	8f 77       	andi	r24, 0x7F	; 127
 2e4:	8b b9       	out	0x0b, r24	; 11
	cbi(PORTC,OE);			//	set output
 2e6:	88 b1       	in	r24, 0x08	; 8
 2e8:	8f 7e       	andi	r24, 0xEF	; 239
 2ea:	88 b9       	out	0x08, r24	; 8
 2ec:	08 95       	ret

000002ee <_ZN7Display4showEh>:
} //~Display

void Display::show(uint8_t character)
{
	uint8_t result;
	character= character & 0x1f;
 2ee:	e6 2f       	mov	r30, r22
 2f0:	ef 71       	andi	r30, 0x1F	; 31
	switch(character)
 2f2:	4e 2f       	mov	r20, r30
 2f4:	50 e0       	ldi	r21, 0x00	; 0
 2f6:	43 31       	cpi	r20, 0x13	; 19
 2f8:	51 05       	cpc	r21, r1
 2fa:	48 f5       	brcc	.+82     	; 0x34e <_ZN7Display4showEh+0x60>
 2fc:	fa 01       	movw	r30, r20
 2fe:	ec 5c       	subi	r30, 0xCC	; 204
 300:	ff 4f       	sbci	r31, 0xFF	; 255
 302:	0c 94 00 03 	jmp	0x600	; 0x600 <__tablejump2__>
	{
		case 0: result=zero; break;
 306:	6f e3       	ldi	r22, 0x3F	; 63
 308:	25 c0       	rjmp	.+74     	; 0x354 <_ZN7Display4showEh+0x66>
		case 1: result=one; break;
		case 2: result=two; break;
 30a:	6b e5       	ldi	r22, 0x5B	; 91
 30c:	23 c0       	rjmp	.+70     	; 0x354 <_ZN7Display4showEh+0x66>
		case 3: result=three; break;
 30e:	6f e4       	ldi	r22, 0x4F	; 79
 310:	21 c0       	rjmp	.+66     	; 0x354 <_ZN7Display4showEh+0x66>
		case 4: result=four; break;
 312:	66 e6       	ldi	r22, 0x66	; 102
 314:	1f c0       	rjmp	.+62     	; 0x354 <_ZN7Display4showEh+0x66>
		case 5: result=five; break;
 316:	6d e6       	ldi	r22, 0x6D	; 109
 318:	1d c0       	rjmp	.+58     	; 0x354 <_ZN7Display4showEh+0x66>
		case 6: result=six; break;
 31a:	6d e7       	ldi	r22, 0x7D	; 125
 31c:	1b c0       	rjmp	.+54     	; 0x354 <_ZN7Display4showEh+0x66>
		case 7: result=seven; break;
 31e:	67 e0       	ldi	r22, 0x07	; 7
 320:	19 c0       	rjmp	.+50     	; 0x354 <_ZN7Display4showEh+0x66>
		case 8: result=eight; break;
 322:	6f e7       	ldi	r22, 0x7F	; 127
 324:	17 c0       	rjmp	.+46     	; 0x354 <_ZN7Display4showEh+0x66>
		case 9: result=nine; break;
 326:	6f e6       	ldi	r22, 0x6F	; 111
 328:	15 c0       	rjmp	.+42     	; 0x354 <_ZN7Display4showEh+0x66>
		case 10: result=ahex; break;
 32a:	67 e7       	ldi	r22, 0x77	; 119
 32c:	13 c0       	rjmp	.+38     	; 0x354 <_ZN7Display4showEh+0x66>
		case 11: result=bhex; break;
 32e:	6c e7       	ldi	r22, 0x7C	; 124
 330:	11 c0       	rjmp	.+34     	; 0x354 <_ZN7Display4showEh+0x66>
		case 12: result=chex; break;
 332:	68 e5       	ldi	r22, 0x58	; 88
 334:	0f c0       	rjmp	.+30     	; 0x354 <_ZN7Display4showEh+0x66>
		case 13: result=dhex; break;
 336:	6e e5       	ldi	r22, 0x5E	; 94
 338:	0d c0       	rjmp	.+26     	; 0x354 <_ZN7Display4showEh+0x66>
		case 14: result=ehex; break;
 33a:	69 e7       	ldi	r22, 0x79	; 121
 33c:	0b c0       	rjmp	.+22     	; 0x354 <_ZN7Display4showEh+0x66>
		case 15: result=fhex; break;
 33e:	61 e7       	ldi	r22, 0x71	; 113
 340:	09 c0       	rjmp	.+18     	; 0x354 <_ZN7Display4showEh+0x66>
		case 16: result=dot; break;
 342:	60 e8       	ldi	r22, 0x80	; 128
 344:	07 c0       	rjmp	.+14     	; 0x354 <_ZN7Display4showEh+0x66>
		case 17: result=err; break;
 346:	69 e4       	ldi	r22, 0x49	; 73
 348:	05 c0       	rjmp	.+10     	; 0x354 <_ZN7Display4showEh+0x66>
		case 18: result=non; break;
 34a:	60 e0       	ldi	r22, 0x00	; 0
 34c:	03 c0       	rjmp	.+6      	; 0x354 <_ZN7Display4showEh+0x66>
		default: result=non;
 34e:	60 e0       	ldi	r22, 0x00	; 0
 350:	01 c0       	rjmp	.+2      	; 0x354 <_ZN7Display4showEh+0x66>
	uint8_t result;
	character= character & 0x1f;
	switch(character)
	{
		case 0: result=zero; break;
		case 1: result=one; break;
 352:	66 e0       	ldi	r22, 0x06	; 6
		case 16: result=dot; break;
		case 17: result=err; break;
		case 18: result=non; break;
		default: result=non;
	}	
	this->display(result);			// display(result)
 354:	0e 94 55 01 	call	0x2aa	; 0x2aa <_ZN7Display7displayEh>
 358:	08 95       	ret

0000035a <_ZN3Led3setEbbb>:
{
} //~Led

void Led::set(bool r,bool g,bool b)
{
	if(r) cbi(PORTD,R_LED); else sbi(PORTD,R_LED);
 35a:	66 23       	and	r22, r22
 35c:	21 f0       	breq	.+8      	; 0x366 <_ZN3Led3setEbbb+0xc>
 35e:	8b b1       	in	r24, 0x0b	; 11
 360:	8f 7b       	andi	r24, 0xBF	; 191
 362:	8b b9       	out	0x0b, r24	; 11
 364:	03 c0       	rjmp	.+6      	; 0x36c <_ZN3Led3setEbbb+0x12>
 366:	8b b1       	in	r24, 0x0b	; 11
 368:	80 64       	ori	r24, 0x40	; 64
 36a:	8b b9       	out	0x0b, r24	; 11
	if(g) cbi(PORTD,G_LED); else sbi(PORTD,G_LED);
 36c:	44 23       	and	r20, r20
 36e:	21 f0       	breq	.+8      	; 0x378 <_ZN3Led3setEbbb+0x1e>
 370:	8b b1       	in	r24, 0x0b	; 11
 372:	87 7f       	andi	r24, 0xF7	; 247
 374:	8b b9       	out	0x0b, r24	; 11
 376:	03 c0       	rjmp	.+6      	; 0x37e <_ZN3Led3setEbbb+0x24>
 378:	8b b1       	in	r24, 0x0b	; 11
 37a:	88 60       	ori	r24, 0x08	; 8
 37c:	8b b9       	out	0x0b, r24	; 11
	if(b) cbi(PORTD,B_LED); else sbi(PORTD,B_LED);
 37e:	22 23       	and	r18, r18
 380:	21 f0       	breq	.+8      	; 0x38a <_ZN3Led3setEbbb+0x30>
 382:	8b b1       	in	r24, 0x0b	; 11
 384:	8f 7d       	andi	r24, 0xDF	; 223
 386:	8b b9       	out	0x0b, r24	; 11
 388:	08 95       	ret
 38a:	8b b1       	in	r24, 0x0b	; 11
 38c:	80 62       	ori	r24, 0x20	; 32
 38e:	8b b9       	out	0x0b, r24	; 11
 390:	08 95       	ret

00000392 <_ZN3LedC1Ev>:

// default constructor
Led::Led()
{
	/* set as outputs */
	sbi(DDRD,R_LED);
 392:	2a b1       	in	r18, 0x0a	; 10
 394:	20 64       	ori	r18, 0x40	; 64
 396:	2a b9       	out	0x0a, r18	; 10
	sbi(DDRD,B_LED);
 398:	2a b1       	in	r18, 0x0a	; 10
 39a:	20 62       	ori	r18, 0x20	; 32
 39c:	2a b9       	out	0x0a, r18	; 10
	sbi(DDRD,G_LED);
 39e:	2a b1       	in	r18, 0x0a	; 10
 3a0:	28 60       	ori	r18, 0x08	; 8
 3a2:	2a b9       	out	0x0a, r18	; 10
	
	set(false,false,false);	// set all leds off
 3a4:	20 e0       	ldi	r18, 0x00	; 0
 3a6:	40 e0       	ldi	r20, 0x00	; 0
 3a8:	60 e0       	ldi	r22, 0x00	; 0
 3aa:	0e 94 ad 01 	call	0x35a	; 0x35a <_ZN3Led3setEbbb>
 3ae:	08 95       	ret

000003b0 <main>:
#include "Display.h"
#include "Uart.h"
#include "DHT.h"

int main(void)
{
 3b0:	cf 93       	push	r28
 3b2:	df 93       	push	r29
 3b4:	00 d0       	rcall	.+0      	; 0x3b6 <main+0x6>
 3b6:	00 d0       	rcall	.+0      	; 0x3b8 <main+0x8>
 3b8:	00 d0       	rcall	.+0      	; 0x3ba <main+0xa>
 3ba:	cd b7       	in	r28, 0x3d	; 61
 3bc:	de b7       	in	r29, 0x3e	; 62
	Led rgb;
 3be:	ce 01       	movw	r24, r28
 3c0:	01 96       	adiw	r24, 0x01	; 1
 3c2:	0e 94 c9 01 	call	0x392	; 0x392 <_ZN3LedC1Ev>
	rgb.set(1,0,0); // Led rouge
 3c6:	20 e0       	ldi	r18, 0x00	; 0
 3c8:	40 e0       	ldi	r20, 0x00	; 0
 3ca:	61 e0       	ldi	r22, 0x01	; 1
 3cc:	ce 01       	movw	r24, r28
 3ce:	01 96       	adiw	r24, 0x01	; 1
 3d0:	0e 94 ad 01 	call	0x35a	; 0x35a <_ZN3Led3setEbbb>

	Button btn;
 3d4:	ce 01       	movw	r24, r28
 3d6:	02 96       	adiw	r24, 0x02	; 2
 3d8:	0e 94 66 00 	call	0xcc	; 0xcc <_ZN6ButtonC1Ev>
	Display dsp;
 3dc:	ce 01       	movw	r24, r28
 3de:	03 96       	adiw	r24, 0x03	; 3
 3e0:	0e 94 48 01 	call	0x290	; 0x290 <_ZN7DisplayC1Ev>
	Uart serial;
 3e4:	ce 01       	movw	r24, r28
 3e6:	04 96       	adiw	r24, 0x04	; 4
 3e8:	0e 94 d5 02 	call	0x5aa	; 0x5aa <_ZN4UartC1Ev>
	DHT dht;
 3ec:	ce 01       	movw	r24, r28
 3ee:	06 96       	adiw	r24, 0x06	; 6
 3f0:	0e 94 73 00 	call	0xe6	; 0xe6 <_ZN3DHTC1Ev>
	
	dsp.show(0); // Set display to default
 3f4:	60 e0       	ldi	r22, 0x00	; 0
 3f6:	ce 01       	movw	r24, r28
 3f8:	03 96       	adiw	r24, 0x03	; 3
 3fa:	0e 94 77 01 	call	0x2ee	; 0x2ee <_ZN7Display4showEh>
	printf ("Initialize :) \r\n");
 3fe:	86 e0       	ldi	r24, 0x06	; 6
 400:	91 e0       	ldi	r25, 0x01	; 1
 402:	0e 94 67 03 	call	0x6ce	; 0x6ce <puts>
	printf("AT+CWMODE=1\r\n");
 406:	86 e1       	ldi	r24, 0x16	; 22
 408:	91 e0       	ldi	r25, 0x01	; 1
 40a:	0e 94 67 03 	call	0x6ce	; 0x6ce <puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 40e:	2f ef       	ldi	r18, 0xFF	; 255
 410:	82 e5       	ldi	r24, 0x52	; 82
 412:	97 e0       	ldi	r25, 0x07	; 7
 414:	21 50       	subi	r18, 0x01	; 1
 416:	80 40       	sbci	r24, 0x00	; 0
 418:	90 40       	sbci	r25, 0x00	; 0
 41a:	e1 f7       	brne	.-8      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 41c:	00 c0       	rjmp	.+0      	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 41e:	00 00       	nop
	_delay_ms(200);
	printf("AT+CWJAP=\"Livebox-49F0\",\"*lescarottessontcuites*\"\r\n");
 420:	83 e2       	ldi	r24, 0x23	; 35
 422:	91 e0       	ldi	r25, 0x01	; 1
 424:	0e 94 67 03 	call	0x6ce	; 0x6ce <puts>
 428:	2f ef       	ldi	r18, 0xFF	; 255
 42a:	89 eb       	ldi	r24, 0xB9	; 185
 42c:	9b ed       	ldi	r25, 0xDB	; 219
 42e:	21 50       	subi	r18, 0x01	; 1
 430:	80 40       	sbci	r24, 0x00	; 0
 432:	90 40       	sbci	r25, 0x00	; 0
 434:	e1 f7       	brne	.-8      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 436:	00 c0       	rjmp	.+0      	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 438:	00 00       	nop
	_delay_ms(6000);
	printf("AT+CIPMUX=1\r\n");
 43a:	86 e5       	ldi	r24, 0x56	; 86
 43c:	91 e0       	ldi	r25, 0x01	; 1
 43e:	0e 94 67 03 	call	0x6ce	; 0x6ce <puts>
 442:	2f ef       	ldi	r18, 0xFF	; 255
 444:	82 e5       	ldi	r24, 0x52	; 82
 446:	97 e0       	ldi	r25, 0x07	; 7
 448:	21 50       	subi	r18, 0x01	; 1
 44a:	80 40       	sbci	r24, 0x00	; 0
 44c:	90 40       	sbci	r25, 0x00	; 0
 44e:	e1 f7       	brne	.-8      	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
 450:	00 c0       	rjmp	.+0      	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 452:	00 00       	nop
	_delay_ms(200);
	rgb.set(0,1,0); // Led verte
 454:	20 e0       	ldi	r18, 0x00	; 0
 456:	41 e0       	ldi	r20, 0x01	; 1
 458:	60 e0       	ldi	r22, 0x00	; 0
 45a:	ce 01       	movw	r24, r28
 45c:	01 96       	adiw	r24, 0x01	; 1
 45e:	0e 94 ad 01 	call	0x35a	; 0x35a <_ZN3Led3setEbbb>
 462:	2f ef       	ldi	r18, 0xFF	; 255
 464:	82 e5       	ldi	r24, 0x52	; 82
 466:	97 e0       	ldi	r25, 0x07	; 7
 468:	21 50       	subi	r18, 0x01	; 1
 46a:	80 40       	sbci	r24, 0x00	; 0
 46c:	90 40       	sbci	r25, 0x00	; 0
 46e:	e1 f7       	brne	.-8      	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
 470:	00 c0       	rjmp	.+0      	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 472:	00 00       	nop
	
	while (1)
	{
		_delay_ms(200);	
		while(!btn.isPressed()){}
 474:	ce 01       	movw	r24, r28
 476:	02 96       	adiw	r24, 0x02	; 2
 478:	0e 94 6d 00 	call	0xda	; 0xda <_ZN6Button9isPressedEv>
 47c:	88 23       	and	r24, r24
 47e:	d1 f3       	breq	.-12     	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
		rgb.set(1,0,0);	// The led indicates that the module is busy
 480:	20 e0       	ldi	r18, 0x00	; 0
 482:	40 e0       	ldi	r20, 0x00	; 0
 484:	61 e0       	ldi	r22, 0x01	; 1
 486:	ce 01       	movw	r24, r28
 488:	01 96       	adiw	r24, 0x01	; 1
 48a:	0e 94 ad 01 	call	0x35a	; 0x35a <_ZN3Led3setEbbb>
		
		dsp.show(1); // Set display for first step(humidity)
 48e:	61 e0       	ldi	r22, 0x01	; 1
 490:	ce 01       	movw	r24, r28
 492:	03 96       	adiw	r24, 0x03	; 3
 494:	0e 94 77 01 	call	0x2ee	; 0x2ee <_ZN7Display4showEh>
		uint8_t hum = dht.getHum(); // Get temperature
 498:	ce 01       	movw	r24, r28
 49a:	06 96       	adiw	r24, 0x06	; 6
 49c:	0e 94 3d 01 	call	0x27a	; 0x27a <_ZN3DHT6getHumEv>
 4a0:	18 2f       	mov	r17, r24
		printf("AT+CIPSTART=0,\"TCP\",\"api.thingspeak.com\",80\r\n");
 4a2:	83 e6       	ldi	r24, 0x63	; 99
 4a4:	91 e0       	ldi	r25, 0x01	; 1
 4a6:	0e 94 67 03 	call	0x6ce	; 0x6ce <puts>
 4aa:	2f ef       	ldi	r18, 0xFF	; 255
 4ac:	82 e5       	ldi	r24, 0x52	; 82
 4ae:	97 e0       	ldi	r25, 0x07	; 7
 4b0:	21 50       	subi	r18, 0x01	; 1
 4b2:	80 40       	sbci	r24, 0x00	; 0
 4b4:	90 40       	sbci	r25, 0x00	; 0
 4b6:	e1 f7       	brne	.-8      	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
 4b8:	00 c0       	rjmp	.+0      	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
 4ba:	00 00       	nop
		_delay_ms(200);
		printf("AT+CIPSEND=0,49\r\n");
 4bc:	80 e9       	ldi	r24, 0x90	; 144
 4be:	91 e0       	ldi	r25, 0x01	; 1
 4c0:	0e 94 67 03 	call	0x6ce	; 0x6ce <puts>
 4c4:	2f ef       	ldi	r18, 0xFF	; 255
 4c6:	82 e5       	ldi	r24, 0x52	; 82
 4c8:	97 e0       	ldi	r25, 0x07	; 7
 4ca:	21 50       	subi	r18, 0x01	; 1
 4cc:	80 40       	sbci	r24, 0x00	; 0
 4ce:	90 40       	sbci	r25, 0x00	; 0
 4d0:	e1 f7       	brne	.-8      	; 0x4ca <__EEPROM_REGION_LENGTH__+0xca>
 4d2:	00 c0       	rjmp	.+0      	; 0x4d4 <__EEPROM_REGION_LENGTH__+0xd4>
 4d4:	00 00       	nop
		_delay_ms(200);
		printf("GET /update?api_key=7IQV2A0JQYCOPDL0&field2=%d\n\r", hum); // Send to Thingspeak API
 4d6:	1f 92       	push	r1
 4d8:	1f 93       	push	r17
 4da:	81 ea       	ldi	r24, 0xA1	; 161
 4dc:	91 e0       	ldi	r25, 0x01	; 1
 4de:	9f 93       	push	r25
 4e0:	8f 93       	push	r24
 4e2:	0e 94 51 03 	call	0x6a2	; 0x6a2 <printf>
 4e6:	2f ef       	ldi	r18, 0xFF	; 255
 4e8:	8d e3       	ldi	r24, 0x3D	; 61
 4ea:	99 e4       	ldi	r25, 0x49	; 73
 4ec:	21 50       	subi	r18, 0x01	; 1
 4ee:	80 40       	sbci	r24, 0x00	; 0
 4f0:	90 40       	sbci	r25, 0x00	; 0
 4f2:	e1 f7       	brne	.-8      	; 0x4ec <__EEPROM_REGION_LENGTH__+0xec>
 4f4:	00 c0       	rjmp	.+0      	; 0x4f6 <__EEPROM_REGION_LENGTH__+0xf6>
 4f6:	00 00       	nop
		
		_delay_ms(2000);		
		dsp.show(2); // Set display for second step(temperature)
 4f8:	62 e0       	ldi	r22, 0x02	; 2
 4fa:	ce 01       	movw	r24, r28
 4fc:	03 96       	adiw	r24, 0x03	; 3
 4fe:	0e 94 77 01 	call	0x2ee	; 0x2ee <_ZN7Display4showEh>
		uint8_t temp = dht.getTemp(); // Get temperature
 502:	ce 01       	movw	r24, r28
 504:	06 96       	adiw	r24, 0x06	; 6
 506:	0e 94 32 01 	call	0x264	; 0x264 <_ZN3DHT7getTempEv>
 50a:	18 2f       	mov	r17, r24
		printf("AT+CIPSTART=0,\"TCP\",\"api.thingspeak.com\",80\r\n");
 50c:	83 e6       	ldi	r24, 0x63	; 99
 50e:	91 e0       	ldi	r25, 0x01	; 1
 510:	0e 94 67 03 	call	0x6ce	; 0x6ce <puts>
 514:	2f ef       	ldi	r18, 0xFF	; 255
 516:	82 e5       	ldi	r24, 0x52	; 82
 518:	97 e0       	ldi	r25, 0x07	; 7
 51a:	21 50       	subi	r18, 0x01	; 1
 51c:	80 40       	sbci	r24, 0x00	; 0
 51e:	90 40       	sbci	r25, 0x00	; 0
 520:	e1 f7       	brne	.-8      	; 0x51a <__EEPROM_REGION_LENGTH__+0x11a>
 522:	00 c0       	rjmp	.+0      	; 0x524 <__EEPROM_REGION_LENGTH__+0x124>
 524:	00 00       	nop
		_delay_ms(200);
		printf("AT+CIPSEND=0,49\r\n");
 526:	80 e9       	ldi	r24, 0x90	; 144
 528:	91 e0       	ldi	r25, 0x01	; 1
 52a:	0e 94 67 03 	call	0x6ce	; 0x6ce <puts>
 52e:	2f ef       	ldi	r18, 0xFF	; 255
 530:	82 e5       	ldi	r24, 0x52	; 82
 532:	97 e0       	ldi	r25, 0x07	; 7
 534:	21 50       	subi	r18, 0x01	; 1
 536:	80 40       	sbci	r24, 0x00	; 0
 538:	90 40       	sbci	r25, 0x00	; 0
 53a:	e1 f7       	brne	.-8      	; 0x534 <__EEPROM_REGION_LENGTH__+0x134>
 53c:	00 c0       	rjmp	.+0      	; 0x53e <__EEPROM_REGION_LENGTH__+0x13e>
 53e:	00 00       	nop
		_delay_ms(200);
		printf("GET /update?api_key=7IQV2A0JQYCOPDL0&field1=%d\n\r", temp); // Send to Thingspeak API 
 540:	1f 92       	push	r1
 542:	1f 93       	push	r17
 544:	82 ed       	ldi	r24, 0xD2	; 210
 546:	91 e0       	ldi	r25, 0x01	; 1
 548:	9f 93       	push	r25
 54a:	8f 93       	push	r24
 54c:	0e 94 51 03 	call	0x6a2	; 0x6a2 <printf>
		
		
		
		rgb.set(0,1,0);
 550:	20 e0       	ldi	r18, 0x00	; 0
 552:	41 e0       	ldi	r20, 0x01	; 1
 554:	60 e0       	ldi	r22, 0x00	; 0
 556:	ce 01       	movw	r24, r28
 558:	01 96       	adiw	r24, 0x01	; 1
 55a:	0e 94 ad 01 	call	0x35a	; 0x35a <_ZN3Led3setEbbb>
		dsp.show(0); // Set display to default	
 55e:	60 e0       	ldi	r22, 0x00	; 0
 560:	ce 01       	movw	r24, r28
 562:	03 96       	adiw	r24, 0x03	; 3
 564:	0e 94 77 01 	call	0x2ee	; 0x2ee <_ZN7Display4showEh>
	_delay_ms(6000);
	printf("AT+CIPMUX=1\r\n");
	_delay_ms(200);
	rgb.set(0,1,0); // Led verte
	
	while (1)
 568:	0f b6       	in	r0, 0x3f	; 63
 56a:	f8 94       	cli
 56c:	de bf       	out	0x3e, r29	; 62
 56e:	0f be       	out	0x3f, r0	; 63
 570:	cd bf       	out	0x3d, r28	; 61
 572:	77 cf       	rjmp	.-274    	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>

00000574 <_ZN4Uart8sendByteEcP6__file>:
Uart::~Uart()
{
} //~Uart

int Uart::sendByte(char data, FILE *stream)
{
 574:	cf 93       	push	r28
 576:	c8 2f       	mov	r28, r24
	if(data == '\n')
 578:	8a 30       	cpi	r24, 0x0A	; 10
 57a:	29 f4       	brne	.+10     	; 0x586 <_ZN4Uart8sendByteEcP6__file+0x12>
		sendByte('\r',0);	
 57c:	60 e0       	ldi	r22, 0x00	; 0
 57e:	70 e0       	ldi	r23, 0x00	; 0
 580:	8d e0       	ldi	r24, 0x0D	; 13
 582:	0e 94 ba 02 	call	0x574	; 0x574 <_ZN4Uart8sendByteEcP6__file>
	while(!(UCSR0A & (1<<UDRE0))){};
 586:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 58a:	85 ff       	sbrs	r24, 5
 58c:	fc cf       	rjmp	.-8      	; 0x586 <_ZN4Uart8sendByteEcP6__file+0x12>
	UDR0 = data;
 58e:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	return 0;
}
 592:	80 e0       	ldi	r24, 0x00	; 0
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	cf 91       	pop	r28
 598:	08 95       	ret

0000059a <_ZN4Uart11receiveByteEP6__file>:

int Uart::receiveByte(FILE *stream)
{
	uint8_t data;
	while(!(UCSR0A & (1<<RXC0))){};
 59a:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 59e:	88 23       	and	r24, r24
 5a0:	e4 f7       	brge	.-8      	; 0x59a <_ZN4Uart11receiveByteEP6__file>
	data = UDR0;
 5a2:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	//USART_send_byte(u8data,stream);  //echo
	return data;
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	08 95       	ret

000005aa <_ZN4UartC1Ev>:


#include "Uart.h"

// default constructor
Uart::Uart()
 5aa:	cf 93       	push	r28
 5ac:	df 93       	push	r29
 5ae:	ec 01       	movw	r28, r24
{
	DDRD |= (1<<HTX);					// Tx as output (not necessary, when TXEN is set, also TX is set as output)
 5b0:	8a b1       	in	r24, 0x0a	; 10
 5b2:	82 60       	ori	r24, 0x02	; 2
 5b4:	8a b9       	out	0x0a, r24	; 10
	UBRR0H = (uint8_t)(UBRR_VALUE>>8);	// BAUDERATE
 5b6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (uint8_t)UBRR_VALUE;
 5ba:	8c e0       	ldi	r24, 0x0C	; 12
 5bc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	UCSR0C |= (1<<UCSZ01)|(1<<UCSZ00);  // 8 bits, no parity, 1 stop
 5c0:	e2 ec       	ldi	r30, 0xC2	; 194
 5c2:	f0 e0       	ldi	r31, 0x00	; 0
 5c4:	80 81       	ld	r24, Z
 5c6:	86 60       	ori	r24, 0x06	; 6
 5c8:	80 83       	st	Z, r24
	UCSR0B |= (1<<RXEN0)|(1<<TXEN0);	// enable rx and tx
 5ca:	e1 ec       	ldi	r30, 0xC1	; 193
 5cc:	f0 e0       	ldi	r31, 0x00	; 0
 5ce:	80 81       	ld	r24, Z
 5d0:	88 61       	ori	r24, 0x18	; 24
 5d2:	80 83       	st	Z, r24
	UCSR0A |= (1<<U2X0);				// double speed mode
 5d4:	e0 ec       	ldi	r30, 0xC0	; 192
 5d6:	f0 e0       	ldi	r31, 0x00	; 0
 5d8:	80 81       	ld	r24, Z
 5da:	82 60       	ori	r24, 0x02	; 2
 5dc:	80 83       	st	Z, r24
	
	uart_ptr = fdevopen(sendByte, receiveByte);		//send , receive methods
 5de:	6d ec       	ldi	r22, 0xCD	; 205
 5e0:	72 e0       	ldi	r23, 0x02	; 2
 5e2:	8a eb       	ldi	r24, 0xBA	; 186
 5e4:	92 e0       	ldi	r25, 0x02	; 2
 5e6:	0e 94 06 03 	call	0x60c	; 0x60c <fdevopen>
 5ea:	99 83       	std	Y+1, r25	; 0x01
 5ec:	88 83       	st	Y, r24
	stdout = stdin = uart_ptr;
 5ee:	e4 e0       	ldi	r30, 0x04	; 4
 5f0:	f2 e0       	ldi	r31, 0x02	; 2
 5f2:	91 83       	std	Z+1, r25	; 0x01
 5f4:	80 83       	st	Z, r24
 5f6:	93 83       	std	Z+3, r25	; 0x03
 5f8:	82 83       	std	Z+2, r24	; 0x02
} //Uart
 5fa:	df 91       	pop	r29
 5fc:	cf 91       	pop	r28
 5fe:	08 95       	ret

00000600 <__tablejump2__>:
 600:	ee 0f       	add	r30, r30
 602:	ff 1f       	adc	r31, r31
 604:	05 90       	lpm	r0, Z+
 606:	f4 91       	lpm	r31, Z
 608:	e0 2d       	mov	r30, r0
 60a:	09 94       	ijmp

0000060c <fdevopen>:
 60c:	0f 93       	push	r16
 60e:	1f 93       	push	r17
 610:	cf 93       	push	r28
 612:	df 93       	push	r29
 614:	00 97       	sbiw	r24, 0x00	; 0
 616:	31 f4       	brne	.+12     	; 0x624 <fdevopen+0x18>
 618:	61 15       	cp	r22, r1
 61a:	71 05       	cpc	r23, r1
 61c:	19 f4       	brne	.+6      	; 0x624 <fdevopen+0x18>
 61e:	80 e0       	ldi	r24, 0x00	; 0
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	3a c0       	rjmp	.+116    	; 0x698 <fdevopen+0x8c>
 624:	8b 01       	movw	r16, r22
 626:	ec 01       	movw	r28, r24
 628:	6e e0       	ldi	r22, 0x0E	; 14
 62a:	70 e0       	ldi	r23, 0x00	; 0
 62c:	81 e0       	ldi	r24, 0x01	; 1
 62e:	90 e0       	ldi	r25, 0x00	; 0
 630:	0e 94 78 05 	call	0xaf0	; 0xaf0 <calloc>
 634:	fc 01       	movw	r30, r24
 636:	89 2b       	or	r24, r25
 638:	91 f3       	breq	.-28     	; 0x61e <fdevopen+0x12>
 63a:	80 e8       	ldi	r24, 0x80	; 128
 63c:	83 83       	std	Z+3, r24	; 0x03
 63e:	01 15       	cp	r16, r1
 640:	11 05       	cpc	r17, r1
 642:	71 f0       	breq	.+28     	; 0x660 <fdevopen+0x54>
 644:	13 87       	std	Z+11, r17	; 0x0b
 646:	02 87       	std	Z+10, r16	; 0x0a
 648:	81 e8       	ldi	r24, 0x81	; 129
 64a:	83 83       	std	Z+3, r24	; 0x03
 64c:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <__data_end>
 650:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <__data_end+0x1>
 654:	89 2b       	or	r24, r25
 656:	21 f4       	brne	.+8      	; 0x660 <fdevopen+0x54>
 658:	f0 93 05 02 	sts	0x0205, r31	; 0x800205 <__data_end+0x1>
 65c:	e0 93 04 02 	sts	0x0204, r30	; 0x800204 <__data_end>
 660:	20 97       	sbiw	r28, 0x00	; 0
 662:	c9 f0       	breq	.+50     	; 0x696 <fdevopen+0x8a>
 664:	d1 87       	std	Z+9, r29	; 0x09
 666:	c0 87       	std	Z+8, r28	; 0x08
 668:	83 81       	ldd	r24, Z+3	; 0x03
 66a:	82 60       	ori	r24, 0x02	; 2
 66c:	83 83       	std	Z+3, r24	; 0x03
 66e:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <__data_end+0x2>
 672:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <__data_end+0x3>
 676:	89 2b       	or	r24, r25
 678:	71 f4       	brne	.+28     	; 0x696 <fdevopen+0x8a>
 67a:	f0 93 07 02 	sts	0x0207, r31	; 0x800207 <__data_end+0x3>
 67e:	e0 93 06 02 	sts	0x0206, r30	; 0x800206 <__data_end+0x2>
 682:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <__data_end+0x4>
 686:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <__data_end+0x5>
 68a:	89 2b       	or	r24, r25
 68c:	21 f4       	brne	.+8      	; 0x696 <fdevopen+0x8a>
 68e:	f0 93 09 02 	sts	0x0209, r31	; 0x800209 <__data_end+0x5>
 692:	e0 93 08 02 	sts	0x0208, r30	; 0x800208 <__data_end+0x4>
 696:	cf 01       	movw	r24, r30
 698:	df 91       	pop	r29
 69a:	cf 91       	pop	r28
 69c:	1f 91       	pop	r17
 69e:	0f 91       	pop	r16
 6a0:	08 95       	ret

000006a2 <printf>:
 6a2:	a0 e0       	ldi	r26, 0x00	; 0
 6a4:	b0 e0       	ldi	r27, 0x00	; 0
 6a6:	e7 e5       	ldi	r30, 0x57	; 87
 6a8:	f3 e0       	ldi	r31, 0x03	; 3
 6aa:	0c 94 7c 07 	jmp	0xef8	; 0xef8 <__prologue_saves__+0x20>
 6ae:	ae 01       	movw	r20, r28
 6b0:	4b 5f       	subi	r20, 0xFB	; 251
 6b2:	5f 4f       	sbci	r21, 0xFF	; 255
 6b4:	fa 01       	movw	r30, r20
 6b6:	61 91       	ld	r22, Z+
 6b8:	71 91       	ld	r23, Z+
 6ba:	af 01       	movw	r20, r30
 6bc:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <__data_end+0x2>
 6c0:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <__data_end+0x3>
 6c4:	0e 94 97 03 	call	0x72e	; 0x72e <vfprintf>
 6c8:	e2 e0       	ldi	r30, 0x02	; 2
 6ca:	0c 94 98 07 	jmp	0xf30	; 0xf30 <__epilogue_restores__+0x20>

000006ce <puts>:
 6ce:	0f 93       	push	r16
 6d0:	1f 93       	push	r17
 6d2:	cf 93       	push	r28
 6d4:	df 93       	push	r29
 6d6:	e0 91 06 02 	lds	r30, 0x0206	; 0x800206 <__data_end+0x2>
 6da:	f0 91 07 02 	lds	r31, 0x0207	; 0x800207 <__data_end+0x3>
 6de:	23 81       	ldd	r18, Z+3	; 0x03
 6e0:	21 ff       	sbrs	r18, 1
 6e2:	1b c0       	rjmp	.+54     	; 0x71a <puts+0x4c>
 6e4:	8c 01       	movw	r16, r24
 6e6:	d0 e0       	ldi	r29, 0x00	; 0
 6e8:	c0 e0       	ldi	r28, 0x00	; 0
 6ea:	f8 01       	movw	r30, r16
 6ec:	81 91       	ld	r24, Z+
 6ee:	8f 01       	movw	r16, r30
 6f0:	60 91 06 02 	lds	r22, 0x0206	; 0x800206 <__data_end+0x2>
 6f4:	70 91 07 02 	lds	r23, 0x0207	; 0x800207 <__data_end+0x3>
 6f8:	db 01       	movw	r26, r22
 6fa:	18 96       	adiw	r26, 0x08	; 8
 6fc:	ed 91       	ld	r30, X+
 6fe:	fc 91       	ld	r31, X
 700:	19 97       	sbiw	r26, 0x09	; 9
 702:	88 23       	and	r24, r24
 704:	31 f0       	breq	.+12     	; 0x712 <puts+0x44>
 706:	09 95       	icall
 708:	89 2b       	or	r24, r25
 70a:	79 f3       	breq	.-34     	; 0x6ea <puts+0x1c>
 70c:	df ef       	ldi	r29, 0xFF	; 255
 70e:	cf ef       	ldi	r28, 0xFF	; 255
 710:	ec cf       	rjmp	.-40     	; 0x6ea <puts+0x1c>
 712:	8a e0       	ldi	r24, 0x0A	; 10
 714:	09 95       	icall
 716:	89 2b       	or	r24, r25
 718:	19 f0       	breq	.+6      	; 0x720 <puts+0x52>
 71a:	8f ef       	ldi	r24, 0xFF	; 255
 71c:	9f ef       	ldi	r25, 0xFF	; 255
 71e:	02 c0       	rjmp	.+4      	; 0x724 <puts+0x56>
 720:	8d 2f       	mov	r24, r29
 722:	9c 2f       	mov	r25, r28
 724:	df 91       	pop	r29
 726:	cf 91       	pop	r28
 728:	1f 91       	pop	r17
 72a:	0f 91       	pop	r16
 72c:	08 95       	ret

0000072e <vfprintf>:
 72e:	ab e0       	ldi	r26, 0x0B	; 11
 730:	b0 e0       	ldi	r27, 0x00	; 0
 732:	ed e9       	ldi	r30, 0x9D	; 157
 734:	f3 e0       	ldi	r31, 0x03	; 3
 736:	0c 94 6c 07 	jmp	0xed8	; 0xed8 <__prologue_saves__>
 73a:	6c 01       	movw	r12, r24
 73c:	7b 01       	movw	r14, r22
 73e:	8a 01       	movw	r16, r20
 740:	fc 01       	movw	r30, r24
 742:	17 82       	std	Z+7, r1	; 0x07
 744:	16 82       	std	Z+6, r1	; 0x06
 746:	83 81       	ldd	r24, Z+3	; 0x03
 748:	81 ff       	sbrs	r24, 1
 74a:	cc c1       	rjmp	.+920    	; 0xae4 <__stack+0x1e5>
 74c:	ce 01       	movw	r24, r28
 74e:	01 96       	adiw	r24, 0x01	; 1
 750:	3c 01       	movw	r6, r24
 752:	f6 01       	movw	r30, r12
 754:	93 81       	ldd	r25, Z+3	; 0x03
 756:	f7 01       	movw	r30, r14
 758:	93 fd       	sbrc	r25, 3
 75a:	85 91       	lpm	r24, Z+
 75c:	93 ff       	sbrs	r25, 3
 75e:	81 91       	ld	r24, Z+
 760:	7f 01       	movw	r14, r30
 762:	88 23       	and	r24, r24
 764:	09 f4       	brne	.+2      	; 0x768 <vfprintf+0x3a>
 766:	ba c1       	rjmp	.+884    	; 0xadc <__stack+0x1dd>
 768:	85 32       	cpi	r24, 0x25	; 37
 76a:	39 f4       	brne	.+14     	; 0x77a <vfprintf+0x4c>
 76c:	93 fd       	sbrc	r25, 3
 76e:	85 91       	lpm	r24, Z+
 770:	93 ff       	sbrs	r25, 3
 772:	81 91       	ld	r24, Z+
 774:	7f 01       	movw	r14, r30
 776:	85 32       	cpi	r24, 0x25	; 37
 778:	29 f4       	brne	.+10     	; 0x784 <vfprintf+0x56>
 77a:	b6 01       	movw	r22, r12
 77c:	90 e0       	ldi	r25, 0x00	; 0
 77e:	0e 94 d2 06 	call	0xda4	; 0xda4 <fputc>
 782:	e7 cf       	rjmp	.-50     	; 0x752 <vfprintf+0x24>
 784:	91 2c       	mov	r9, r1
 786:	21 2c       	mov	r2, r1
 788:	31 2c       	mov	r3, r1
 78a:	ff e1       	ldi	r31, 0x1F	; 31
 78c:	f3 15       	cp	r31, r3
 78e:	d8 f0       	brcs	.+54     	; 0x7c6 <vfprintf+0x98>
 790:	8b 32       	cpi	r24, 0x2B	; 43
 792:	79 f0       	breq	.+30     	; 0x7b2 <vfprintf+0x84>
 794:	38 f4       	brcc	.+14     	; 0x7a4 <vfprintf+0x76>
 796:	80 32       	cpi	r24, 0x20	; 32
 798:	79 f0       	breq	.+30     	; 0x7b8 <vfprintf+0x8a>
 79a:	83 32       	cpi	r24, 0x23	; 35
 79c:	a1 f4       	brne	.+40     	; 0x7c6 <vfprintf+0x98>
 79e:	23 2d       	mov	r18, r3
 7a0:	20 61       	ori	r18, 0x10	; 16
 7a2:	1d c0       	rjmp	.+58     	; 0x7de <vfprintf+0xb0>
 7a4:	8d 32       	cpi	r24, 0x2D	; 45
 7a6:	61 f0       	breq	.+24     	; 0x7c0 <vfprintf+0x92>
 7a8:	80 33       	cpi	r24, 0x30	; 48
 7aa:	69 f4       	brne	.+26     	; 0x7c6 <vfprintf+0x98>
 7ac:	23 2d       	mov	r18, r3
 7ae:	21 60       	ori	r18, 0x01	; 1
 7b0:	16 c0       	rjmp	.+44     	; 0x7de <vfprintf+0xb0>
 7b2:	83 2d       	mov	r24, r3
 7b4:	82 60       	ori	r24, 0x02	; 2
 7b6:	38 2e       	mov	r3, r24
 7b8:	e3 2d       	mov	r30, r3
 7ba:	e4 60       	ori	r30, 0x04	; 4
 7bc:	3e 2e       	mov	r3, r30
 7be:	2a c0       	rjmp	.+84     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 7c0:	f3 2d       	mov	r31, r3
 7c2:	f8 60       	ori	r31, 0x08	; 8
 7c4:	1d c0       	rjmp	.+58     	; 0x800 <__DATA_REGION_LENGTH__>
 7c6:	37 fc       	sbrc	r3, 7
 7c8:	2d c0       	rjmp	.+90     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 7ca:	20 ed       	ldi	r18, 0xD0	; 208
 7cc:	28 0f       	add	r18, r24
 7ce:	2a 30       	cpi	r18, 0x0A	; 10
 7d0:	40 f0       	brcs	.+16     	; 0x7e2 <vfprintf+0xb4>
 7d2:	8e 32       	cpi	r24, 0x2E	; 46
 7d4:	b9 f4       	brne	.+46     	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 7d6:	36 fc       	sbrc	r3, 6
 7d8:	81 c1       	rjmp	.+770    	; 0xadc <__stack+0x1dd>
 7da:	23 2d       	mov	r18, r3
 7dc:	20 64       	ori	r18, 0x40	; 64
 7de:	32 2e       	mov	r3, r18
 7e0:	19 c0       	rjmp	.+50     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 7e2:	36 fe       	sbrs	r3, 6
 7e4:	06 c0       	rjmp	.+12     	; 0x7f2 <vfprintf+0xc4>
 7e6:	8a e0       	ldi	r24, 0x0A	; 10
 7e8:	98 9e       	mul	r9, r24
 7ea:	20 0d       	add	r18, r0
 7ec:	11 24       	eor	r1, r1
 7ee:	92 2e       	mov	r9, r18
 7f0:	11 c0       	rjmp	.+34     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 7f2:	ea e0       	ldi	r30, 0x0A	; 10
 7f4:	2e 9e       	mul	r2, r30
 7f6:	20 0d       	add	r18, r0
 7f8:	11 24       	eor	r1, r1
 7fa:	22 2e       	mov	r2, r18
 7fc:	f3 2d       	mov	r31, r3
 7fe:	f0 62       	ori	r31, 0x20	; 32
 800:	3f 2e       	mov	r3, r31
 802:	08 c0       	rjmp	.+16     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 804:	8c 36       	cpi	r24, 0x6C	; 108
 806:	21 f4       	brne	.+8      	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 808:	83 2d       	mov	r24, r3
 80a:	80 68       	ori	r24, 0x80	; 128
 80c:	38 2e       	mov	r3, r24
 80e:	02 c0       	rjmp	.+4      	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 810:	88 36       	cpi	r24, 0x68	; 104
 812:	41 f4       	brne	.+16     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 814:	f7 01       	movw	r30, r14
 816:	93 fd       	sbrc	r25, 3
 818:	85 91       	lpm	r24, Z+
 81a:	93 ff       	sbrs	r25, 3
 81c:	81 91       	ld	r24, Z+
 81e:	7f 01       	movw	r14, r30
 820:	81 11       	cpse	r24, r1
 822:	b3 cf       	rjmp	.-154    	; 0x78a <vfprintf+0x5c>
 824:	98 2f       	mov	r25, r24
 826:	9f 7d       	andi	r25, 0xDF	; 223
 828:	95 54       	subi	r25, 0x45	; 69
 82a:	93 30       	cpi	r25, 0x03	; 3
 82c:	28 f4       	brcc	.+10     	; 0x838 <__DATA_REGION_LENGTH__+0x38>
 82e:	0c 5f       	subi	r16, 0xFC	; 252
 830:	1f 4f       	sbci	r17, 0xFF	; 255
 832:	9f e3       	ldi	r25, 0x3F	; 63
 834:	99 83       	std	Y+1, r25	; 0x01
 836:	0d c0       	rjmp	.+26     	; 0x852 <__DATA_REGION_LENGTH__+0x52>
 838:	83 36       	cpi	r24, 0x63	; 99
 83a:	31 f0       	breq	.+12     	; 0x848 <__DATA_REGION_LENGTH__+0x48>
 83c:	83 37       	cpi	r24, 0x73	; 115
 83e:	71 f0       	breq	.+28     	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
 840:	83 35       	cpi	r24, 0x53	; 83
 842:	09 f0       	breq	.+2      	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 844:	59 c0       	rjmp	.+178    	; 0x8f8 <__DATA_REGION_LENGTH__+0xf8>
 846:	21 c0       	rjmp	.+66     	; 0x88a <__DATA_REGION_LENGTH__+0x8a>
 848:	f8 01       	movw	r30, r16
 84a:	80 81       	ld	r24, Z
 84c:	89 83       	std	Y+1, r24	; 0x01
 84e:	0e 5f       	subi	r16, 0xFE	; 254
 850:	1f 4f       	sbci	r17, 0xFF	; 255
 852:	88 24       	eor	r8, r8
 854:	83 94       	inc	r8
 856:	91 2c       	mov	r9, r1
 858:	53 01       	movw	r10, r6
 85a:	13 c0       	rjmp	.+38     	; 0x882 <__DATA_REGION_LENGTH__+0x82>
 85c:	28 01       	movw	r4, r16
 85e:	f2 e0       	ldi	r31, 0x02	; 2
 860:	4f 0e       	add	r4, r31
 862:	51 1c       	adc	r5, r1
 864:	f8 01       	movw	r30, r16
 866:	a0 80       	ld	r10, Z
 868:	b1 80       	ldd	r11, Z+1	; 0x01
 86a:	36 fe       	sbrs	r3, 6
 86c:	03 c0       	rjmp	.+6      	; 0x874 <__DATA_REGION_LENGTH__+0x74>
 86e:	69 2d       	mov	r22, r9
 870:	70 e0       	ldi	r23, 0x00	; 0
 872:	02 c0       	rjmp	.+4      	; 0x878 <__DATA_REGION_LENGTH__+0x78>
 874:	6f ef       	ldi	r22, 0xFF	; 255
 876:	7f ef       	ldi	r23, 0xFF	; 255
 878:	c5 01       	movw	r24, r10
 87a:	0e 94 c7 06 	call	0xd8e	; 0xd8e <strnlen>
 87e:	4c 01       	movw	r8, r24
 880:	82 01       	movw	r16, r4
 882:	f3 2d       	mov	r31, r3
 884:	ff 77       	andi	r31, 0x7F	; 127
 886:	3f 2e       	mov	r3, r31
 888:	16 c0       	rjmp	.+44     	; 0x8b6 <__DATA_REGION_LENGTH__+0xb6>
 88a:	28 01       	movw	r4, r16
 88c:	22 e0       	ldi	r18, 0x02	; 2
 88e:	42 0e       	add	r4, r18
 890:	51 1c       	adc	r5, r1
 892:	f8 01       	movw	r30, r16
 894:	a0 80       	ld	r10, Z
 896:	b1 80       	ldd	r11, Z+1	; 0x01
 898:	36 fe       	sbrs	r3, 6
 89a:	03 c0       	rjmp	.+6      	; 0x8a2 <__DATA_REGION_LENGTH__+0xa2>
 89c:	69 2d       	mov	r22, r9
 89e:	70 e0       	ldi	r23, 0x00	; 0
 8a0:	02 c0       	rjmp	.+4      	; 0x8a6 <__DATA_REGION_LENGTH__+0xa6>
 8a2:	6f ef       	ldi	r22, 0xFF	; 255
 8a4:	7f ef       	ldi	r23, 0xFF	; 255
 8a6:	c5 01       	movw	r24, r10
 8a8:	0e 94 b5 06 	call	0xd6a	; 0xd6a <strnlen_P>
 8ac:	4c 01       	movw	r8, r24
 8ae:	f3 2d       	mov	r31, r3
 8b0:	f0 68       	ori	r31, 0x80	; 128
 8b2:	3f 2e       	mov	r3, r31
 8b4:	82 01       	movw	r16, r4
 8b6:	33 fc       	sbrc	r3, 3
 8b8:	1b c0       	rjmp	.+54     	; 0x8f0 <__DATA_REGION_LENGTH__+0xf0>
 8ba:	82 2d       	mov	r24, r2
 8bc:	90 e0       	ldi	r25, 0x00	; 0
 8be:	88 16       	cp	r8, r24
 8c0:	99 06       	cpc	r9, r25
 8c2:	b0 f4       	brcc	.+44     	; 0x8f0 <__DATA_REGION_LENGTH__+0xf0>
 8c4:	b6 01       	movw	r22, r12
 8c6:	80 e2       	ldi	r24, 0x20	; 32
 8c8:	90 e0       	ldi	r25, 0x00	; 0
 8ca:	0e 94 d2 06 	call	0xda4	; 0xda4 <fputc>
 8ce:	2a 94       	dec	r2
 8d0:	f4 cf       	rjmp	.-24     	; 0x8ba <__DATA_REGION_LENGTH__+0xba>
 8d2:	f5 01       	movw	r30, r10
 8d4:	37 fc       	sbrc	r3, 7
 8d6:	85 91       	lpm	r24, Z+
 8d8:	37 fe       	sbrs	r3, 7
 8da:	81 91       	ld	r24, Z+
 8dc:	5f 01       	movw	r10, r30
 8de:	b6 01       	movw	r22, r12
 8e0:	90 e0       	ldi	r25, 0x00	; 0
 8e2:	0e 94 d2 06 	call	0xda4	; 0xda4 <fputc>
 8e6:	21 10       	cpse	r2, r1
 8e8:	2a 94       	dec	r2
 8ea:	21 e0       	ldi	r18, 0x01	; 1
 8ec:	82 1a       	sub	r8, r18
 8ee:	91 08       	sbc	r9, r1
 8f0:	81 14       	cp	r8, r1
 8f2:	91 04       	cpc	r9, r1
 8f4:	71 f7       	brne	.-36     	; 0x8d2 <__DATA_REGION_LENGTH__+0xd2>
 8f6:	e8 c0       	rjmp	.+464    	; 0xac8 <__stack+0x1c9>
 8f8:	84 36       	cpi	r24, 0x64	; 100
 8fa:	11 f0       	breq	.+4      	; 0x900 <__stack+0x1>
 8fc:	89 36       	cpi	r24, 0x69	; 105
 8fe:	41 f5       	brne	.+80     	; 0x950 <__stack+0x51>
 900:	f8 01       	movw	r30, r16
 902:	37 fe       	sbrs	r3, 7
 904:	07 c0       	rjmp	.+14     	; 0x914 <__stack+0x15>
 906:	60 81       	ld	r22, Z
 908:	71 81       	ldd	r23, Z+1	; 0x01
 90a:	82 81       	ldd	r24, Z+2	; 0x02
 90c:	93 81       	ldd	r25, Z+3	; 0x03
 90e:	0c 5f       	subi	r16, 0xFC	; 252
 910:	1f 4f       	sbci	r17, 0xFF	; 255
 912:	08 c0       	rjmp	.+16     	; 0x924 <__stack+0x25>
 914:	60 81       	ld	r22, Z
 916:	71 81       	ldd	r23, Z+1	; 0x01
 918:	07 2e       	mov	r0, r23
 91a:	00 0c       	add	r0, r0
 91c:	88 0b       	sbc	r24, r24
 91e:	99 0b       	sbc	r25, r25
 920:	0e 5f       	subi	r16, 0xFE	; 254
 922:	1f 4f       	sbci	r17, 0xFF	; 255
 924:	f3 2d       	mov	r31, r3
 926:	ff 76       	andi	r31, 0x6F	; 111
 928:	3f 2e       	mov	r3, r31
 92a:	97 ff       	sbrs	r25, 7
 92c:	09 c0       	rjmp	.+18     	; 0x940 <__stack+0x41>
 92e:	90 95       	com	r25
 930:	80 95       	com	r24
 932:	70 95       	com	r23
 934:	61 95       	neg	r22
 936:	7f 4f       	sbci	r23, 0xFF	; 255
 938:	8f 4f       	sbci	r24, 0xFF	; 255
 93a:	9f 4f       	sbci	r25, 0xFF	; 255
 93c:	f0 68       	ori	r31, 0x80	; 128
 93e:	3f 2e       	mov	r3, r31
 940:	2a e0       	ldi	r18, 0x0A	; 10
 942:	30 e0       	ldi	r19, 0x00	; 0
 944:	a3 01       	movw	r20, r6
 946:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__ultoa_invert>
 94a:	88 2e       	mov	r8, r24
 94c:	86 18       	sub	r8, r6
 94e:	45 c0       	rjmp	.+138    	; 0x9da <__stack+0xdb>
 950:	85 37       	cpi	r24, 0x75	; 117
 952:	31 f4       	brne	.+12     	; 0x960 <__stack+0x61>
 954:	23 2d       	mov	r18, r3
 956:	2f 7e       	andi	r18, 0xEF	; 239
 958:	b2 2e       	mov	r11, r18
 95a:	2a e0       	ldi	r18, 0x0A	; 10
 95c:	30 e0       	ldi	r19, 0x00	; 0
 95e:	25 c0       	rjmp	.+74     	; 0x9aa <__stack+0xab>
 960:	93 2d       	mov	r25, r3
 962:	99 7f       	andi	r25, 0xF9	; 249
 964:	b9 2e       	mov	r11, r25
 966:	8f 36       	cpi	r24, 0x6F	; 111
 968:	c1 f0       	breq	.+48     	; 0x99a <__stack+0x9b>
 96a:	18 f4       	brcc	.+6      	; 0x972 <__stack+0x73>
 96c:	88 35       	cpi	r24, 0x58	; 88
 96e:	79 f0       	breq	.+30     	; 0x98e <__stack+0x8f>
 970:	b5 c0       	rjmp	.+362    	; 0xadc <__stack+0x1dd>
 972:	80 37       	cpi	r24, 0x70	; 112
 974:	19 f0       	breq	.+6      	; 0x97c <__stack+0x7d>
 976:	88 37       	cpi	r24, 0x78	; 120
 978:	21 f0       	breq	.+8      	; 0x982 <__stack+0x83>
 97a:	b0 c0       	rjmp	.+352    	; 0xadc <__stack+0x1dd>
 97c:	e9 2f       	mov	r30, r25
 97e:	e0 61       	ori	r30, 0x10	; 16
 980:	be 2e       	mov	r11, r30
 982:	b4 fe       	sbrs	r11, 4
 984:	0d c0       	rjmp	.+26     	; 0x9a0 <__stack+0xa1>
 986:	fb 2d       	mov	r31, r11
 988:	f4 60       	ori	r31, 0x04	; 4
 98a:	bf 2e       	mov	r11, r31
 98c:	09 c0       	rjmp	.+18     	; 0x9a0 <__stack+0xa1>
 98e:	34 fe       	sbrs	r3, 4
 990:	0a c0       	rjmp	.+20     	; 0x9a6 <__stack+0xa7>
 992:	29 2f       	mov	r18, r25
 994:	26 60       	ori	r18, 0x06	; 6
 996:	b2 2e       	mov	r11, r18
 998:	06 c0       	rjmp	.+12     	; 0x9a6 <__stack+0xa7>
 99a:	28 e0       	ldi	r18, 0x08	; 8
 99c:	30 e0       	ldi	r19, 0x00	; 0
 99e:	05 c0       	rjmp	.+10     	; 0x9aa <__stack+0xab>
 9a0:	20 e1       	ldi	r18, 0x10	; 16
 9a2:	30 e0       	ldi	r19, 0x00	; 0
 9a4:	02 c0       	rjmp	.+4      	; 0x9aa <__stack+0xab>
 9a6:	20 e1       	ldi	r18, 0x10	; 16
 9a8:	32 e0       	ldi	r19, 0x02	; 2
 9aa:	f8 01       	movw	r30, r16
 9ac:	b7 fe       	sbrs	r11, 7
 9ae:	07 c0       	rjmp	.+14     	; 0x9be <__stack+0xbf>
 9b0:	60 81       	ld	r22, Z
 9b2:	71 81       	ldd	r23, Z+1	; 0x01
 9b4:	82 81       	ldd	r24, Z+2	; 0x02
 9b6:	93 81       	ldd	r25, Z+3	; 0x03
 9b8:	0c 5f       	subi	r16, 0xFC	; 252
 9ba:	1f 4f       	sbci	r17, 0xFF	; 255
 9bc:	06 c0       	rjmp	.+12     	; 0x9ca <__stack+0xcb>
 9be:	60 81       	ld	r22, Z
 9c0:	71 81       	ldd	r23, Z+1	; 0x01
 9c2:	80 e0       	ldi	r24, 0x00	; 0
 9c4:	90 e0       	ldi	r25, 0x00	; 0
 9c6:	0e 5f       	subi	r16, 0xFE	; 254
 9c8:	1f 4f       	sbci	r17, 0xFF	; 255
 9ca:	a3 01       	movw	r20, r6
 9cc:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__ultoa_invert>
 9d0:	88 2e       	mov	r8, r24
 9d2:	86 18       	sub	r8, r6
 9d4:	fb 2d       	mov	r31, r11
 9d6:	ff 77       	andi	r31, 0x7F	; 127
 9d8:	3f 2e       	mov	r3, r31
 9da:	36 fe       	sbrs	r3, 6
 9dc:	0d c0       	rjmp	.+26     	; 0x9f8 <__stack+0xf9>
 9de:	23 2d       	mov	r18, r3
 9e0:	2e 7f       	andi	r18, 0xFE	; 254
 9e2:	a2 2e       	mov	r10, r18
 9e4:	89 14       	cp	r8, r9
 9e6:	58 f4       	brcc	.+22     	; 0x9fe <__stack+0xff>
 9e8:	34 fe       	sbrs	r3, 4
 9ea:	0b c0       	rjmp	.+22     	; 0xa02 <__stack+0x103>
 9ec:	32 fc       	sbrc	r3, 2
 9ee:	09 c0       	rjmp	.+18     	; 0xa02 <__stack+0x103>
 9f0:	83 2d       	mov	r24, r3
 9f2:	8e 7e       	andi	r24, 0xEE	; 238
 9f4:	a8 2e       	mov	r10, r24
 9f6:	05 c0       	rjmp	.+10     	; 0xa02 <__stack+0x103>
 9f8:	b8 2c       	mov	r11, r8
 9fa:	a3 2c       	mov	r10, r3
 9fc:	03 c0       	rjmp	.+6      	; 0xa04 <__stack+0x105>
 9fe:	b8 2c       	mov	r11, r8
 a00:	01 c0       	rjmp	.+2      	; 0xa04 <__stack+0x105>
 a02:	b9 2c       	mov	r11, r9
 a04:	a4 fe       	sbrs	r10, 4
 a06:	0f c0       	rjmp	.+30     	; 0xa26 <__stack+0x127>
 a08:	fe 01       	movw	r30, r28
 a0a:	e8 0d       	add	r30, r8
 a0c:	f1 1d       	adc	r31, r1
 a0e:	80 81       	ld	r24, Z
 a10:	80 33       	cpi	r24, 0x30	; 48
 a12:	21 f4       	brne	.+8      	; 0xa1c <__stack+0x11d>
 a14:	9a 2d       	mov	r25, r10
 a16:	99 7e       	andi	r25, 0xE9	; 233
 a18:	a9 2e       	mov	r10, r25
 a1a:	09 c0       	rjmp	.+18     	; 0xa2e <__stack+0x12f>
 a1c:	a2 fe       	sbrs	r10, 2
 a1e:	06 c0       	rjmp	.+12     	; 0xa2c <__stack+0x12d>
 a20:	b3 94       	inc	r11
 a22:	b3 94       	inc	r11
 a24:	04 c0       	rjmp	.+8      	; 0xa2e <__stack+0x12f>
 a26:	8a 2d       	mov	r24, r10
 a28:	86 78       	andi	r24, 0x86	; 134
 a2a:	09 f0       	breq	.+2      	; 0xa2e <__stack+0x12f>
 a2c:	b3 94       	inc	r11
 a2e:	a3 fc       	sbrc	r10, 3
 a30:	11 c0       	rjmp	.+34     	; 0xa54 <__stack+0x155>
 a32:	a0 fe       	sbrs	r10, 0
 a34:	06 c0       	rjmp	.+12     	; 0xa42 <__stack+0x143>
 a36:	b2 14       	cp	r11, r2
 a38:	88 f4       	brcc	.+34     	; 0xa5c <__stack+0x15d>
 a3a:	28 0c       	add	r2, r8
 a3c:	92 2c       	mov	r9, r2
 a3e:	9b 18       	sub	r9, r11
 a40:	0e c0       	rjmp	.+28     	; 0xa5e <__stack+0x15f>
 a42:	b2 14       	cp	r11, r2
 a44:	60 f4       	brcc	.+24     	; 0xa5e <__stack+0x15f>
 a46:	b6 01       	movw	r22, r12
 a48:	80 e2       	ldi	r24, 0x20	; 32
 a4a:	90 e0       	ldi	r25, 0x00	; 0
 a4c:	0e 94 d2 06 	call	0xda4	; 0xda4 <fputc>
 a50:	b3 94       	inc	r11
 a52:	f7 cf       	rjmp	.-18     	; 0xa42 <__stack+0x143>
 a54:	b2 14       	cp	r11, r2
 a56:	18 f4       	brcc	.+6      	; 0xa5e <__stack+0x15f>
 a58:	2b 18       	sub	r2, r11
 a5a:	02 c0       	rjmp	.+4      	; 0xa60 <__stack+0x161>
 a5c:	98 2c       	mov	r9, r8
 a5e:	21 2c       	mov	r2, r1
 a60:	a4 fe       	sbrs	r10, 4
 a62:	10 c0       	rjmp	.+32     	; 0xa84 <__stack+0x185>
 a64:	b6 01       	movw	r22, r12
 a66:	80 e3       	ldi	r24, 0x30	; 48
 a68:	90 e0       	ldi	r25, 0x00	; 0
 a6a:	0e 94 d2 06 	call	0xda4	; 0xda4 <fputc>
 a6e:	a2 fe       	sbrs	r10, 2
 a70:	17 c0       	rjmp	.+46     	; 0xaa0 <__stack+0x1a1>
 a72:	a1 fc       	sbrc	r10, 1
 a74:	03 c0       	rjmp	.+6      	; 0xa7c <__stack+0x17d>
 a76:	88 e7       	ldi	r24, 0x78	; 120
 a78:	90 e0       	ldi	r25, 0x00	; 0
 a7a:	02 c0       	rjmp	.+4      	; 0xa80 <__stack+0x181>
 a7c:	88 e5       	ldi	r24, 0x58	; 88
 a7e:	90 e0       	ldi	r25, 0x00	; 0
 a80:	b6 01       	movw	r22, r12
 a82:	0c c0       	rjmp	.+24     	; 0xa9c <__stack+0x19d>
 a84:	8a 2d       	mov	r24, r10
 a86:	86 78       	andi	r24, 0x86	; 134
 a88:	59 f0       	breq	.+22     	; 0xaa0 <__stack+0x1a1>
 a8a:	a1 fe       	sbrs	r10, 1
 a8c:	02 c0       	rjmp	.+4      	; 0xa92 <__stack+0x193>
 a8e:	8b e2       	ldi	r24, 0x2B	; 43
 a90:	01 c0       	rjmp	.+2      	; 0xa94 <__stack+0x195>
 a92:	80 e2       	ldi	r24, 0x20	; 32
 a94:	a7 fc       	sbrc	r10, 7
 a96:	8d e2       	ldi	r24, 0x2D	; 45
 a98:	b6 01       	movw	r22, r12
 a9a:	90 e0       	ldi	r25, 0x00	; 0
 a9c:	0e 94 d2 06 	call	0xda4	; 0xda4 <fputc>
 aa0:	89 14       	cp	r8, r9
 aa2:	38 f4       	brcc	.+14     	; 0xab2 <__stack+0x1b3>
 aa4:	b6 01       	movw	r22, r12
 aa6:	80 e3       	ldi	r24, 0x30	; 48
 aa8:	90 e0       	ldi	r25, 0x00	; 0
 aaa:	0e 94 d2 06 	call	0xda4	; 0xda4 <fputc>
 aae:	9a 94       	dec	r9
 ab0:	f7 cf       	rjmp	.-18     	; 0xaa0 <__stack+0x1a1>
 ab2:	8a 94       	dec	r8
 ab4:	f3 01       	movw	r30, r6
 ab6:	e8 0d       	add	r30, r8
 ab8:	f1 1d       	adc	r31, r1
 aba:	80 81       	ld	r24, Z
 abc:	b6 01       	movw	r22, r12
 abe:	90 e0       	ldi	r25, 0x00	; 0
 ac0:	0e 94 d2 06 	call	0xda4	; 0xda4 <fputc>
 ac4:	81 10       	cpse	r8, r1
 ac6:	f5 cf       	rjmp	.-22     	; 0xab2 <__stack+0x1b3>
 ac8:	22 20       	and	r2, r2
 aca:	09 f4       	brne	.+2      	; 0xace <__stack+0x1cf>
 acc:	42 ce       	rjmp	.-892    	; 0x752 <vfprintf+0x24>
 ace:	b6 01       	movw	r22, r12
 ad0:	80 e2       	ldi	r24, 0x20	; 32
 ad2:	90 e0       	ldi	r25, 0x00	; 0
 ad4:	0e 94 d2 06 	call	0xda4	; 0xda4 <fputc>
 ad8:	2a 94       	dec	r2
 ada:	f6 cf       	rjmp	.-20     	; 0xac8 <__stack+0x1c9>
 adc:	f6 01       	movw	r30, r12
 ade:	86 81       	ldd	r24, Z+6	; 0x06
 ae0:	97 81       	ldd	r25, Z+7	; 0x07
 ae2:	02 c0       	rjmp	.+4      	; 0xae8 <__stack+0x1e9>
 ae4:	8f ef       	ldi	r24, 0xFF	; 255
 ae6:	9f ef       	ldi	r25, 0xFF	; 255
 ae8:	2b 96       	adiw	r28, 0x0b	; 11
 aea:	e2 e1       	ldi	r30, 0x12	; 18
 aec:	0c 94 88 07 	jmp	0xf10	; 0xf10 <__epilogue_restores__>

00000af0 <calloc>:
 af0:	0f 93       	push	r16
 af2:	1f 93       	push	r17
 af4:	cf 93       	push	r28
 af6:	df 93       	push	r29
 af8:	86 9f       	mul	r24, r22
 afa:	80 01       	movw	r16, r0
 afc:	87 9f       	mul	r24, r23
 afe:	10 0d       	add	r17, r0
 b00:	96 9f       	mul	r25, r22
 b02:	10 0d       	add	r17, r0
 b04:	11 24       	eor	r1, r1
 b06:	c8 01       	movw	r24, r16
 b08:	0e 94 94 05 	call	0xb28	; 0xb28 <malloc>
 b0c:	ec 01       	movw	r28, r24
 b0e:	00 97       	sbiw	r24, 0x00	; 0
 b10:	29 f0       	breq	.+10     	; 0xb1c <calloc+0x2c>
 b12:	a8 01       	movw	r20, r16
 b14:	60 e0       	ldi	r22, 0x00	; 0
 b16:	70 e0       	ldi	r23, 0x00	; 0
 b18:	0e 94 c0 06 	call	0xd80	; 0xd80 <memset>
 b1c:	ce 01       	movw	r24, r28
 b1e:	df 91       	pop	r29
 b20:	cf 91       	pop	r28
 b22:	1f 91       	pop	r17
 b24:	0f 91       	pop	r16
 b26:	08 95       	ret

00000b28 <malloc>:
 b28:	0f 93       	push	r16
 b2a:	1f 93       	push	r17
 b2c:	cf 93       	push	r28
 b2e:	df 93       	push	r29
 b30:	82 30       	cpi	r24, 0x02	; 2
 b32:	91 05       	cpc	r25, r1
 b34:	10 f4       	brcc	.+4      	; 0xb3a <malloc+0x12>
 b36:	82 e0       	ldi	r24, 0x02	; 2
 b38:	90 e0       	ldi	r25, 0x00	; 0
 b3a:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <__flp>
 b3e:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <__flp+0x1>
 b42:	20 e0       	ldi	r18, 0x00	; 0
 b44:	30 e0       	ldi	r19, 0x00	; 0
 b46:	a0 e0       	ldi	r26, 0x00	; 0
 b48:	b0 e0       	ldi	r27, 0x00	; 0
 b4a:	30 97       	sbiw	r30, 0x00	; 0
 b4c:	19 f1       	breq	.+70     	; 0xb94 <malloc+0x6c>
 b4e:	40 81       	ld	r20, Z
 b50:	51 81       	ldd	r21, Z+1	; 0x01
 b52:	02 81       	ldd	r16, Z+2	; 0x02
 b54:	13 81       	ldd	r17, Z+3	; 0x03
 b56:	48 17       	cp	r20, r24
 b58:	59 07       	cpc	r21, r25
 b5a:	c8 f0       	brcs	.+50     	; 0xb8e <malloc+0x66>
 b5c:	84 17       	cp	r24, r20
 b5e:	95 07       	cpc	r25, r21
 b60:	69 f4       	brne	.+26     	; 0xb7c <malloc+0x54>
 b62:	10 97       	sbiw	r26, 0x00	; 0
 b64:	31 f0       	breq	.+12     	; 0xb72 <malloc+0x4a>
 b66:	12 96       	adiw	r26, 0x02	; 2
 b68:	0c 93       	st	X, r16
 b6a:	12 97       	sbiw	r26, 0x02	; 2
 b6c:	13 96       	adiw	r26, 0x03	; 3
 b6e:	1c 93       	st	X, r17
 b70:	27 c0       	rjmp	.+78     	; 0xbc0 <malloc+0x98>
 b72:	00 93 0c 02 	sts	0x020C, r16	; 0x80020c <__flp>
 b76:	10 93 0d 02 	sts	0x020D, r17	; 0x80020d <__flp+0x1>
 b7a:	22 c0       	rjmp	.+68     	; 0xbc0 <malloc+0x98>
 b7c:	21 15       	cp	r18, r1
 b7e:	31 05       	cpc	r19, r1
 b80:	19 f0       	breq	.+6      	; 0xb88 <malloc+0x60>
 b82:	42 17       	cp	r20, r18
 b84:	53 07       	cpc	r21, r19
 b86:	18 f4       	brcc	.+6      	; 0xb8e <malloc+0x66>
 b88:	9a 01       	movw	r18, r20
 b8a:	bd 01       	movw	r22, r26
 b8c:	ef 01       	movw	r28, r30
 b8e:	df 01       	movw	r26, r30
 b90:	f8 01       	movw	r30, r16
 b92:	db cf       	rjmp	.-74     	; 0xb4a <malloc+0x22>
 b94:	21 15       	cp	r18, r1
 b96:	31 05       	cpc	r19, r1
 b98:	f9 f0       	breq	.+62     	; 0xbd8 <malloc+0xb0>
 b9a:	28 1b       	sub	r18, r24
 b9c:	39 0b       	sbc	r19, r25
 b9e:	24 30       	cpi	r18, 0x04	; 4
 ba0:	31 05       	cpc	r19, r1
 ba2:	80 f4       	brcc	.+32     	; 0xbc4 <malloc+0x9c>
 ba4:	8a 81       	ldd	r24, Y+2	; 0x02
 ba6:	9b 81       	ldd	r25, Y+3	; 0x03
 ba8:	61 15       	cp	r22, r1
 baa:	71 05       	cpc	r23, r1
 bac:	21 f0       	breq	.+8      	; 0xbb6 <malloc+0x8e>
 bae:	fb 01       	movw	r30, r22
 bb0:	93 83       	std	Z+3, r25	; 0x03
 bb2:	82 83       	std	Z+2, r24	; 0x02
 bb4:	04 c0       	rjmp	.+8      	; 0xbbe <malloc+0x96>
 bb6:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <__flp+0x1>
 bba:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <__flp>
 bbe:	fe 01       	movw	r30, r28
 bc0:	32 96       	adiw	r30, 0x02	; 2
 bc2:	44 c0       	rjmp	.+136    	; 0xc4c <malloc+0x124>
 bc4:	fe 01       	movw	r30, r28
 bc6:	e2 0f       	add	r30, r18
 bc8:	f3 1f       	adc	r31, r19
 bca:	81 93       	st	Z+, r24
 bcc:	91 93       	st	Z+, r25
 bce:	22 50       	subi	r18, 0x02	; 2
 bd0:	31 09       	sbc	r19, r1
 bd2:	39 83       	std	Y+1, r19	; 0x01
 bd4:	28 83       	st	Y, r18
 bd6:	3a c0       	rjmp	.+116    	; 0xc4c <malloc+0x124>
 bd8:	20 91 0a 02 	lds	r18, 0x020A	; 0x80020a <__brkval>
 bdc:	30 91 0b 02 	lds	r19, 0x020B	; 0x80020b <__brkval+0x1>
 be0:	23 2b       	or	r18, r19
 be2:	41 f4       	brne	.+16     	; 0xbf4 <malloc+0xcc>
 be4:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 be8:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 bec:	30 93 0b 02 	sts	0x020B, r19	; 0x80020b <__brkval+0x1>
 bf0:	20 93 0a 02 	sts	0x020A, r18	; 0x80020a <__brkval>
 bf4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 bf8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 bfc:	21 15       	cp	r18, r1
 bfe:	31 05       	cpc	r19, r1
 c00:	41 f4       	brne	.+16     	; 0xc12 <malloc+0xea>
 c02:	2d b7       	in	r18, 0x3d	; 61
 c04:	3e b7       	in	r19, 0x3e	; 62
 c06:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 c0a:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 c0e:	24 1b       	sub	r18, r20
 c10:	35 0b       	sbc	r19, r21
 c12:	e0 91 0a 02 	lds	r30, 0x020A	; 0x80020a <__brkval>
 c16:	f0 91 0b 02 	lds	r31, 0x020B	; 0x80020b <__brkval+0x1>
 c1a:	e2 17       	cp	r30, r18
 c1c:	f3 07       	cpc	r31, r19
 c1e:	a0 f4       	brcc	.+40     	; 0xc48 <malloc+0x120>
 c20:	2e 1b       	sub	r18, r30
 c22:	3f 0b       	sbc	r19, r31
 c24:	28 17       	cp	r18, r24
 c26:	39 07       	cpc	r19, r25
 c28:	78 f0       	brcs	.+30     	; 0xc48 <malloc+0x120>
 c2a:	ac 01       	movw	r20, r24
 c2c:	4e 5f       	subi	r20, 0xFE	; 254
 c2e:	5f 4f       	sbci	r21, 0xFF	; 255
 c30:	24 17       	cp	r18, r20
 c32:	35 07       	cpc	r19, r21
 c34:	48 f0       	brcs	.+18     	; 0xc48 <malloc+0x120>
 c36:	4e 0f       	add	r20, r30
 c38:	5f 1f       	adc	r21, r31
 c3a:	50 93 0b 02 	sts	0x020B, r21	; 0x80020b <__brkval+0x1>
 c3e:	40 93 0a 02 	sts	0x020A, r20	; 0x80020a <__brkval>
 c42:	81 93       	st	Z+, r24
 c44:	91 93       	st	Z+, r25
 c46:	02 c0       	rjmp	.+4      	; 0xc4c <malloc+0x124>
 c48:	e0 e0       	ldi	r30, 0x00	; 0
 c4a:	f0 e0       	ldi	r31, 0x00	; 0
 c4c:	cf 01       	movw	r24, r30
 c4e:	df 91       	pop	r29
 c50:	cf 91       	pop	r28
 c52:	1f 91       	pop	r17
 c54:	0f 91       	pop	r16
 c56:	08 95       	ret

00000c58 <free>:
 c58:	cf 93       	push	r28
 c5a:	df 93       	push	r29
 c5c:	00 97       	sbiw	r24, 0x00	; 0
 c5e:	09 f4       	brne	.+2      	; 0xc62 <free+0xa>
 c60:	81 c0       	rjmp	.+258    	; 0xd64 <free+0x10c>
 c62:	fc 01       	movw	r30, r24
 c64:	32 97       	sbiw	r30, 0x02	; 2
 c66:	13 82       	std	Z+3, r1	; 0x03
 c68:	12 82       	std	Z+2, r1	; 0x02
 c6a:	a0 91 0c 02 	lds	r26, 0x020C	; 0x80020c <__flp>
 c6e:	b0 91 0d 02 	lds	r27, 0x020D	; 0x80020d <__flp+0x1>
 c72:	10 97       	sbiw	r26, 0x00	; 0
 c74:	81 f4       	brne	.+32     	; 0xc96 <free+0x3e>
 c76:	20 81       	ld	r18, Z
 c78:	31 81       	ldd	r19, Z+1	; 0x01
 c7a:	82 0f       	add	r24, r18
 c7c:	93 1f       	adc	r25, r19
 c7e:	20 91 0a 02 	lds	r18, 0x020A	; 0x80020a <__brkval>
 c82:	30 91 0b 02 	lds	r19, 0x020B	; 0x80020b <__brkval+0x1>
 c86:	28 17       	cp	r18, r24
 c88:	39 07       	cpc	r19, r25
 c8a:	51 f5       	brne	.+84     	; 0xce0 <free+0x88>
 c8c:	f0 93 0b 02 	sts	0x020B, r31	; 0x80020b <__brkval+0x1>
 c90:	e0 93 0a 02 	sts	0x020A, r30	; 0x80020a <__brkval>
 c94:	67 c0       	rjmp	.+206    	; 0xd64 <free+0x10c>
 c96:	ed 01       	movw	r28, r26
 c98:	20 e0       	ldi	r18, 0x00	; 0
 c9a:	30 e0       	ldi	r19, 0x00	; 0
 c9c:	ce 17       	cp	r28, r30
 c9e:	df 07       	cpc	r29, r31
 ca0:	40 f4       	brcc	.+16     	; 0xcb2 <free+0x5a>
 ca2:	4a 81       	ldd	r20, Y+2	; 0x02
 ca4:	5b 81       	ldd	r21, Y+3	; 0x03
 ca6:	9e 01       	movw	r18, r28
 ca8:	41 15       	cp	r20, r1
 caa:	51 05       	cpc	r21, r1
 cac:	f1 f0       	breq	.+60     	; 0xcea <free+0x92>
 cae:	ea 01       	movw	r28, r20
 cb0:	f5 cf       	rjmp	.-22     	; 0xc9c <free+0x44>
 cb2:	d3 83       	std	Z+3, r29	; 0x03
 cb4:	c2 83       	std	Z+2, r28	; 0x02
 cb6:	40 81       	ld	r20, Z
 cb8:	51 81       	ldd	r21, Z+1	; 0x01
 cba:	84 0f       	add	r24, r20
 cbc:	95 1f       	adc	r25, r21
 cbe:	c8 17       	cp	r28, r24
 cc0:	d9 07       	cpc	r29, r25
 cc2:	59 f4       	brne	.+22     	; 0xcda <free+0x82>
 cc4:	88 81       	ld	r24, Y
 cc6:	99 81       	ldd	r25, Y+1	; 0x01
 cc8:	84 0f       	add	r24, r20
 cca:	95 1f       	adc	r25, r21
 ccc:	02 96       	adiw	r24, 0x02	; 2
 cce:	91 83       	std	Z+1, r25	; 0x01
 cd0:	80 83       	st	Z, r24
 cd2:	8a 81       	ldd	r24, Y+2	; 0x02
 cd4:	9b 81       	ldd	r25, Y+3	; 0x03
 cd6:	93 83       	std	Z+3, r25	; 0x03
 cd8:	82 83       	std	Z+2, r24	; 0x02
 cda:	21 15       	cp	r18, r1
 cdc:	31 05       	cpc	r19, r1
 cde:	29 f4       	brne	.+10     	; 0xcea <free+0x92>
 ce0:	f0 93 0d 02 	sts	0x020D, r31	; 0x80020d <__flp+0x1>
 ce4:	e0 93 0c 02 	sts	0x020C, r30	; 0x80020c <__flp>
 ce8:	3d c0       	rjmp	.+122    	; 0xd64 <free+0x10c>
 cea:	e9 01       	movw	r28, r18
 cec:	fb 83       	std	Y+3, r31	; 0x03
 cee:	ea 83       	std	Y+2, r30	; 0x02
 cf0:	49 91       	ld	r20, Y+
 cf2:	59 91       	ld	r21, Y+
 cf4:	c4 0f       	add	r28, r20
 cf6:	d5 1f       	adc	r29, r21
 cf8:	ec 17       	cp	r30, r28
 cfa:	fd 07       	cpc	r31, r29
 cfc:	61 f4       	brne	.+24     	; 0xd16 <free+0xbe>
 cfe:	80 81       	ld	r24, Z
 d00:	91 81       	ldd	r25, Z+1	; 0x01
 d02:	84 0f       	add	r24, r20
 d04:	95 1f       	adc	r25, r21
 d06:	02 96       	adiw	r24, 0x02	; 2
 d08:	e9 01       	movw	r28, r18
 d0a:	99 83       	std	Y+1, r25	; 0x01
 d0c:	88 83       	st	Y, r24
 d0e:	82 81       	ldd	r24, Z+2	; 0x02
 d10:	93 81       	ldd	r25, Z+3	; 0x03
 d12:	9b 83       	std	Y+3, r25	; 0x03
 d14:	8a 83       	std	Y+2, r24	; 0x02
 d16:	e0 e0       	ldi	r30, 0x00	; 0
 d18:	f0 e0       	ldi	r31, 0x00	; 0
 d1a:	12 96       	adiw	r26, 0x02	; 2
 d1c:	8d 91       	ld	r24, X+
 d1e:	9c 91       	ld	r25, X
 d20:	13 97       	sbiw	r26, 0x03	; 3
 d22:	00 97       	sbiw	r24, 0x00	; 0
 d24:	19 f0       	breq	.+6      	; 0xd2c <free+0xd4>
 d26:	fd 01       	movw	r30, r26
 d28:	dc 01       	movw	r26, r24
 d2a:	f7 cf       	rjmp	.-18     	; 0xd1a <free+0xc2>
 d2c:	8d 91       	ld	r24, X+
 d2e:	9c 91       	ld	r25, X
 d30:	11 97       	sbiw	r26, 0x01	; 1
 d32:	9d 01       	movw	r18, r26
 d34:	2e 5f       	subi	r18, 0xFE	; 254
 d36:	3f 4f       	sbci	r19, 0xFF	; 255
 d38:	82 0f       	add	r24, r18
 d3a:	93 1f       	adc	r25, r19
 d3c:	20 91 0a 02 	lds	r18, 0x020A	; 0x80020a <__brkval>
 d40:	30 91 0b 02 	lds	r19, 0x020B	; 0x80020b <__brkval+0x1>
 d44:	28 17       	cp	r18, r24
 d46:	39 07       	cpc	r19, r25
 d48:	69 f4       	brne	.+26     	; 0xd64 <free+0x10c>
 d4a:	30 97       	sbiw	r30, 0x00	; 0
 d4c:	29 f4       	brne	.+10     	; 0xd58 <free+0x100>
 d4e:	10 92 0d 02 	sts	0x020D, r1	; 0x80020d <__flp+0x1>
 d52:	10 92 0c 02 	sts	0x020C, r1	; 0x80020c <__flp>
 d56:	02 c0       	rjmp	.+4      	; 0xd5c <free+0x104>
 d58:	13 82       	std	Z+3, r1	; 0x03
 d5a:	12 82       	std	Z+2, r1	; 0x02
 d5c:	b0 93 0b 02 	sts	0x020B, r27	; 0x80020b <__brkval+0x1>
 d60:	a0 93 0a 02 	sts	0x020A, r26	; 0x80020a <__brkval>
 d64:	df 91       	pop	r29
 d66:	cf 91       	pop	r28
 d68:	08 95       	ret

00000d6a <strnlen_P>:
 d6a:	fc 01       	movw	r30, r24
 d6c:	05 90       	lpm	r0, Z+
 d6e:	61 50       	subi	r22, 0x01	; 1
 d70:	70 40       	sbci	r23, 0x00	; 0
 d72:	01 10       	cpse	r0, r1
 d74:	d8 f7       	brcc	.-10     	; 0xd6c <strnlen_P+0x2>
 d76:	80 95       	com	r24
 d78:	90 95       	com	r25
 d7a:	8e 0f       	add	r24, r30
 d7c:	9f 1f       	adc	r25, r31
 d7e:	08 95       	ret

00000d80 <memset>:
 d80:	dc 01       	movw	r26, r24
 d82:	01 c0       	rjmp	.+2      	; 0xd86 <memset+0x6>
 d84:	6d 93       	st	X+, r22
 d86:	41 50       	subi	r20, 0x01	; 1
 d88:	50 40       	sbci	r21, 0x00	; 0
 d8a:	e0 f7       	brcc	.-8      	; 0xd84 <memset+0x4>
 d8c:	08 95       	ret

00000d8e <strnlen>:
 d8e:	fc 01       	movw	r30, r24
 d90:	61 50       	subi	r22, 0x01	; 1
 d92:	70 40       	sbci	r23, 0x00	; 0
 d94:	01 90       	ld	r0, Z+
 d96:	01 10       	cpse	r0, r1
 d98:	d8 f7       	brcc	.-10     	; 0xd90 <strnlen+0x2>
 d9a:	80 95       	com	r24
 d9c:	90 95       	com	r25
 d9e:	8e 0f       	add	r24, r30
 da0:	9f 1f       	adc	r25, r31
 da2:	08 95       	ret

00000da4 <fputc>:
 da4:	0f 93       	push	r16
 da6:	1f 93       	push	r17
 da8:	cf 93       	push	r28
 daa:	df 93       	push	r29
 dac:	fb 01       	movw	r30, r22
 dae:	23 81       	ldd	r18, Z+3	; 0x03
 db0:	21 fd       	sbrc	r18, 1
 db2:	03 c0       	rjmp	.+6      	; 0xdba <fputc+0x16>
 db4:	8f ef       	ldi	r24, 0xFF	; 255
 db6:	9f ef       	ldi	r25, 0xFF	; 255
 db8:	2c c0       	rjmp	.+88     	; 0xe12 <fputc+0x6e>
 dba:	22 ff       	sbrs	r18, 2
 dbc:	16 c0       	rjmp	.+44     	; 0xdea <fputc+0x46>
 dbe:	46 81       	ldd	r20, Z+6	; 0x06
 dc0:	57 81       	ldd	r21, Z+7	; 0x07
 dc2:	24 81       	ldd	r18, Z+4	; 0x04
 dc4:	35 81       	ldd	r19, Z+5	; 0x05
 dc6:	42 17       	cp	r20, r18
 dc8:	53 07       	cpc	r21, r19
 dca:	44 f4       	brge	.+16     	; 0xddc <fputc+0x38>
 dcc:	a0 81       	ld	r26, Z
 dce:	b1 81       	ldd	r27, Z+1	; 0x01
 dd0:	9d 01       	movw	r18, r26
 dd2:	2f 5f       	subi	r18, 0xFF	; 255
 dd4:	3f 4f       	sbci	r19, 0xFF	; 255
 dd6:	31 83       	std	Z+1, r19	; 0x01
 dd8:	20 83       	st	Z, r18
 dda:	8c 93       	st	X, r24
 ddc:	26 81       	ldd	r18, Z+6	; 0x06
 dde:	37 81       	ldd	r19, Z+7	; 0x07
 de0:	2f 5f       	subi	r18, 0xFF	; 255
 de2:	3f 4f       	sbci	r19, 0xFF	; 255
 de4:	37 83       	std	Z+7, r19	; 0x07
 de6:	26 83       	std	Z+6, r18	; 0x06
 de8:	14 c0       	rjmp	.+40     	; 0xe12 <fputc+0x6e>
 dea:	8b 01       	movw	r16, r22
 dec:	ec 01       	movw	r28, r24
 dee:	fb 01       	movw	r30, r22
 df0:	00 84       	ldd	r0, Z+8	; 0x08
 df2:	f1 85       	ldd	r31, Z+9	; 0x09
 df4:	e0 2d       	mov	r30, r0
 df6:	09 95       	icall
 df8:	89 2b       	or	r24, r25
 dfa:	e1 f6       	brne	.-72     	; 0xdb4 <fputc+0x10>
 dfc:	d8 01       	movw	r26, r16
 dfe:	16 96       	adiw	r26, 0x06	; 6
 e00:	8d 91       	ld	r24, X+
 e02:	9c 91       	ld	r25, X
 e04:	17 97       	sbiw	r26, 0x07	; 7
 e06:	01 96       	adiw	r24, 0x01	; 1
 e08:	17 96       	adiw	r26, 0x07	; 7
 e0a:	9c 93       	st	X, r25
 e0c:	8e 93       	st	-X, r24
 e0e:	16 97       	sbiw	r26, 0x06	; 6
 e10:	ce 01       	movw	r24, r28
 e12:	df 91       	pop	r29
 e14:	cf 91       	pop	r28
 e16:	1f 91       	pop	r17
 e18:	0f 91       	pop	r16
 e1a:	08 95       	ret

00000e1c <__ultoa_invert>:
 e1c:	fa 01       	movw	r30, r20
 e1e:	aa 27       	eor	r26, r26
 e20:	28 30       	cpi	r18, 0x08	; 8
 e22:	51 f1       	breq	.+84     	; 0xe78 <__ultoa_invert+0x5c>
 e24:	20 31       	cpi	r18, 0x10	; 16
 e26:	81 f1       	breq	.+96     	; 0xe88 <__ultoa_invert+0x6c>
 e28:	e8 94       	clt
 e2a:	6f 93       	push	r22
 e2c:	6e 7f       	andi	r22, 0xFE	; 254
 e2e:	6e 5f       	subi	r22, 0xFE	; 254
 e30:	7f 4f       	sbci	r23, 0xFF	; 255
 e32:	8f 4f       	sbci	r24, 0xFF	; 255
 e34:	9f 4f       	sbci	r25, 0xFF	; 255
 e36:	af 4f       	sbci	r26, 0xFF	; 255
 e38:	b1 e0       	ldi	r27, 0x01	; 1
 e3a:	3e d0       	rcall	.+124    	; 0xeb8 <__ultoa_invert+0x9c>
 e3c:	b4 e0       	ldi	r27, 0x04	; 4
 e3e:	3c d0       	rcall	.+120    	; 0xeb8 <__ultoa_invert+0x9c>
 e40:	67 0f       	add	r22, r23
 e42:	78 1f       	adc	r23, r24
 e44:	89 1f       	adc	r24, r25
 e46:	9a 1f       	adc	r25, r26
 e48:	a1 1d       	adc	r26, r1
 e4a:	68 0f       	add	r22, r24
 e4c:	79 1f       	adc	r23, r25
 e4e:	8a 1f       	adc	r24, r26
 e50:	91 1d       	adc	r25, r1
 e52:	a1 1d       	adc	r26, r1
 e54:	6a 0f       	add	r22, r26
 e56:	71 1d       	adc	r23, r1
 e58:	81 1d       	adc	r24, r1
 e5a:	91 1d       	adc	r25, r1
 e5c:	a1 1d       	adc	r26, r1
 e5e:	20 d0       	rcall	.+64     	; 0xea0 <__ultoa_invert+0x84>
 e60:	09 f4       	brne	.+2      	; 0xe64 <__ultoa_invert+0x48>
 e62:	68 94       	set
 e64:	3f 91       	pop	r19
 e66:	2a e0       	ldi	r18, 0x0A	; 10
 e68:	26 9f       	mul	r18, r22
 e6a:	11 24       	eor	r1, r1
 e6c:	30 19       	sub	r19, r0
 e6e:	30 5d       	subi	r19, 0xD0	; 208
 e70:	31 93       	st	Z+, r19
 e72:	de f6       	brtc	.-74     	; 0xe2a <__ultoa_invert+0xe>
 e74:	cf 01       	movw	r24, r30
 e76:	08 95       	ret
 e78:	46 2f       	mov	r20, r22
 e7a:	47 70       	andi	r20, 0x07	; 7
 e7c:	40 5d       	subi	r20, 0xD0	; 208
 e7e:	41 93       	st	Z+, r20
 e80:	b3 e0       	ldi	r27, 0x03	; 3
 e82:	0f d0       	rcall	.+30     	; 0xea2 <__ultoa_invert+0x86>
 e84:	c9 f7       	brne	.-14     	; 0xe78 <__ultoa_invert+0x5c>
 e86:	f6 cf       	rjmp	.-20     	; 0xe74 <__ultoa_invert+0x58>
 e88:	46 2f       	mov	r20, r22
 e8a:	4f 70       	andi	r20, 0x0F	; 15
 e8c:	40 5d       	subi	r20, 0xD0	; 208
 e8e:	4a 33       	cpi	r20, 0x3A	; 58
 e90:	18 f0       	brcs	.+6      	; 0xe98 <__ultoa_invert+0x7c>
 e92:	49 5d       	subi	r20, 0xD9	; 217
 e94:	31 fd       	sbrc	r19, 1
 e96:	40 52       	subi	r20, 0x20	; 32
 e98:	41 93       	st	Z+, r20
 e9a:	02 d0       	rcall	.+4      	; 0xea0 <__ultoa_invert+0x84>
 e9c:	a9 f7       	brne	.-22     	; 0xe88 <__ultoa_invert+0x6c>
 e9e:	ea cf       	rjmp	.-44     	; 0xe74 <__ultoa_invert+0x58>
 ea0:	b4 e0       	ldi	r27, 0x04	; 4
 ea2:	a6 95       	lsr	r26
 ea4:	97 95       	ror	r25
 ea6:	87 95       	ror	r24
 ea8:	77 95       	ror	r23
 eaa:	67 95       	ror	r22
 eac:	ba 95       	dec	r27
 eae:	c9 f7       	brne	.-14     	; 0xea2 <__ultoa_invert+0x86>
 eb0:	00 97       	sbiw	r24, 0x00	; 0
 eb2:	61 05       	cpc	r22, r1
 eb4:	71 05       	cpc	r23, r1
 eb6:	08 95       	ret
 eb8:	9b 01       	movw	r18, r22
 eba:	ac 01       	movw	r20, r24
 ebc:	0a 2e       	mov	r0, r26
 ebe:	06 94       	lsr	r0
 ec0:	57 95       	ror	r21
 ec2:	47 95       	ror	r20
 ec4:	37 95       	ror	r19
 ec6:	27 95       	ror	r18
 ec8:	ba 95       	dec	r27
 eca:	c9 f7       	brne	.-14     	; 0xebe <__ultoa_invert+0xa2>
 ecc:	62 0f       	add	r22, r18
 ece:	73 1f       	adc	r23, r19
 ed0:	84 1f       	adc	r24, r20
 ed2:	95 1f       	adc	r25, r21
 ed4:	a0 1d       	adc	r26, r0
 ed6:	08 95       	ret

00000ed8 <__prologue_saves__>:
 ed8:	2f 92       	push	r2
 eda:	3f 92       	push	r3
 edc:	4f 92       	push	r4
 ede:	5f 92       	push	r5
 ee0:	6f 92       	push	r6
 ee2:	7f 92       	push	r7
 ee4:	8f 92       	push	r8
 ee6:	9f 92       	push	r9
 ee8:	af 92       	push	r10
 eea:	bf 92       	push	r11
 eec:	cf 92       	push	r12
 eee:	df 92       	push	r13
 ef0:	ef 92       	push	r14
 ef2:	ff 92       	push	r15
 ef4:	0f 93       	push	r16
 ef6:	1f 93       	push	r17
 ef8:	cf 93       	push	r28
 efa:	df 93       	push	r29
 efc:	cd b7       	in	r28, 0x3d	; 61
 efe:	de b7       	in	r29, 0x3e	; 62
 f00:	ca 1b       	sub	r28, r26
 f02:	db 0b       	sbc	r29, r27
 f04:	0f b6       	in	r0, 0x3f	; 63
 f06:	f8 94       	cli
 f08:	de bf       	out	0x3e, r29	; 62
 f0a:	0f be       	out	0x3f, r0	; 63
 f0c:	cd bf       	out	0x3d, r28	; 61
 f0e:	09 94       	ijmp

00000f10 <__epilogue_restores__>:
 f10:	2a 88       	ldd	r2, Y+18	; 0x12
 f12:	39 88       	ldd	r3, Y+17	; 0x11
 f14:	48 88       	ldd	r4, Y+16	; 0x10
 f16:	5f 84       	ldd	r5, Y+15	; 0x0f
 f18:	6e 84       	ldd	r6, Y+14	; 0x0e
 f1a:	7d 84       	ldd	r7, Y+13	; 0x0d
 f1c:	8c 84       	ldd	r8, Y+12	; 0x0c
 f1e:	9b 84       	ldd	r9, Y+11	; 0x0b
 f20:	aa 84       	ldd	r10, Y+10	; 0x0a
 f22:	b9 84       	ldd	r11, Y+9	; 0x09
 f24:	c8 84       	ldd	r12, Y+8	; 0x08
 f26:	df 80       	ldd	r13, Y+7	; 0x07
 f28:	ee 80       	ldd	r14, Y+6	; 0x06
 f2a:	fd 80       	ldd	r15, Y+5	; 0x05
 f2c:	0c 81       	ldd	r16, Y+4	; 0x04
 f2e:	1b 81       	ldd	r17, Y+3	; 0x03
 f30:	aa 81       	ldd	r26, Y+2	; 0x02
 f32:	b9 81       	ldd	r27, Y+1	; 0x01
 f34:	ce 0f       	add	r28, r30
 f36:	d1 1d       	adc	r29, r1
 f38:	0f b6       	in	r0, 0x3f	; 63
 f3a:	f8 94       	cli
 f3c:	de bf       	out	0x3e, r29	; 62
 f3e:	0f be       	out	0x3f, r0	; 63
 f40:	cd bf       	out	0x3d, r28	; 61
 f42:	ed 01       	movw	r28, r26
 f44:	08 95       	ret

00000f46 <_exit>:
 f46:	f8 94       	cli

00000f48 <__stop_program>:
 f48:	ff cf       	rjmp	.-2      	; 0xf48 <__stop_program>
