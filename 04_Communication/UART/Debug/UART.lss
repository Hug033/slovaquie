
UART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000104  00800100  00000fb2  00001046  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000fb2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800204  00800204  0000114a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000114a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000011a8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000178  00000000  00000000  000011e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000028ad  00000000  00000000  00001360  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000135a  00000000  00000000  00003c0d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f62  00000000  00000000  00004f67  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002b4  00000000  00000000  00005ecc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007f3  00000000  00000000  00006180  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000010f8  00000000  00000000  00006973  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000120  00000000  00000000  00007a6b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 47 00 	jmp	0x8e	; 0x8e <__ctors_end>
   4:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
   8:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
   c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  10:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  14:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  18:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  1c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  20:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  24:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  28:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  2c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  30:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  34:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  38:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  3c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  40:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  44:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  48:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  4c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  50:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  54:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  58:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  5c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  60:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  64:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  68:	a6 01       	movw	r20, r12
  6a:	cc 01       	movw	r24, r24
  6c:	a8 01       	movw	r20, r16
  6e:	aa 01       	movw	r20, r20
  70:	ac 01       	movw	r20, r24
  72:	ae 01       	movw	r20, r28
  74:	b0 01       	movw	r22, r0
  76:	b2 01       	movw	r22, r4
  78:	b4 01       	movw	r22, r8
  7a:	b6 01       	movw	r22, r12
  7c:	b8 01       	movw	r22, r16
  7e:	ba 01       	movw	r22, r20
  80:	bc 01       	movw	r22, r24
  82:	be 01       	movw	r22, r28
  84:	c0 01       	movw	r24, r0
  86:	c2 01       	movw	r24, r4
  88:	c4 01       	movw	r24, r8
  8a:	c6 01       	movw	r24, r12
  8c:	c8 01       	movw	r24, r16

0000008e <__ctors_end>:
  8e:	11 24       	eor	r1, r1
  90:	1f be       	out	0x3f, r1	; 63
  92:	cf ef       	ldi	r28, 0xFF	; 255
  94:	d8 e0       	ldi	r29, 0x08	; 8
  96:	de bf       	out	0x3e, r29	; 62
  98:	cd bf       	out	0x3d, r28	; 61

0000009a <__do_copy_data>:
  9a:	12 e0       	ldi	r17, 0x02	; 2
  9c:	a0 e0       	ldi	r26, 0x00	; 0
  9e:	b1 e0       	ldi	r27, 0x01	; 1
  a0:	e2 eb       	ldi	r30, 0xB2	; 178
  a2:	ff e0       	ldi	r31, 0x0F	; 15
  a4:	02 c0       	rjmp	.+4      	; 0xaa <__do_copy_data+0x10>
  a6:	05 90       	lpm	r0, Z+
  a8:	0d 92       	st	X+, r0
  aa:	a4 30       	cpi	r26, 0x04	; 4
  ac:	b1 07       	cpc	r27, r17
  ae:	d9 f7       	brne	.-10     	; 0xa6 <__do_copy_data+0xc>

000000b0 <__do_clear_bss>:
  b0:	22 e0       	ldi	r18, 0x02	; 2
  b2:	a4 e0       	ldi	r26, 0x04	; 4
  b4:	b2 e0       	ldi	r27, 0x02	; 2
  b6:	01 c0       	rjmp	.+2      	; 0xba <.do_clear_bss_start>

000000b8 <.do_clear_bss_loop>:
  b8:	1d 92       	st	X+, r1

000000ba <.do_clear_bss_start>:
  ba:	ae 30       	cpi	r26, 0x0E	; 14
  bc:	b2 07       	cpc	r27, r18
  be:	e1 f7       	brne	.-8      	; 0xb8 <.do_clear_bss_loop>
  c0:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <main>
  c4:	0c 94 d7 07 	jmp	0xfae	; 0xfae <_exit>

000000c8 <__bad_interrupt>:
  c8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000cc <_ZN6ButtonC1Ev>:
	cbi(DDRD,BTN);		// set as input
	sbi(PORTD,BTN);		// set pull-up 
} //Button

// default destructor
Button::~Button()
  cc:	8a b1       	in	r24, 0x0a	; 10
  ce:	8b 7f       	andi	r24, 0xFB	; 251
  d0:	8a b9       	out	0x0a, r24	; 10
  d2:	8b b1       	in	r24, 0x0b	; 11
  d4:	84 60       	ori	r24, 0x04	; 4
  d6:	8b b9       	out	0x0b, r24	; 11
  d8:	08 95       	ret

000000da <_ZN6Button9isPressedEv>:
/*	while((PIND & (1<<BTN))!=0){};			// wait, BTN=1
	_delay_ms(10);							// delay
	while((PIND & (1<<BTN))==0){};			// wait for release button	 
	return true;							// if BTN = 0  . . . pressed
*/
	if((PIND & (1<<BTN))==0) return true;	// pressed
  da:	4a 99       	sbic	0x09, 2	; 9
  dc:	02 c0       	rjmp	.+4      	; 0xe2 <_ZN6Button9isPressedEv+0x8>
  de:	81 e0       	ldi	r24, 0x01	; 1
  e0:	08 95       	ret
	else return false;						// released
  e2:	80 e0       	ldi	r24, 0x00	; 0
  e4:	08 95       	ret

000000e6 <_ZN6BuzzerC1Ev>:
{
	sbi(DDRB,BUZZ);    //set PB2 as output
} //Buzzer

// default destructor
Buzzer::~Buzzer()
  e6:	84 b1       	in	r24, 0x04	; 4
  e8:	84 60       	ori	r24, 0x04	; 4
  ea:	84 b9       	out	0x04, r24	; 4
  ec:	08 95       	ret

000000ee <_ZN6Buzzer7setBuzzEi>:
{
} //~Buzzer

void Buzzer::setBuzz(int time)
{
	for(int i=0; i<time; i++)
  ee:	20 e0       	ldi	r18, 0x00	; 0
  f0:	30 e0       	ldi	r19, 0x00	; 0
  f2:	26 17       	cp	r18, r22
  f4:	37 07       	cpc	r19, r23
  f6:	b4 f4       	brge	.+44     	; 0x124 <_ZN6Buzzer7setBuzzEi+0x36>
	{
		tbi(PORTB,BUZZ);                 //cycle duration cca 1ms
  f8:	95 b1       	in	r25, 0x05	; 5
  fa:	84 e0       	ldi	r24, 0x04	; 4
  fc:	98 27       	eor	r25, r24
  fe:	95 b9       	out	0x05, r25	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 100:	e3 e8       	ldi	r30, 0x83	; 131
 102:	f3 e0       	ldi	r31, 0x03	; 3
 104:	31 97       	sbiw	r30, 0x01	; 1
 106:	f1 f7       	brne	.-4      	; 0x104 <_ZN6Buzzer7setBuzzEi+0x16>
 108:	00 c0       	rjmp	.+0      	; 0x10a <_ZN6Buzzer7setBuzzEi+0x1c>
 10a:	00 00       	nop
		_delay_us(300);
		tbi(PORTB,BUZZ);
 10c:	95 b1       	in	r25, 0x05	; 5
 10e:	89 27       	eor	r24, r25
 110:	85 b9       	out	0x05, r24	; 5
 112:	83 e8       	ldi	r24, 0x83	; 131
 114:	93 e0       	ldi	r25, 0x03	; 3
 116:	01 97       	sbiw	r24, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <_ZN6Buzzer7setBuzzEi+0x28>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <_ZN6Buzzer7setBuzzEi+0x2e>
 11c:	00 00       	nop
{
} //~Buzzer

void Buzzer::setBuzz(int time)
{
	for(int i=0; i<time; i++)
 11e:	2f 5f       	subi	r18, 0xFF	; 255
 120:	3f 4f       	sbci	r19, 0xFF	; 255
 122:	e7 cf       	rjmp	.-50     	; 0xf2 <_ZN6Buzzer7setBuzzEi+0x4>
		tbi(PORTB,BUZZ);                 //cycle duration cca 1ms
		_delay_us(300);
		tbi(PORTB,BUZZ);
		_delay_us(300);
	}
	cbi(PORTB,BUZZ);
 124:	85 b1       	in	r24, 0x05	; 5
 126:	8b 7f       	andi	r24, 0xFB	; 251
 128:	85 b9       	out	0x05, r24	; 5
 12a:	08 95       	ret

0000012c <_ZN3DHTC1Ev>:
		printf("Temp     : %d.",pom);
		pom = (uint8_t)x;
		printf("%d degrees Celsius\r\n",pom);
	}
	
}
 12c:	08 95       	ret

0000012e <_ZN3DHT8getValueEv>:
 12e:	85 b1       	in	r24, 0x05	; 5
 130:	81 60       	ori	r24, 0x01	; 1
 132:	85 b9       	out	0x05, r24	; 5
 134:	84 b1       	in	r24, 0x04	; 4
 136:	81 60       	ori	r24, 0x01	; 1
 138:	84 b9       	out	0x04, r24	; 4
 13a:	28 ec       	ldi	r18, 0xC8	; 200
 13c:	2a 95       	dec	r18
 13e:	f1 f7       	brne	.-4      	; 0x13c <_ZN3DHT8getValueEv+0xe>
 140:	85 b1       	in	r24, 0x05	; 5
 142:	8e 7f       	andi	r24, 0xFE	; 254
 144:	85 b9       	out	0x05, r24	; 5
 146:	5f e3       	ldi	r21, 0x3F	; 63
 148:	8e ec       	ldi	r24, 0xCE	; 206
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	51 50       	subi	r21, 0x01	; 1
 14e:	80 40       	sbci	r24, 0x00	; 0
 150:	90 40       	sbci	r25, 0x00	; 0
 152:	e1 f7       	brne	.-8      	; 0x14c <_ZN3DHT8getValueEv+0x1e>
 154:	00 c0       	rjmp	.+0      	; 0x156 <_ZN3DHT8getValueEv+0x28>
 156:	00 00       	nop
 158:	84 b1       	in	r24, 0x04	; 4
 15a:	8e 7f       	andi	r24, 0xFE	; 254
 15c:	84 b9       	out	0x04, r24	; 4
 15e:	28 e0       	ldi	r18, 0x08	; 8
 160:	2a 95       	dec	r18
 162:	f1 f7       	brne	.-4      	; 0x160 <_ZN3DHT8getValueEv+0x32>
 164:	18 99       	sbic	0x03, 0	; 3
 166:	fe cf       	rjmp	.-4      	; 0x164 <_ZN3DHT8getValueEv+0x36>
 168:	58 e0       	ldi	r21, 0x08	; 8
 16a:	5a 95       	dec	r21
 16c:	f1 f7       	brne	.-4      	; 0x16a <_ZN3DHT8getValueEv+0x3c>
 16e:	18 9b       	sbis	0x03, 0	; 3
 170:	fe cf       	rjmp	.-4      	; 0x16e <_ZN3DHT8getValueEv+0x40>
 172:	88 e0       	ldi	r24, 0x08	; 8
 174:	8a 95       	dec	r24
 176:	f1 f7       	brne	.-4      	; 0x174 <_ZN3DHT8getValueEv+0x46>
 178:	18 99       	sbic	0x03, 0	; 3
 17a:	fe cf       	rjmp	.-4      	; 0x178 <_ZN3DHT8getValueEv+0x4a>
 17c:	98 e0       	ldi	r25, 0x08	; 8
 17e:	9a 95       	dec	r25
 180:	f1 f7       	brne	.-4      	; 0x17e <_ZN3DHT8getValueEv+0x50>
 182:	80 e0       	ldi	r24, 0x00	; 0
 184:	60 e0       	ldi	r22, 0x00	; 0
 186:	88 30       	cpi	r24, 0x08	; 8
 188:	90 f4       	brcc	.+36     	; 0x1ae <_ZN3DHT8getValueEv+0x80>
 18a:	18 9b       	sbis	0x03, 0	; 3
 18c:	fe cf       	rjmp	.-4      	; 0x18a <_ZN3DHT8getValueEv+0x5c>
 18e:	24 ed       	ldi	r18, 0xD4	; 212
 190:	2a 95       	dec	r18
 192:	f1 f7       	brne	.-4      	; 0x190 <_ZN3DHT8getValueEv+0x62>
 194:	93 b1       	in	r25, 0x03	; 3
 196:	91 70       	andi	r25, 0x01	; 1
 198:	69 2b       	or	r22, r25
 19a:	60 ff       	sbrs	r22, 0
 19c:	03 c0       	rjmp	.+6      	; 0x1a4 <_ZN3DHT8getValueEv+0x76>
 19e:	54 e9       	ldi	r21, 0x94	; 148
 1a0:	5a 95       	dec	r21
 1a2:	f1 f7       	brne	.-4      	; 0x1a0 <_ZN3DHT8getValueEv+0x72>
 1a4:	87 30       	cpi	r24, 0x07	; 7
 1a6:	09 f0       	breq	.+2      	; 0x1aa <_ZN3DHT8getValueEv+0x7c>
 1a8:	66 0f       	add	r22, r22
 1aa:	8f 5f       	subi	r24, 0xFF	; 255
 1ac:	ec cf       	rjmp	.-40     	; 0x186 <_ZN3DHT8getValueEv+0x58>
 1ae:	80 e0       	ldi	r24, 0x00	; 0
 1b0:	40 e0       	ldi	r20, 0x00	; 0
 1b2:	88 30       	cpi	r24, 0x08	; 8
 1b4:	90 f4       	brcc	.+36     	; 0x1da <_ZN3DHT8getValueEv+0xac>
 1b6:	18 9b       	sbis	0x03, 0	; 3
 1b8:	fe cf       	rjmp	.-4      	; 0x1b6 <_ZN3DHT8getValueEv+0x88>
 1ba:	94 ed       	ldi	r25, 0xD4	; 212
 1bc:	9a 95       	dec	r25
 1be:	f1 f7       	brne	.-4      	; 0x1bc <_ZN3DHT8getValueEv+0x8e>
 1c0:	93 b1       	in	r25, 0x03	; 3
 1c2:	91 70       	andi	r25, 0x01	; 1
 1c4:	49 2b       	or	r20, r25
 1c6:	40 ff       	sbrs	r20, 0
 1c8:	03 c0       	rjmp	.+6      	; 0x1d0 <_ZN3DHT8getValueEv+0xa2>
 1ca:	24 e9       	ldi	r18, 0x94	; 148
 1cc:	2a 95       	dec	r18
 1ce:	f1 f7       	brne	.-4      	; 0x1cc <_ZN3DHT8getValueEv+0x9e>
 1d0:	87 30       	cpi	r24, 0x07	; 7
 1d2:	09 f0       	breq	.+2      	; 0x1d6 <_ZN3DHT8getValueEv+0xa8>
 1d4:	44 0f       	add	r20, r20
 1d6:	8f 5f       	subi	r24, 0xFF	; 255
 1d8:	ec cf       	rjmp	.-40     	; 0x1b2 <_ZN3DHT8getValueEv+0x84>
 1da:	80 e0       	ldi	r24, 0x00	; 0
 1dc:	30 e0       	ldi	r19, 0x00	; 0
 1de:	88 30       	cpi	r24, 0x08	; 8
 1e0:	90 f4       	brcc	.+36     	; 0x206 <_ZN3DHT8getValueEv+0xd8>
 1e2:	18 9b       	sbis	0x03, 0	; 3
 1e4:	fe cf       	rjmp	.-4      	; 0x1e2 <_ZN3DHT8getValueEv+0xb4>
 1e6:	54 ed       	ldi	r21, 0xD4	; 212
 1e8:	5a 95       	dec	r21
 1ea:	f1 f7       	brne	.-4      	; 0x1e8 <_ZN3DHT8getValueEv+0xba>
 1ec:	93 b1       	in	r25, 0x03	; 3
 1ee:	91 70       	andi	r25, 0x01	; 1
 1f0:	39 2b       	or	r19, r25
 1f2:	30 ff       	sbrs	r19, 0
 1f4:	03 c0       	rjmp	.+6      	; 0x1fc <_ZN3DHT8getValueEv+0xce>
 1f6:	94 e9       	ldi	r25, 0x94	; 148
 1f8:	9a 95       	dec	r25
 1fa:	f1 f7       	brne	.-4      	; 0x1f8 <_ZN3DHT8getValueEv+0xca>
 1fc:	87 30       	cpi	r24, 0x07	; 7
 1fe:	09 f0       	breq	.+2      	; 0x202 <_ZN3DHT8getValueEv+0xd4>
 200:	33 0f       	add	r19, r19
 202:	8f 5f       	subi	r24, 0xFF	; 255
 204:	ec cf       	rjmp	.-40     	; 0x1de <_ZN3DHT8getValueEv+0xb0>
 206:	80 e0       	ldi	r24, 0x00	; 0
 208:	20 e0       	ldi	r18, 0x00	; 0
 20a:	88 30       	cpi	r24, 0x08	; 8
 20c:	90 f4       	brcc	.+36     	; 0x232 <_ZN3DHT8getValueEv+0x104>
 20e:	18 9b       	sbis	0x03, 0	; 3
 210:	fe cf       	rjmp	.-4      	; 0x20e <_ZN3DHT8getValueEv+0xe0>
 212:	54 ed       	ldi	r21, 0xD4	; 212
 214:	5a 95       	dec	r21
 216:	f1 f7       	brne	.-4      	; 0x214 <_ZN3DHT8getValueEv+0xe6>
 218:	93 b1       	in	r25, 0x03	; 3
 21a:	91 70       	andi	r25, 0x01	; 1
 21c:	29 2b       	or	r18, r25
 21e:	20 ff       	sbrs	r18, 0
 220:	03 c0       	rjmp	.+6      	; 0x228 <_ZN3DHT8getValueEv+0xfa>
 222:	94 e9       	ldi	r25, 0x94	; 148
 224:	9a 95       	dec	r25
 226:	f1 f7       	brne	.-4      	; 0x224 <_ZN3DHT8getValueEv+0xf6>
 228:	87 30       	cpi	r24, 0x07	; 7
 22a:	09 f0       	breq	.+2      	; 0x22e <_ZN3DHT8getValueEv+0x100>
 22c:	22 0f       	add	r18, r18
 22e:	8f 5f       	subi	r24, 0xFF	; 255
 230:	ec cf       	rjmp	.-40     	; 0x20a <_ZN3DHT8getValueEv+0xdc>
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	80 e0       	ldi	r24, 0x00	; 0
 236:	98 30       	cpi	r25, 0x08	; 8
 238:	90 f4       	brcc	.+36     	; 0x25e <_ZN3DHT8getValueEv+0x130>
 23a:	18 9b       	sbis	0x03, 0	; 3
 23c:	fe cf       	rjmp	.-4      	; 0x23a <_ZN3DHT8getValueEv+0x10c>
 23e:	54 ed       	ldi	r21, 0xD4	; 212
 240:	5a 95       	dec	r21
 242:	f1 f7       	brne	.-4      	; 0x240 <_ZN3DHT8getValueEv+0x112>
 244:	53 b1       	in	r21, 0x03	; 3
 246:	51 70       	andi	r21, 0x01	; 1
 248:	85 2b       	or	r24, r21
 24a:	80 ff       	sbrs	r24, 0
 24c:	03 c0       	rjmp	.+6      	; 0x254 <_ZN3DHT8getValueEv+0x126>
 24e:	54 e9       	ldi	r21, 0x94	; 148
 250:	5a 95       	dec	r21
 252:	f1 f7       	brne	.-4      	; 0x250 <_ZN3DHT8getValueEv+0x122>
 254:	97 30       	cpi	r25, 0x07	; 7
 256:	09 f0       	breq	.+2      	; 0x25a <_ZN3DHT8getValueEv+0x12c>
 258:	88 0f       	add	r24, r24
 25a:	9f 5f       	subi	r25, 0xFF	; 255
 25c:	ec cf       	rjmp	.-40     	; 0x236 <_ZN3DHT8getValueEv+0x108>
 25e:	e4 2f       	mov	r30, r20
 260:	f0 e0       	ldi	r31, 0x00	; 0
 262:	e6 0f       	add	r30, r22
 264:	f1 1d       	adc	r31, r1
 266:	e3 0f       	add	r30, r19
 268:	f1 1d       	adc	r31, r1
 26a:	e2 0f       	add	r30, r18
 26c:	f1 1d       	adc	r31, r1
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	e8 17       	cp	r30, r24
 272:	f9 07       	cpc	r31, r25
 274:	b1 f4       	brne	.+44     	; 0x2a2 <_ZN3DHT8getValueEv+0x174>
 276:	86 2f       	mov	r24, r22
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	a0 e0       	ldi	r26, 0x00	; 0
 27c:	b0 e0       	ldi	r27, 0x00	; 0
 27e:	ba 2f       	mov	r27, r26
 280:	a9 2f       	mov	r26, r25
 282:	98 2f       	mov	r25, r24
 284:	88 27       	eor	r24, r24
 286:	84 2b       	or	r24, r20
 288:	ba 2f       	mov	r27, r26
 28a:	a9 2f       	mov	r26, r25
 28c:	98 2f       	mov	r25, r24
 28e:	88 27       	eor	r24, r24
 290:	83 2b       	or	r24, r19
 292:	ba 2f       	mov	r27, r26
 294:	a9 2f       	mov	r26, r25
 296:	98 2f       	mov	r25, r24
 298:	88 27       	eor	r24, r24
 29a:	bc 01       	movw	r22, r24
 29c:	cd 01       	movw	r24, r26
 29e:	62 2b       	or	r22, r18
 2a0:	08 95       	ret
 2a2:	60 e0       	ldi	r22, 0x00	; 0
 2a4:	70 e0       	ldi	r23, 0x00	; 0
 2a6:	cb 01       	movw	r24, r22
 2a8:	08 95       	ret

000002aa <_ZN3DHT7getTempEv>:

uint8_t DHT::getTemp(void)
{
	uint32_t x = getValue();
 2aa:	0e 94 97 00 	call	0x12e	; 0x12e <_ZN3DHT8getValueEv>
	
	if(x != 0)
 2ae:	61 15       	cp	r22, r1
 2b0:	71 05       	cpc	r23, r1
 2b2:	81 05       	cpc	r24, r1
 2b4:	91 05       	cpc	r25, r1
 2b6:	11 f0       	breq	.+4      	; 0x2bc <_ZN3DHT7getTempEv+0x12>
	{
		uint32_t y = x;
		y = y >>8;
		return (uint8_t)y;
 2b8:	87 2f       	mov	r24, r23
 2ba:	08 95       	ret
	}
	return 0;
 2bc:	80 e0       	ldi	r24, 0x00	; 0
};
 2be:	08 95       	ret

000002c0 <_ZN3DHT6getHumEv>:


uint8_t DHT::getHum(void)
{
	uint32_t x = getValue();
 2c0:	0e 94 97 00 	call	0x12e	; 0x12e <_ZN3DHT8getValueEv>
	
	if(x != 0)
 2c4:	61 15       	cp	r22, r1
 2c6:	71 05       	cpc	r23, r1
 2c8:	81 05       	cpc	r24, r1
 2ca:	91 05       	cpc	r25, r1
 2cc:	11 f0       	breq	.+4      	; 0x2d2 <_ZN3DHT6getHumEv+0x12>
	{
		uint32_t y = x;
		y = y >> 24;
		return (uint8_t)y;
 2ce:	89 2f       	mov	r24, r25
 2d0:	08 95       	ret
	}
	return 0;
 2d2:	80 e0       	ldi	r24, 0x00	; 0
 2d4:	08 95       	ret

000002d6 <_ZN7DisplayC1Ev>:
	sbi(DDRD,RCLK);
	sbi(DDRB,SRCLK);
} //Display

// default destructor
Display::~Display()
 2d6:	87 b1       	in	r24, 0x07	; 7
 2d8:	80 62       	ori	r24, 0x20	; 32
 2da:	87 b9       	out	0x07, r24	; 7
 2dc:	87 b1       	in	r24, 0x07	; 7
 2de:	80 61       	ori	r24, 0x10	; 16
 2e0:	87 b9       	out	0x07, r24	; 7
 2e2:	8a b1       	in	r24, 0x0a	; 10
 2e4:	80 68       	ori	r24, 0x80	; 128
 2e6:	8a b9       	out	0x0a, r24	; 10
 2e8:	84 b1       	in	r24, 0x04	; 4
 2ea:	82 60       	ori	r24, 0x02	; 2
 2ec:	84 b9       	out	0x04, r24	; 4
 2ee:	08 95       	ret

000002f0 <_ZN7Display7displayEh>:
}

/* private method */
void Display::display(uint8_t character)
{
	sbi(PORTC,OE);				// set output to HI (high impedance)
 2f0:	88 b1       	in	r24, 0x08	; 8
 2f2:	80 61       	ori	r24, 0x10	; 16
 2f4:	88 b9       	out	0x08, r24	; 8
	for(uint8_t i=0;i<8;i++)
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	98 30       	cpi	r25, 0x08	; 8
 2fa:	90 f4       	brcc	.+36     	; 0x320 <_ZN7Display7displayEh+0x30>
	{
		if((character & 0b10000000)==0b10000000) sbi(PORTC,SER);else cbi(PORTC,SER);	//data
 2fc:	66 23       	and	r22, r22
 2fe:	24 f4       	brge	.+8      	; 0x308 <_ZN7Display7displayEh+0x18>
 300:	88 b1       	in	r24, 0x08	; 8
 302:	80 62       	ori	r24, 0x20	; 32
 304:	88 b9       	out	0x08, r24	; 8
 306:	03 c0       	rjmp	.+6      	; 0x30e <_ZN7Display7displayEh+0x1e>
 308:	88 b1       	in	r24, 0x08	; 8
 30a:	8f 7d       	andi	r24, 0xDF	; 223
 30c:	88 b9       	out	0x08, r24	; 8
		sbi(PORTB,SRCLK);
 30e:	85 b1       	in	r24, 0x05	; 5
 310:	82 60       	ori	r24, 0x02	; 2
 312:	85 b9       	out	0x05, r24	; 5
		cbi(PORTB,SRCLK);	// clock
 314:	85 b1       	in	r24, 0x05	; 5
 316:	8d 7f       	andi	r24, 0xFD	; 253
 318:	85 b9       	out	0x05, r24	; 5
		character=character<<1;
 31a:	66 0f       	add	r22, r22

/* private method */
void Display::display(uint8_t character)
{
	sbi(PORTC,OE);				// set output to HI (high impedance)
	for(uint8_t i=0;i<8;i++)
 31c:	9f 5f       	subi	r25, 0xFF	; 255
 31e:	ec cf       	rjmp	.-40     	; 0x2f8 <_ZN7Display7displayEh+0x8>
		if((character & 0b10000000)==0b10000000) sbi(PORTC,SER);else cbi(PORTC,SER);	//data
		sbi(PORTB,SRCLK);
		cbi(PORTB,SRCLK);	// clock
		character=character<<1;
	}
	sbi(PORTD,RCLK);		//	transcript from shift register to memory
 320:	8b b1       	in	r24, 0x0b	; 11
 322:	80 68       	ori	r24, 0x80	; 128
 324:	8b b9       	out	0x0b, r24	; 11
	cbi(PORTD,RCLK);		//  impulse
 326:	8b b1       	in	r24, 0x0b	; 11
 328:	8f 77       	andi	r24, 0x7F	; 127
 32a:	8b b9       	out	0x0b, r24	; 11
	cbi(PORTC,OE);			//	set output
 32c:	88 b1       	in	r24, 0x08	; 8
 32e:	8f 7e       	andi	r24, 0xEF	; 239
 330:	88 b9       	out	0x08, r24	; 8
 332:	08 95       	ret

00000334 <_ZN7Display4showEh>:
} //~Display

void Display::show(uint8_t character)
{
	uint8_t result;
	character= character & 0x1f;
 334:	e6 2f       	mov	r30, r22
 336:	ef 71       	andi	r30, 0x1F	; 31
	switch(character)
 338:	4e 2f       	mov	r20, r30
 33a:	50 e0       	ldi	r21, 0x00	; 0
 33c:	43 31       	cpi	r20, 0x13	; 19
 33e:	51 05       	cpc	r21, r1
 340:	48 f5       	brcc	.+82     	; 0x394 <_ZN7Display4showEh+0x60>
 342:	fa 01       	movw	r30, r20
 344:	ec 5c       	subi	r30, 0xCC	; 204
 346:	ff 4f       	sbci	r31, 0xFF	; 255
 348:	0c 94 34 03 	jmp	0x668	; 0x668 <__tablejump2__>
	{
		case 0: result=zero; break;
 34c:	6f e3       	ldi	r22, 0x3F	; 63
 34e:	25 c0       	rjmp	.+74     	; 0x39a <_ZN7Display4showEh+0x66>
		case 1: result=one; break;
		case 2: result=two; break;
 350:	6b e5       	ldi	r22, 0x5B	; 91
 352:	23 c0       	rjmp	.+70     	; 0x39a <_ZN7Display4showEh+0x66>
		case 3: result=three; break;
 354:	6f e4       	ldi	r22, 0x4F	; 79
 356:	21 c0       	rjmp	.+66     	; 0x39a <_ZN7Display4showEh+0x66>
		case 4: result=four; break;
 358:	66 e6       	ldi	r22, 0x66	; 102
 35a:	1f c0       	rjmp	.+62     	; 0x39a <_ZN7Display4showEh+0x66>
		case 5: result=five; break;
 35c:	6d e6       	ldi	r22, 0x6D	; 109
 35e:	1d c0       	rjmp	.+58     	; 0x39a <_ZN7Display4showEh+0x66>
		case 6: result=six; break;
 360:	6d e7       	ldi	r22, 0x7D	; 125
 362:	1b c0       	rjmp	.+54     	; 0x39a <_ZN7Display4showEh+0x66>
		case 7: result=seven; break;
 364:	67 e0       	ldi	r22, 0x07	; 7
 366:	19 c0       	rjmp	.+50     	; 0x39a <_ZN7Display4showEh+0x66>
		case 8: result=eight; break;
 368:	6f e7       	ldi	r22, 0x7F	; 127
 36a:	17 c0       	rjmp	.+46     	; 0x39a <_ZN7Display4showEh+0x66>
		case 9: result=nine; break;
 36c:	6f e6       	ldi	r22, 0x6F	; 111
 36e:	15 c0       	rjmp	.+42     	; 0x39a <_ZN7Display4showEh+0x66>
		case 10: result=ahex; break;
 370:	67 e7       	ldi	r22, 0x77	; 119
 372:	13 c0       	rjmp	.+38     	; 0x39a <_ZN7Display4showEh+0x66>
		case 11: result=bhex; break;
 374:	6c e7       	ldi	r22, 0x7C	; 124
 376:	11 c0       	rjmp	.+34     	; 0x39a <_ZN7Display4showEh+0x66>
		case 12: result=chex; break;
 378:	68 e5       	ldi	r22, 0x58	; 88
 37a:	0f c0       	rjmp	.+30     	; 0x39a <_ZN7Display4showEh+0x66>
		case 13: result=dhex; break;
 37c:	6e e5       	ldi	r22, 0x5E	; 94
 37e:	0d c0       	rjmp	.+26     	; 0x39a <_ZN7Display4showEh+0x66>
		case 14: result=ehex; break;
 380:	69 e7       	ldi	r22, 0x79	; 121
 382:	0b c0       	rjmp	.+22     	; 0x39a <_ZN7Display4showEh+0x66>
		case 15: result=fhex; break;
 384:	61 e7       	ldi	r22, 0x71	; 113
 386:	09 c0       	rjmp	.+18     	; 0x39a <_ZN7Display4showEh+0x66>
		case 16: result=dot; break;
 388:	60 e8       	ldi	r22, 0x80	; 128
 38a:	07 c0       	rjmp	.+14     	; 0x39a <_ZN7Display4showEh+0x66>
		case 17: result=err; break;
 38c:	69 e4       	ldi	r22, 0x49	; 73
 38e:	05 c0       	rjmp	.+10     	; 0x39a <_ZN7Display4showEh+0x66>
		case 18: result=non; break;
 390:	60 e0       	ldi	r22, 0x00	; 0
 392:	03 c0       	rjmp	.+6      	; 0x39a <_ZN7Display4showEh+0x66>
		default: result=non;
 394:	60 e0       	ldi	r22, 0x00	; 0
 396:	01 c0       	rjmp	.+2      	; 0x39a <_ZN7Display4showEh+0x66>
	uint8_t result;
	character= character & 0x1f;
	switch(character)
	{
		case 0: result=zero; break;
		case 1: result=one; break;
 398:	66 e0       	ldi	r22, 0x06	; 6
		case 16: result=dot; break;
		case 17: result=err; break;
		case 18: result=non; break;
		default: result=non;
	}	
	this->display(result);			// display(result)
 39a:	0e 94 78 01 	call	0x2f0	; 0x2f0 <_ZN7Display7displayEh>
 39e:	08 95       	ret

000003a0 <_ZN3Led3setEbbb>:
{
} //~Led

void Led::set(bool r,bool g,bool b)
{
	if(r) cbi(PORTD,R_LED); else sbi(PORTD,R_LED);
 3a0:	66 23       	and	r22, r22
 3a2:	21 f0       	breq	.+8      	; 0x3ac <_ZN3Led3setEbbb+0xc>
 3a4:	8b b1       	in	r24, 0x0b	; 11
 3a6:	8f 7b       	andi	r24, 0xBF	; 191
 3a8:	8b b9       	out	0x0b, r24	; 11
 3aa:	03 c0       	rjmp	.+6      	; 0x3b2 <_ZN3Led3setEbbb+0x12>
 3ac:	8b b1       	in	r24, 0x0b	; 11
 3ae:	80 64       	ori	r24, 0x40	; 64
 3b0:	8b b9       	out	0x0b, r24	; 11
	if(g) cbi(PORTD,G_LED); else sbi(PORTD,G_LED);
 3b2:	44 23       	and	r20, r20
 3b4:	21 f0       	breq	.+8      	; 0x3be <_ZN3Led3setEbbb+0x1e>
 3b6:	8b b1       	in	r24, 0x0b	; 11
 3b8:	87 7f       	andi	r24, 0xF7	; 247
 3ba:	8b b9       	out	0x0b, r24	; 11
 3bc:	03 c0       	rjmp	.+6      	; 0x3c4 <_ZN3Led3setEbbb+0x24>
 3be:	8b b1       	in	r24, 0x0b	; 11
 3c0:	88 60       	ori	r24, 0x08	; 8
 3c2:	8b b9       	out	0x0b, r24	; 11
	if(b) cbi(PORTD,B_LED); else sbi(PORTD,B_LED);
 3c4:	22 23       	and	r18, r18
 3c6:	21 f0       	breq	.+8      	; 0x3d0 <_ZN3Led3setEbbb+0x30>
 3c8:	8b b1       	in	r24, 0x0b	; 11
 3ca:	8f 7d       	andi	r24, 0xDF	; 223
 3cc:	8b b9       	out	0x0b, r24	; 11
 3ce:	08 95       	ret
 3d0:	8b b1       	in	r24, 0x0b	; 11
 3d2:	80 62       	ori	r24, 0x20	; 32
 3d4:	8b b9       	out	0x0b, r24	; 11
 3d6:	08 95       	ret

000003d8 <_ZN3LedC1Ev>:

// default constructor
Led::Led()
{
	/* set as outputs */
	sbi(DDRD,R_LED);
 3d8:	2a b1       	in	r18, 0x0a	; 10
 3da:	20 64       	ori	r18, 0x40	; 64
 3dc:	2a b9       	out	0x0a, r18	; 10
	sbi(DDRD,B_LED);
 3de:	2a b1       	in	r18, 0x0a	; 10
 3e0:	20 62       	ori	r18, 0x20	; 32
 3e2:	2a b9       	out	0x0a, r18	; 10
	sbi(DDRD,G_LED);
 3e4:	2a b1       	in	r18, 0x0a	; 10
 3e6:	28 60       	ori	r18, 0x08	; 8
 3e8:	2a b9       	out	0x0a, r18	; 10
	
	set(false,false,false);	// set all leds off
 3ea:	20 e0       	ldi	r18, 0x00	; 0
 3ec:	40 e0       	ldi	r20, 0x00	; 0
 3ee:	60 e0       	ldi	r22, 0x00	; 0
 3f0:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <_ZN3Led3setEbbb>
 3f4:	08 95       	ret

000003f6 <main>:
#include "Uart.h"
#include "Buzzer.h"
#include "DHT.h"

int main(void)
{
 3f6:	cf 93       	push	r28
 3f8:	df 93       	push	r29
 3fa:	cd b7       	in	r28, 0x3d	; 61
 3fc:	de b7       	in	r29, 0x3e	; 62
 3fe:	27 97       	sbiw	r28, 0x07	; 7
 400:	0f b6       	in	r0, 0x3f	; 63
 402:	f8 94       	cli
 404:	de bf       	out	0x3e, r29	; 62
 406:	0f be       	out	0x3f, r0	; 63
 408:	cd bf       	out	0x3d, r28	; 61
	Led rgb;
 40a:	ce 01       	movw	r24, r28
 40c:	01 96       	adiw	r24, 0x01	; 1
 40e:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <_ZN3LedC1Ev>
	rgb.set(1,0,0); // Led rouge
 412:	20 e0       	ldi	r18, 0x00	; 0
 414:	40 e0       	ldi	r20, 0x00	; 0
 416:	61 e0       	ldi	r22, 0x01	; 1
 418:	ce 01       	movw	r24, r28
 41a:	01 96       	adiw	r24, 0x01	; 1
 41c:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <_ZN3Led3setEbbb>

	Button btn;
 420:	ce 01       	movw	r24, r28
 422:	02 96       	adiw	r24, 0x02	; 2
 424:	0e 94 66 00 	call	0xcc	; 0xcc <_ZN6ButtonC1Ev>
	Display dsp;
 428:	ce 01       	movw	r24, r28
 42a:	03 96       	adiw	r24, 0x03	; 3
 42c:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <_ZN7DisplayC1Ev>
	Uart serial;
 430:	ce 01       	movw	r24, r28
 432:	04 96       	adiw	r24, 0x04	; 4
 434:	0e 94 09 03 	call	0x612	; 0x612 <_ZN4UartC1Ev>
	DHT dht;
 438:	ce 01       	movw	r24, r28
 43a:	06 96       	adiw	r24, 0x06	; 6
 43c:	0e 94 96 00 	call	0x12c	; 0x12c <_ZN3DHTC1Ev>
	Buzzer buzz;
 440:	ce 01       	movw	r24, r28
 442:	07 96       	adiw	r24, 0x07	; 7
 444:	0e 94 73 00 	call	0xe6	; 0xe6 <_ZN6BuzzerC1Ev>
	
	dsp.show(0); // Set display to default
 448:	60 e0       	ldi	r22, 0x00	; 0
 44a:	ce 01       	movw	r24, r28
 44c:	03 96       	adiw	r24, 0x03	; 3
 44e:	0e 94 9a 01 	call	0x334	; 0x334 <_ZN7Display4showEh>
	printf ("Initialize :) \r\n");
 452:	86 e0       	ldi	r24, 0x06	; 6
 454:	91 e0       	ldi	r25, 0x01	; 1
 456:	0e 94 9b 03 	call	0x736	; 0x736 <puts>
	printf("AT+CWMODE=1\r\n");
 45a:	86 e1       	ldi	r24, 0x16	; 22
 45c:	91 e0       	ldi	r25, 0x01	; 1
 45e:	0e 94 9b 03 	call	0x736	; 0x736 <puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 462:	2f ef       	ldi	r18, 0xFF	; 255
 464:	82 e5       	ldi	r24, 0x52	; 82
 466:	97 e0       	ldi	r25, 0x07	; 7
 468:	21 50       	subi	r18, 0x01	; 1
 46a:	80 40       	sbci	r24, 0x00	; 0
 46c:	90 40       	sbci	r25, 0x00	; 0
 46e:	e1 f7       	brne	.-8      	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
 470:	00 c0       	rjmp	.+0      	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 472:	00 00       	nop
	_delay_ms(200);
	printf("AT+CWJAP=\"Livebox-49F0\",\"*lescarottessontcuites*\"\r\n");
 474:	83 e2       	ldi	r24, 0x23	; 35
 476:	91 e0       	ldi	r25, 0x01	; 1
 478:	0e 94 9b 03 	call	0x736	; 0x736 <puts>
 47c:	2f ef       	ldi	r18, 0xFF	; 255
 47e:	89 eb       	ldi	r24, 0xB9	; 185
 480:	9b ed       	ldi	r25, 0xDB	; 219
 482:	21 50       	subi	r18, 0x01	; 1
 484:	80 40       	sbci	r24, 0x00	; 0
 486:	90 40       	sbci	r25, 0x00	; 0
 488:	e1 f7       	brne	.-8      	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
 48a:	00 c0       	rjmp	.+0      	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
 48c:	00 00       	nop
	_delay_ms(6000);
	printf("AT+CIPMUX=1\r\n");
 48e:	86 e5       	ldi	r24, 0x56	; 86
 490:	91 e0       	ldi	r25, 0x01	; 1
 492:	0e 94 9b 03 	call	0x736	; 0x736 <puts>
 496:	2f ef       	ldi	r18, 0xFF	; 255
 498:	82 e5       	ldi	r24, 0x52	; 82
 49a:	97 e0       	ldi	r25, 0x07	; 7
 49c:	21 50       	subi	r18, 0x01	; 1
 49e:	80 40       	sbci	r24, 0x00	; 0
 4a0:	90 40       	sbci	r25, 0x00	; 0
 4a2:	e1 f7       	brne	.-8      	; 0x49c <__EEPROM_REGION_LENGTH__+0x9c>
 4a4:	00 c0       	rjmp	.+0      	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 4a6:	00 00       	nop
	_delay_ms(200);
	rgb.set(0,1,0); // Led verte
 4a8:	20 e0       	ldi	r18, 0x00	; 0
 4aa:	41 e0       	ldi	r20, 0x01	; 1
 4ac:	60 e0       	ldi	r22, 0x00	; 0
 4ae:	ce 01       	movw	r24, r28
 4b0:	01 96       	adiw	r24, 0x01	; 1
 4b2:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <_ZN3Led3setEbbb>
	buzz.setBuzz(1000); // Buzz indicates the connection is Ok
 4b6:	68 ee       	ldi	r22, 0xE8	; 232
 4b8:	73 e0       	ldi	r23, 0x03	; 3
 4ba:	ce 01       	movw	r24, r28
 4bc:	07 96       	adiw	r24, 0x07	; 7
 4be:	0e 94 77 00 	call	0xee	; 0xee <_ZN6Buzzer7setBuzzEi>
	
	while (1)
	{
		
		//_delay_ms(60000);	
		while(!btn.isPressed()){}
 4c2:	ce 01       	movw	r24, r28
 4c4:	02 96       	adiw	r24, 0x02	; 2
 4c6:	0e 94 6d 00 	call	0xda	; 0xda <_ZN6Button9isPressedEv>
 4ca:	88 23       	and	r24, r24
 4cc:	d1 f3       	breq	.-12     	; 0x4c2 <__EEPROM_REGION_LENGTH__+0xc2>
		rgb.set(1,0,0);	// The led indicates that the module is busy
 4ce:	20 e0       	ldi	r18, 0x00	; 0
 4d0:	40 e0       	ldi	r20, 0x00	; 0
 4d2:	61 e0       	ldi	r22, 0x01	; 1
 4d4:	ce 01       	movw	r24, r28
 4d6:	01 96       	adiw	r24, 0x01	; 1
 4d8:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <_ZN3Led3setEbbb>
		
		dsp.show(1); // Set display for first step(humidity)
 4dc:	61 e0       	ldi	r22, 0x01	; 1
 4de:	ce 01       	movw	r24, r28
 4e0:	03 96       	adiw	r24, 0x03	; 3
 4e2:	0e 94 9a 01 	call	0x334	; 0x334 <_ZN7Display4showEh>
		uint8_t hum = dht.getHum(); // Get temperature
 4e6:	ce 01       	movw	r24, r28
 4e8:	06 96       	adiw	r24, 0x06	; 6
 4ea:	0e 94 60 01 	call	0x2c0	; 0x2c0 <_ZN3DHT6getHumEv>
 4ee:	18 2f       	mov	r17, r24
		printf("AT+CIPSTART=0,\"TCP\",\"api.thingspeak.com\",80\r\n");
 4f0:	83 e6       	ldi	r24, 0x63	; 99
 4f2:	91 e0       	ldi	r25, 0x01	; 1
 4f4:	0e 94 9b 03 	call	0x736	; 0x736 <puts>
 4f8:	2f ef       	ldi	r18, 0xFF	; 255
 4fa:	82 e5       	ldi	r24, 0x52	; 82
 4fc:	97 e0       	ldi	r25, 0x07	; 7
 4fe:	21 50       	subi	r18, 0x01	; 1
 500:	80 40       	sbci	r24, 0x00	; 0
 502:	90 40       	sbci	r25, 0x00	; 0
 504:	e1 f7       	brne	.-8      	; 0x4fe <__EEPROM_REGION_LENGTH__+0xfe>
 506:	00 c0       	rjmp	.+0      	; 0x508 <__EEPROM_REGION_LENGTH__+0x108>
 508:	00 00       	nop
		_delay_ms(200);
		printf("AT+CIPSEND=0,49\r\n");
 50a:	80 e9       	ldi	r24, 0x90	; 144
 50c:	91 e0       	ldi	r25, 0x01	; 1
 50e:	0e 94 9b 03 	call	0x736	; 0x736 <puts>
 512:	2f ef       	ldi	r18, 0xFF	; 255
 514:	82 e5       	ldi	r24, 0x52	; 82
 516:	97 e0       	ldi	r25, 0x07	; 7
 518:	21 50       	subi	r18, 0x01	; 1
 51a:	80 40       	sbci	r24, 0x00	; 0
 51c:	90 40       	sbci	r25, 0x00	; 0
 51e:	e1 f7       	brne	.-8      	; 0x518 <__EEPROM_REGION_LENGTH__+0x118>
 520:	00 c0       	rjmp	.+0      	; 0x522 <__EEPROM_REGION_LENGTH__+0x122>
 522:	00 00       	nop
		_delay_ms(200);
		printf("GET /update?api_key=7IQV2A0JQYCOPDL0&field2=%d\n\r", hum); // Send to Thingspeak API
 524:	1f 92       	push	r1
 526:	1f 93       	push	r17
 528:	81 ea       	ldi	r24, 0xA1	; 161
 52a:	91 e0       	ldi	r25, 0x01	; 1
 52c:	9f 93       	push	r25
 52e:	8f 93       	push	r24
 530:	0e 94 85 03 	call	0x70a	; 0x70a <printf>
 534:	2f ef       	ldi	r18, 0xFF	; 255
 536:	8c ed       	ldi	r24, 0xDC	; 220
 538:	9d e6       	ldi	r25, 0x6D	; 109
 53a:	21 50       	subi	r18, 0x01	; 1
 53c:	80 40       	sbci	r24, 0x00	; 0
 53e:	90 40       	sbci	r25, 0x00	; 0
 540:	e1 f7       	brne	.-8      	; 0x53a <__EEPROM_REGION_LENGTH__+0x13a>
 542:	00 c0       	rjmp	.+0      	; 0x544 <__EEPROM_REGION_LENGTH__+0x144>
 544:	00 00       	nop
		
		_delay_ms(3000);		
		dsp.show(2); // Set display for second step(temperature)
 546:	62 e0       	ldi	r22, 0x02	; 2
 548:	ce 01       	movw	r24, r28
 54a:	03 96       	adiw	r24, 0x03	; 3
 54c:	0e 94 9a 01 	call	0x334	; 0x334 <_ZN7Display4showEh>
		uint8_t temp = dht.getTemp(); // Get temperature
 550:	ce 01       	movw	r24, r28
 552:	06 96       	adiw	r24, 0x06	; 6
 554:	0e 94 55 01 	call	0x2aa	; 0x2aa <_ZN3DHT7getTempEv>
 558:	18 2f       	mov	r17, r24
		printf("AT+CIPMUX=1\r\n");
 55a:	86 e5       	ldi	r24, 0x56	; 86
 55c:	91 e0       	ldi	r25, 0x01	; 1
 55e:	0e 94 9b 03 	call	0x736	; 0x736 <puts>
 562:	2f ef       	ldi	r18, 0xFF	; 255
 564:	82 e5       	ldi	r24, 0x52	; 82
 566:	97 e0       	ldi	r25, 0x07	; 7
 568:	21 50       	subi	r18, 0x01	; 1
 56a:	80 40       	sbci	r24, 0x00	; 0
 56c:	90 40       	sbci	r25, 0x00	; 0
 56e:	e1 f7       	brne	.-8      	; 0x568 <__EEPROM_REGION_LENGTH__+0x168>
 570:	00 c0       	rjmp	.+0      	; 0x572 <__EEPROM_REGION_LENGTH__+0x172>
 572:	00 00       	nop
		_delay_ms(200);
		printf("AT+CIPSTART=0,\"TCP\",\"api.thingspeak.com\",80\r\n");
 574:	83 e6       	ldi	r24, 0x63	; 99
 576:	91 e0       	ldi	r25, 0x01	; 1
 578:	0e 94 9b 03 	call	0x736	; 0x736 <puts>
 57c:	2f ef       	ldi	r18, 0xFF	; 255
 57e:	82 e5       	ldi	r24, 0x52	; 82
 580:	97 e0       	ldi	r25, 0x07	; 7
 582:	21 50       	subi	r18, 0x01	; 1
 584:	80 40       	sbci	r24, 0x00	; 0
 586:	90 40       	sbci	r25, 0x00	; 0
 588:	e1 f7       	brne	.-8      	; 0x582 <__EEPROM_REGION_LENGTH__+0x182>
 58a:	00 c0       	rjmp	.+0      	; 0x58c <__EEPROM_REGION_LENGTH__+0x18c>
 58c:	00 00       	nop
		_delay_ms(200);
		printf("AT+CIPSEND=0,49\r\n");
 58e:	80 e9       	ldi	r24, 0x90	; 144
 590:	91 e0       	ldi	r25, 0x01	; 1
 592:	0e 94 9b 03 	call	0x736	; 0x736 <puts>
 596:	2f ef       	ldi	r18, 0xFF	; 255
 598:	82 e5       	ldi	r24, 0x52	; 82
 59a:	97 e0       	ldi	r25, 0x07	; 7
 59c:	21 50       	subi	r18, 0x01	; 1
 59e:	80 40       	sbci	r24, 0x00	; 0
 5a0:	90 40       	sbci	r25, 0x00	; 0
 5a2:	e1 f7       	brne	.-8      	; 0x59c <__EEPROM_REGION_LENGTH__+0x19c>
 5a4:	00 c0       	rjmp	.+0      	; 0x5a6 <__EEPROM_REGION_LENGTH__+0x1a6>
 5a6:	00 00       	nop
		_delay_ms(200);
		printf("GET /update?api_key=7IQV2A0JQYCOPDL0&field1=%d\n\r", temp); // Send to Thingspeak API 		
 5a8:	1f 92       	push	r1
 5aa:	1f 93       	push	r17
 5ac:	82 ed       	ldi	r24, 0xD2	; 210
 5ae:	91 e0       	ldi	r25, 0x01	; 1
 5b0:	9f 93       	push	r25
 5b2:	8f 93       	push	r24
 5b4:	0e 94 85 03 	call	0x70a	; 0x70a <printf>
		
		rgb.set(0,1,0); // The led indicates that the module is ready
 5b8:	20 e0       	ldi	r18, 0x00	; 0
 5ba:	41 e0       	ldi	r20, 0x01	; 1
 5bc:	60 e0       	ldi	r22, 0x00	; 0
 5be:	ce 01       	movw	r24, r28
 5c0:	01 96       	adiw	r24, 0x01	; 1
 5c2:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <_ZN3Led3setEbbb>
		dsp.show(0); // Set display to default	
 5c6:	60 e0       	ldi	r22, 0x00	; 0
 5c8:	ce 01       	movw	r24, r28
 5ca:	03 96       	adiw	r24, 0x03	; 3
 5cc:	0e 94 9a 01 	call	0x334	; 0x334 <_ZN7Display4showEh>
	printf("AT+CIPMUX=1\r\n");
	_delay_ms(200);
	rgb.set(0,1,0); // Led verte
	buzz.setBuzz(1000); // Buzz indicates the connection is Ok
	
	while (1)
 5d0:	0f b6       	in	r0, 0x3f	; 63
 5d2:	f8 94       	cli
 5d4:	de bf       	out	0x3e, r29	; 62
 5d6:	0f be       	out	0x3f, r0	; 63
 5d8:	cd bf       	out	0x3d, r28	; 61
 5da:	73 cf       	rjmp	.-282    	; 0x4c2 <__EEPROM_REGION_LENGTH__+0xc2>

000005dc <_ZN4Uart8sendByteEcP6__file>:
Uart::~Uart()
{
} //~Uart

int Uart::sendByte(char data, FILE *stream)
{
 5dc:	cf 93       	push	r28
 5de:	c8 2f       	mov	r28, r24
	if(data == '\n')
 5e0:	8a 30       	cpi	r24, 0x0A	; 10
 5e2:	29 f4       	brne	.+10     	; 0x5ee <_ZN4Uart8sendByteEcP6__file+0x12>
		sendByte('\r',0);	
 5e4:	60 e0       	ldi	r22, 0x00	; 0
 5e6:	70 e0       	ldi	r23, 0x00	; 0
 5e8:	8d e0       	ldi	r24, 0x0D	; 13
 5ea:	0e 94 ee 02 	call	0x5dc	; 0x5dc <_ZN4Uart8sendByteEcP6__file>
	while(!(UCSR0A & (1<<UDRE0))){};
 5ee:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 5f2:	85 ff       	sbrs	r24, 5
 5f4:	fc cf       	rjmp	.-8      	; 0x5ee <_ZN4Uart8sendByteEcP6__file+0x12>
	UDR0 = data;
 5f6:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	return 0;
}
 5fa:	80 e0       	ldi	r24, 0x00	; 0
 5fc:	90 e0       	ldi	r25, 0x00	; 0
 5fe:	cf 91       	pop	r28
 600:	08 95       	ret

00000602 <_ZN4Uart11receiveByteEP6__file>:

int Uart::receiveByte(FILE *stream)
{
	uint8_t data;
	while(!(UCSR0A & (1<<RXC0))){};
 602:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 606:	88 23       	and	r24, r24
 608:	e4 f7       	brge	.-8      	; 0x602 <_ZN4Uart11receiveByteEP6__file>
	data = UDR0;
 60a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	//USART_send_byte(u8data,stream);  //echo
	return data;
 60e:	90 e0       	ldi	r25, 0x00	; 0
 610:	08 95       	ret

00000612 <_ZN4UartC1Ev>:


#include "Uart.h"

// default constructor
Uart::Uart()
 612:	cf 93       	push	r28
 614:	df 93       	push	r29
 616:	ec 01       	movw	r28, r24
{
	DDRD |= (1<<HTX);					// Tx as output (not necessary, when TXEN is set, also TX is set as output)
 618:	8a b1       	in	r24, 0x0a	; 10
 61a:	82 60       	ori	r24, 0x02	; 2
 61c:	8a b9       	out	0x0a, r24	; 10
	UBRR0H = (uint8_t)(UBRR_VALUE>>8);	// BAUDERATE
 61e:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (uint8_t)UBRR_VALUE;
 622:	8c e0       	ldi	r24, 0x0C	; 12
 624:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	UCSR0C |= (1<<UCSZ01)|(1<<UCSZ00);  // 8 bits, no parity, 1 stop
 628:	e2 ec       	ldi	r30, 0xC2	; 194
 62a:	f0 e0       	ldi	r31, 0x00	; 0
 62c:	80 81       	ld	r24, Z
 62e:	86 60       	ori	r24, 0x06	; 6
 630:	80 83       	st	Z, r24
	UCSR0B |= (1<<RXEN0)|(1<<TXEN0);	// enable rx and tx
 632:	e1 ec       	ldi	r30, 0xC1	; 193
 634:	f0 e0       	ldi	r31, 0x00	; 0
 636:	80 81       	ld	r24, Z
 638:	88 61       	ori	r24, 0x18	; 24
 63a:	80 83       	st	Z, r24
	UCSR0A |= (1<<U2X0);				// double speed mode
 63c:	e0 ec       	ldi	r30, 0xC0	; 192
 63e:	f0 e0       	ldi	r31, 0x00	; 0
 640:	80 81       	ld	r24, Z
 642:	82 60       	ori	r24, 0x02	; 2
 644:	80 83       	st	Z, r24
	
	uart_ptr = fdevopen(sendByte, receiveByte);		//send , receive methods
 646:	61 e0       	ldi	r22, 0x01	; 1
 648:	73 e0       	ldi	r23, 0x03	; 3
 64a:	8e ee       	ldi	r24, 0xEE	; 238
 64c:	92 e0       	ldi	r25, 0x02	; 2
 64e:	0e 94 3a 03 	call	0x674	; 0x674 <fdevopen>
 652:	99 83       	std	Y+1, r25	; 0x01
 654:	88 83       	st	Y, r24
	stdout = stdin = uart_ptr;
 656:	e4 e0       	ldi	r30, 0x04	; 4
 658:	f2 e0       	ldi	r31, 0x02	; 2
 65a:	91 83       	std	Z+1, r25	; 0x01
 65c:	80 83       	st	Z, r24
 65e:	93 83       	std	Z+3, r25	; 0x03
 660:	82 83       	std	Z+2, r24	; 0x02
} //Uart
 662:	df 91       	pop	r29
 664:	cf 91       	pop	r28
 666:	08 95       	ret

00000668 <__tablejump2__>:
 668:	ee 0f       	add	r30, r30
 66a:	ff 1f       	adc	r31, r31
 66c:	05 90       	lpm	r0, Z+
 66e:	f4 91       	lpm	r31, Z
 670:	e0 2d       	mov	r30, r0
 672:	09 94       	ijmp

00000674 <fdevopen>:
 674:	0f 93       	push	r16
 676:	1f 93       	push	r17
 678:	cf 93       	push	r28
 67a:	df 93       	push	r29
 67c:	00 97       	sbiw	r24, 0x00	; 0
 67e:	31 f4       	brne	.+12     	; 0x68c <fdevopen+0x18>
 680:	61 15       	cp	r22, r1
 682:	71 05       	cpc	r23, r1
 684:	19 f4       	brne	.+6      	; 0x68c <fdevopen+0x18>
 686:	80 e0       	ldi	r24, 0x00	; 0
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	3a c0       	rjmp	.+116    	; 0x700 <fdevopen+0x8c>
 68c:	8b 01       	movw	r16, r22
 68e:	ec 01       	movw	r28, r24
 690:	6e e0       	ldi	r22, 0x0E	; 14
 692:	70 e0       	ldi	r23, 0x00	; 0
 694:	81 e0       	ldi	r24, 0x01	; 1
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	0e 94 ac 05 	call	0xb58	; 0xb58 <calloc>
 69c:	fc 01       	movw	r30, r24
 69e:	89 2b       	or	r24, r25
 6a0:	91 f3       	breq	.-28     	; 0x686 <fdevopen+0x12>
 6a2:	80 e8       	ldi	r24, 0x80	; 128
 6a4:	83 83       	std	Z+3, r24	; 0x03
 6a6:	01 15       	cp	r16, r1
 6a8:	11 05       	cpc	r17, r1
 6aa:	71 f0       	breq	.+28     	; 0x6c8 <fdevopen+0x54>
 6ac:	13 87       	std	Z+11, r17	; 0x0b
 6ae:	02 87       	std	Z+10, r16	; 0x0a
 6b0:	81 e8       	ldi	r24, 0x81	; 129
 6b2:	83 83       	std	Z+3, r24	; 0x03
 6b4:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <__data_end>
 6b8:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <__data_end+0x1>
 6bc:	89 2b       	or	r24, r25
 6be:	21 f4       	brne	.+8      	; 0x6c8 <fdevopen+0x54>
 6c0:	f0 93 05 02 	sts	0x0205, r31	; 0x800205 <__data_end+0x1>
 6c4:	e0 93 04 02 	sts	0x0204, r30	; 0x800204 <__data_end>
 6c8:	20 97       	sbiw	r28, 0x00	; 0
 6ca:	c9 f0       	breq	.+50     	; 0x6fe <fdevopen+0x8a>
 6cc:	d1 87       	std	Z+9, r29	; 0x09
 6ce:	c0 87       	std	Z+8, r28	; 0x08
 6d0:	83 81       	ldd	r24, Z+3	; 0x03
 6d2:	82 60       	ori	r24, 0x02	; 2
 6d4:	83 83       	std	Z+3, r24	; 0x03
 6d6:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <__data_end+0x2>
 6da:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <__data_end+0x3>
 6de:	89 2b       	or	r24, r25
 6e0:	71 f4       	brne	.+28     	; 0x6fe <fdevopen+0x8a>
 6e2:	f0 93 07 02 	sts	0x0207, r31	; 0x800207 <__data_end+0x3>
 6e6:	e0 93 06 02 	sts	0x0206, r30	; 0x800206 <__data_end+0x2>
 6ea:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <__data_end+0x4>
 6ee:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <__data_end+0x5>
 6f2:	89 2b       	or	r24, r25
 6f4:	21 f4       	brne	.+8      	; 0x6fe <fdevopen+0x8a>
 6f6:	f0 93 09 02 	sts	0x0209, r31	; 0x800209 <__data_end+0x5>
 6fa:	e0 93 08 02 	sts	0x0208, r30	; 0x800208 <__data_end+0x4>
 6fe:	cf 01       	movw	r24, r30
 700:	df 91       	pop	r29
 702:	cf 91       	pop	r28
 704:	1f 91       	pop	r17
 706:	0f 91       	pop	r16
 708:	08 95       	ret

0000070a <printf>:
 70a:	a0 e0       	ldi	r26, 0x00	; 0
 70c:	b0 e0       	ldi	r27, 0x00	; 0
 70e:	eb e8       	ldi	r30, 0x8B	; 139
 710:	f3 e0       	ldi	r31, 0x03	; 3
 712:	0c 94 b0 07 	jmp	0xf60	; 0xf60 <__prologue_saves__+0x20>
 716:	ae 01       	movw	r20, r28
 718:	4b 5f       	subi	r20, 0xFB	; 251
 71a:	5f 4f       	sbci	r21, 0xFF	; 255
 71c:	fa 01       	movw	r30, r20
 71e:	61 91       	ld	r22, Z+
 720:	71 91       	ld	r23, Z+
 722:	af 01       	movw	r20, r30
 724:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <__data_end+0x2>
 728:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <__data_end+0x3>
 72c:	0e 94 cb 03 	call	0x796	; 0x796 <vfprintf>
 730:	e2 e0       	ldi	r30, 0x02	; 2
 732:	0c 94 cc 07 	jmp	0xf98	; 0xf98 <__epilogue_restores__+0x20>

00000736 <puts>:
 736:	0f 93       	push	r16
 738:	1f 93       	push	r17
 73a:	cf 93       	push	r28
 73c:	df 93       	push	r29
 73e:	e0 91 06 02 	lds	r30, 0x0206	; 0x800206 <__data_end+0x2>
 742:	f0 91 07 02 	lds	r31, 0x0207	; 0x800207 <__data_end+0x3>
 746:	23 81       	ldd	r18, Z+3	; 0x03
 748:	21 ff       	sbrs	r18, 1
 74a:	1b c0       	rjmp	.+54     	; 0x782 <puts+0x4c>
 74c:	8c 01       	movw	r16, r24
 74e:	d0 e0       	ldi	r29, 0x00	; 0
 750:	c0 e0       	ldi	r28, 0x00	; 0
 752:	f8 01       	movw	r30, r16
 754:	81 91       	ld	r24, Z+
 756:	8f 01       	movw	r16, r30
 758:	60 91 06 02 	lds	r22, 0x0206	; 0x800206 <__data_end+0x2>
 75c:	70 91 07 02 	lds	r23, 0x0207	; 0x800207 <__data_end+0x3>
 760:	db 01       	movw	r26, r22
 762:	18 96       	adiw	r26, 0x08	; 8
 764:	ed 91       	ld	r30, X+
 766:	fc 91       	ld	r31, X
 768:	19 97       	sbiw	r26, 0x09	; 9
 76a:	88 23       	and	r24, r24
 76c:	31 f0       	breq	.+12     	; 0x77a <puts+0x44>
 76e:	09 95       	icall
 770:	89 2b       	or	r24, r25
 772:	79 f3       	breq	.-34     	; 0x752 <puts+0x1c>
 774:	df ef       	ldi	r29, 0xFF	; 255
 776:	cf ef       	ldi	r28, 0xFF	; 255
 778:	ec cf       	rjmp	.-40     	; 0x752 <puts+0x1c>
 77a:	8a e0       	ldi	r24, 0x0A	; 10
 77c:	09 95       	icall
 77e:	89 2b       	or	r24, r25
 780:	19 f0       	breq	.+6      	; 0x788 <puts+0x52>
 782:	8f ef       	ldi	r24, 0xFF	; 255
 784:	9f ef       	ldi	r25, 0xFF	; 255
 786:	02 c0       	rjmp	.+4      	; 0x78c <puts+0x56>
 788:	8d 2f       	mov	r24, r29
 78a:	9c 2f       	mov	r25, r28
 78c:	df 91       	pop	r29
 78e:	cf 91       	pop	r28
 790:	1f 91       	pop	r17
 792:	0f 91       	pop	r16
 794:	08 95       	ret

00000796 <vfprintf>:
 796:	ab e0       	ldi	r26, 0x0B	; 11
 798:	b0 e0       	ldi	r27, 0x00	; 0
 79a:	e1 ed       	ldi	r30, 0xD1	; 209
 79c:	f3 e0       	ldi	r31, 0x03	; 3
 79e:	0c 94 a0 07 	jmp	0xf40	; 0xf40 <__prologue_saves__>
 7a2:	6c 01       	movw	r12, r24
 7a4:	7b 01       	movw	r14, r22
 7a6:	8a 01       	movw	r16, r20
 7a8:	fc 01       	movw	r30, r24
 7aa:	17 82       	std	Z+7, r1	; 0x07
 7ac:	16 82       	std	Z+6, r1	; 0x06
 7ae:	83 81       	ldd	r24, Z+3	; 0x03
 7b0:	81 ff       	sbrs	r24, 1
 7b2:	cc c1       	rjmp	.+920    	; 0xb4c <__stack+0x24d>
 7b4:	ce 01       	movw	r24, r28
 7b6:	01 96       	adiw	r24, 0x01	; 1
 7b8:	3c 01       	movw	r6, r24
 7ba:	f6 01       	movw	r30, r12
 7bc:	93 81       	ldd	r25, Z+3	; 0x03
 7be:	f7 01       	movw	r30, r14
 7c0:	93 fd       	sbrc	r25, 3
 7c2:	85 91       	lpm	r24, Z+
 7c4:	93 ff       	sbrs	r25, 3
 7c6:	81 91       	ld	r24, Z+
 7c8:	7f 01       	movw	r14, r30
 7ca:	88 23       	and	r24, r24
 7cc:	09 f4       	brne	.+2      	; 0x7d0 <vfprintf+0x3a>
 7ce:	ba c1       	rjmp	.+884    	; 0xb44 <__stack+0x245>
 7d0:	85 32       	cpi	r24, 0x25	; 37
 7d2:	39 f4       	brne	.+14     	; 0x7e2 <vfprintf+0x4c>
 7d4:	93 fd       	sbrc	r25, 3
 7d6:	85 91       	lpm	r24, Z+
 7d8:	93 ff       	sbrs	r25, 3
 7da:	81 91       	ld	r24, Z+
 7dc:	7f 01       	movw	r14, r30
 7de:	85 32       	cpi	r24, 0x25	; 37
 7e0:	29 f4       	brne	.+10     	; 0x7ec <vfprintf+0x56>
 7e2:	b6 01       	movw	r22, r12
 7e4:	90 e0       	ldi	r25, 0x00	; 0
 7e6:	0e 94 06 07 	call	0xe0c	; 0xe0c <fputc>
 7ea:	e7 cf       	rjmp	.-50     	; 0x7ba <vfprintf+0x24>
 7ec:	91 2c       	mov	r9, r1
 7ee:	21 2c       	mov	r2, r1
 7f0:	31 2c       	mov	r3, r1
 7f2:	ff e1       	ldi	r31, 0x1F	; 31
 7f4:	f3 15       	cp	r31, r3
 7f6:	d8 f0       	brcs	.+54     	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 7f8:	8b 32       	cpi	r24, 0x2B	; 43
 7fa:	79 f0       	breq	.+30     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 7fc:	38 f4       	brcc	.+14     	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 7fe:	80 32       	cpi	r24, 0x20	; 32
 800:	79 f0       	breq	.+30     	; 0x820 <__DATA_REGION_LENGTH__+0x20>
 802:	83 32       	cpi	r24, 0x23	; 35
 804:	a1 f4       	brne	.+40     	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 806:	23 2d       	mov	r18, r3
 808:	20 61       	ori	r18, 0x10	; 16
 80a:	1d c0       	rjmp	.+58     	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 80c:	8d 32       	cpi	r24, 0x2D	; 45
 80e:	61 f0       	breq	.+24     	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 810:	80 33       	cpi	r24, 0x30	; 48
 812:	69 f4       	brne	.+26     	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 814:	23 2d       	mov	r18, r3
 816:	21 60       	ori	r18, 0x01	; 1
 818:	16 c0       	rjmp	.+44     	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 81a:	83 2d       	mov	r24, r3
 81c:	82 60       	ori	r24, 0x02	; 2
 81e:	38 2e       	mov	r3, r24
 820:	e3 2d       	mov	r30, r3
 822:	e4 60       	ori	r30, 0x04	; 4
 824:	3e 2e       	mov	r3, r30
 826:	2a c0       	rjmp	.+84     	; 0x87c <__DATA_REGION_LENGTH__+0x7c>
 828:	f3 2d       	mov	r31, r3
 82a:	f8 60       	ori	r31, 0x08	; 8
 82c:	1d c0       	rjmp	.+58     	; 0x868 <__DATA_REGION_LENGTH__+0x68>
 82e:	37 fc       	sbrc	r3, 7
 830:	2d c0       	rjmp	.+90     	; 0x88c <__DATA_REGION_LENGTH__+0x8c>
 832:	20 ed       	ldi	r18, 0xD0	; 208
 834:	28 0f       	add	r18, r24
 836:	2a 30       	cpi	r18, 0x0A	; 10
 838:	40 f0       	brcs	.+16     	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
 83a:	8e 32       	cpi	r24, 0x2E	; 46
 83c:	b9 f4       	brne	.+46     	; 0x86c <__DATA_REGION_LENGTH__+0x6c>
 83e:	36 fc       	sbrc	r3, 6
 840:	81 c1       	rjmp	.+770    	; 0xb44 <__stack+0x245>
 842:	23 2d       	mov	r18, r3
 844:	20 64       	ori	r18, 0x40	; 64
 846:	32 2e       	mov	r3, r18
 848:	19 c0       	rjmp	.+50     	; 0x87c <__DATA_REGION_LENGTH__+0x7c>
 84a:	36 fe       	sbrs	r3, 6
 84c:	06 c0       	rjmp	.+12     	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
 84e:	8a e0       	ldi	r24, 0x0A	; 10
 850:	98 9e       	mul	r9, r24
 852:	20 0d       	add	r18, r0
 854:	11 24       	eor	r1, r1
 856:	92 2e       	mov	r9, r18
 858:	11 c0       	rjmp	.+34     	; 0x87c <__DATA_REGION_LENGTH__+0x7c>
 85a:	ea e0       	ldi	r30, 0x0A	; 10
 85c:	2e 9e       	mul	r2, r30
 85e:	20 0d       	add	r18, r0
 860:	11 24       	eor	r1, r1
 862:	22 2e       	mov	r2, r18
 864:	f3 2d       	mov	r31, r3
 866:	f0 62       	ori	r31, 0x20	; 32
 868:	3f 2e       	mov	r3, r31
 86a:	08 c0       	rjmp	.+16     	; 0x87c <__DATA_REGION_LENGTH__+0x7c>
 86c:	8c 36       	cpi	r24, 0x6C	; 108
 86e:	21 f4       	brne	.+8      	; 0x878 <__DATA_REGION_LENGTH__+0x78>
 870:	83 2d       	mov	r24, r3
 872:	80 68       	ori	r24, 0x80	; 128
 874:	38 2e       	mov	r3, r24
 876:	02 c0       	rjmp	.+4      	; 0x87c <__DATA_REGION_LENGTH__+0x7c>
 878:	88 36       	cpi	r24, 0x68	; 104
 87a:	41 f4       	brne	.+16     	; 0x88c <__DATA_REGION_LENGTH__+0x8c>
 87c:	f7 01       	movw	r30, r14
 87e:	93 fd       	sbrc	r25, 3
 880:	85 91       	lpm	r24, Z+
 882:	93 ff       	sbrs	r25, 3
 884:	81 91       	ld	r24, Z+
 886:	7f 01       	movw	r14, r30
 888:	81 11       	cpse	r24, r1
 88a:	b3 cf       	rjmp	.-154    	; 0x7f2 <vfprintf+0x5c>
 88c:	98 2f       	mov	r25, r24
 88e:	9f 7d       	andi	r25, 0xDF	; 223
 890:	95 54       	subi	r25, 0x45	; 69
 892:	93 30       	cpi	r25, 0x03	; 3
 894:	28 f4       	brcc	.+10     	; 0x8a0 <__DATA_REGION_LENGTH__+0xa0>
 896:	0c 5f       	subi	r16, 0xFC	; 252
 898:	1f 4f       	sbci	r17, 0xFF	; 255
 89a:	9f e3       	ldi	r25, 0x3F	; 63
 89c:	99 83       	std	Y+1, r25	; 0x01
 89e:	0d c0       	rjmp	.+26     	; 0x8ba <__DATA_REGION_LENGTH__+0xba>
 8a0:	83 36       	cpi	r24, 0x63	; 99
 8a2:	31 f0       	breq	.+12     	; 0x8b0 <__DATA_REGION_LENGTH__+0xb0>
 8a4:	83 37       	cpi	r24, 0x73	; 115
 8a6:	71 f0       	breq	.+28     	; 0x8c4 <__DATA_REGION_LENGTH__+0xc4>
 8a8:	83 35       	cpi	r24, 0x53	; 83
 8aa:	09 f0       	breq	.+2      	; 0x8ae <__DATA_REGION_LENGTH__+0xae>
 8ac:	59 c0       	rjmp	.+178    	; 0x960 <__stack+0x61>
 8ae:	21 c0       	rjmp	.+66     	; 0x8f2 <__DATA_REGION_LENGTH__+0xf2>
 8b0:	f8 01       	movw	r30, r16
 8b2:	80 81       	ld	r24, Z
 8b4:	89 83       	std	Y+1, r24	; 0x01
 8b6:	0e 5f       	subi	r16, 0xFE	; 254
 8b8:	1f 4f       	sbci	r17, 0xFF	; 255
 8ba:	88 24       	eor	r8, r8
 8bc:	83 94       	inc	r8
 8be:	91 2c       	mov	r9, r1
 8c0:	53 01       	movw	r10, r6
 8c2:	13 c0       	rjmp	.+38     	; 0x8ea <__DATA_REGION_LENGTH__+0xea>
 8c4:	28 01       	movw	r4, r16
 8c6:	f2 e0       	ldi	r31, 0x02	; 2
 8c8:	4f 0e       	add	r4, r31
 8ca:	51 1c       	adc	r5, r1
 8cc:	f8 01       	movw	r30, r16
 8ce:	a0 80       	ld	r10, Z
 8d0:	b1 80       	ldd	r11, Z+1	; 0x01
 8d2:	36 fe       	sbrs	r3, 6
 8d4:	03 c0       	rjmp	.+6      	; 0x8dc <__DATA_REGION_LENGTH__+0xdc>
 8d6:	69 2d       	mov	r22, r9
 8d8:	70 e0       	ldi	r23, 0x00	; 0
 8da:	02 c0       	rjmp	.+4      	; 0x8e0 <__DATA_REGION_LENGTH__+0xe0>
 8dc:	6f ef       	ldi	r22, 0xFF	; 255
 8de:	7f ef       	ldi	r23, 0xFF	; 255
 8e0:	c5 01       	movw	r24, r10
 8e2:	0e 94 fb 06 	call	0xdf6	; 0xdf6 <strnlen>
 8e6:	4c 01       	movw	r8, r24
 8e8:	82 01       	movw	r16, r4
 8ea:	f3 2d       	mov	r31, r3
 8ec:	ff 77       	andi	r31, 0x7F	; 127
 8ee:	3f 2e       	mov	r3, r31
 8f0:	16 c0       	rjmp	.+44     	; 0x91e <__stack+0x1f>
 8f2:	28 01       	movw	r4, r16
 8f4:	22 e0       	ldi	r18, 0x02	; 2
 8f6:	42 0e       	add	r4, r18
 8f8:	51 1c       	adc	r5, r1
 8fa:	f8 01       	movw	r30, r16
 8fc:	a0 80       	ld	r10, Z
 8fe:	b1 80       	ldd	r11, Z+1	; 0x01
 900:	36 fe       	sbrs	r3, 6
 902:	03 c0       	rjmp	.+6      	; 0x90a <__stack+0xb>
 904:	69 2d       	mov	r22, r9
 906:	70 e0       	ldi	r23, 0x00	; 0
 908:	02 c0       	rjmp	.+4      	; 0x90e <__stack+0xf>
 90a:	6f ef       	ldi	r22, 0xFF	; 255
 90c:	7f ef       	ldi	r23, 0xFF	; 255
 90e:	c5 01       	movw	r24, r10
 910:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <strnlen_P>
 914:	4c 01       	movw	r8, r24
 916:	f3 2d       	mov	r31, r3
 918:	f0 68       	ori	r31, 0x80	; 128
 91a:	3f 2e       	mov	r3, r31
 91c:	82 01       	movw	r16, r4
 91e:	33 fc       	sbrc	r3, 3
 920:	1b c0       	rjmp	.+54     	; 0x958 <__stack+0x59>
 922:	82 2d       	mov	r24, r2
 924:	90 e0       	ldi	r25, 0x00	; 0
 926:	88 16       	cp	r8, r24
 928:	99 06       	cpc	r9, r25
 92a:	b0 f4       	brcc	.+44     	; 0x958 <__stack+0x59>
 92c:	b6 01       	movw	r22, r12
 92e:	80 e2       	ldi	r24, 0x20	; 32
 930:	90 e0       	ldi	r25, 0x00	; 0
 932:	0e 94 06 07 	call	0xe0c	; 0xe0c <fputc>
 936:	2a 94       	dec	r2
 938:	f4 cf       	rjmp	.-24     	; 0x922 <__stack+0x23>
 93a:	f5 01       	movw	r30, r10
 93c:	37 fc       	sbrc	r3, 7
 93e:	85 91       	lpm	r24, Z+
 940:	37 fe       	sbrs	r3, 7
 942:	81 91       	ld	r24, Z+
 944:	5f 01       	movw	r10, r30
 946:	b6 01       	movw	r22, r12
 948:	90 e0       	ldi	r25, 0x00	; 0
 94a:	0e 94 06 07 	call	0xe0c	; 0xe0c <fputc>
 94e:	21 10       	cpse	r2, r1
 950:	2a 94       	dec	r2
 952:	21 e0       	ldi	r18, 0x01	; 1
 954:	82 1a       	sub	r8, r18
 956:	91 08       	sbc	r9, r1
 958:	81 14       	cp	r8, r1
 95a:	91 04       	cpc	r9, r1
 95c:	71 f7       	brne	.-36     	; 0x93a <__stack+0x3b>
 95e:	e8 c0       	rjmp	.+464    	; 0xb30 <__stack+0x231>
 960:	84 36       	cpi	r24, 0x64	; 100
 962:	11 f0       	breq	.+4      	; 0x968 <__stack+0x69>
 964:	89 36       	cpi	r24, 0x69	; 105
 966:	41 f5       	brne	.+80     	; 0x9b8 <__stack+0xb9>
 968:	f8 01       	movw	r30, r16
 96a:	37 fe       	sbrs	r3, 7
 96c:	07 c0       	rjmp	.+14     	; 0x97c <__stack+0x7d>
 96e:	60 81       	ld	r22, Z
 970:	71 81       	ldd	r23, Z+1	; 0x01
 972:	82 81       	ldd	r24, Z+2	; 0x02
 974:	93 81       	ldd	r25, Z+3	; 0x03
 976:	0c 5f       	subi	r16, 0xFC	; 252
 978:	1f 4f       	sbci	r17, 0xFF	; 255
 97a:	08 c0       	rjmp	.+16     	; 0x98c <__stack+0x8d>
 97c:	60 81       	ld	r22, Z
 97e:	71 81       	ldd	r23, Z+1	; 0x01
 980:	07 2e       	mov	r0, r23
 982:	00 0c       	add	r0, r0
 984:	88 0b       	sbc	r24, r24
 986:	99 0b       	sbc	r25, r25
 988:	0e 5f       	subi	r16, 0xFE	; 254
 98a:	1f 4f       	sbci	r17, 0xFF	; 255
 98c:	f3 2d       	mov	r31, r3
 98e:	ff 76       	andi	r31, 0x6F	; 111
 990:	3f 2e       	mov	r3, r31
 992:	97 ff       	sbrs	r25, 7
 994:	09 c0       	rjmp	.+18     	; 0x9a8 <__stack+0xa9>
 996:	90 95       	com	r25
 998:	80 95       	com	r24
 99a:	70 95       	com	r23
 99c:	61 95       	neg	r22
 99e:	7f 4f       	sbci	r23, 0xFF	; 255
 9a0:	8f 4f       	sbci	r24, 0xFF	; 255
 9a2:	9f 4f       	sbci	r25, 0xFF	; 255
 9a4:	f0 68       	ori	r31, 0x80	; 128
 9a6:	3f 2e       	mov	r3, r31
 9a8:	2a e0       	ldi	r18, 0x0A	; 10
 9aa:	30 e0       	ldi	r19, 0x00	; 0
 9ac:	a3 01       	movw	r20, r6
 9ae:	0e 94 42 07 	call	0xe84	; 0xe84 <__ultoa_invert>
 9b2:	88 2e       	mov	r8, r24
 9b4:	86 18       	sub	r8, r6
 9b6:	45 c0       	rjmp	.+138    	; 0xa42 <__stack+0x143>
 9b8:	85 37       	cpi	r24, 0x75	; 117
 9ba:	31 f4       	brne	.+12     	; 0x9c8 <__stack+0xc9>
 9bc:	23 2d       	mov	r18, r3
 9be:	2f 7e       	andi	r18, 0xEF	; 239
 9c0:	b2 2e       	mov	r11, r18
 9c2:	2a e0       	ldi	r18, 0x0A	; 10
 9c4:	30 e0       	ldi	r19, 0x00	; 0
 9c6:	25 c0       	rjmp	.+74     	; 0xa12 <__stack+0x113>
 9c8:	93 2d       	mov	r25, r3
 9ca:	99 7f       	andi	r25, 0xF9	; 249
 9cc:	b9 2e       	mov	r11, r25
 9ce:	8f 36       	cpi	r24, 0x6F	; 111
 9d0:	c1 f0       	breq	.+48     	; 0xa02 <__stack+0x103>
 9d2:	18 f4       	brcc	.+6      	; 0x9da <__stack+0xdb>
 9d4:	88 35       	cpi	r24, 0x58	; 88
 9d6:	79 f0       	breq	.+30     	; 0x9f6 <__stack+0xf7>
 9d8:	b5 c0       	rjmp	.+362    	; 0xb44 <__stack+0x245>
 9da:	80 37       	cpi	r24, 0x70	; 112
 9dc:	19 f0       	breq	.+6      	; 0x9e4 <__stack+0xe5>
 9de:	88 37       	cpi	r24, 0x78	; 120
 9e0:	21 f0       	breq	.+8      	; 0x9ea <__stack+0xeb>
 9e2:	b0 c0       	rjmp	.+352    	; 0xb44 <__stack+0x245>
 9e4:	e9 2f       	mov	r30, r25
 9e6:	e0 61       	ori	r30, 0x10	; 16
 9e8:	be 2e       	mov	r11, r30
 9ea:	b4 fe       	sbrs	r11, 4
 9ec:	0d c0       	rjmp	.+26     	; 0xa08 <__stack+0x109>
 9ee:	fb 2d       	mov	r31, r11
 9f0:	f4 60       	ori	r31, 0x04	; 4
 9f2:	bf 2e       	mov	r11, r31
 9f4:	09 c0       	rjmp	.+18     	; 0xa08 <__stack+0x109>
 9f6:	34 fe       	sbrs	r3, 4
 9f8:	0a c0       	rjmp	.+20     	; 0xa0e <__stack+0x10f>
 9fa:	29 2f       	mov	r18, r25
 9fc:	26 60       	ori	r18, 0x06	; 6
 9fe:	b2 2e       	mov	r11, r18
 a00:	06 c0       	rjmp	.+12     	; 0xa0e <__stack+0x10f>
 a02:	28 e0       	ldi	r18, 0x08	; 8
 a04:	30 e0       	ldi	r19, 0x00	; 0
 a06:	05 c0       	rjmp	.+10     	; 0xa12 <__stack+0x113>
 a08:	20 e1       	ldi	r18, 0x10	; 16
 a0a:	30 e0       	ldi	r19, 0x00	; 0
 a0c:	02 c0       	rjmp	.+4      	; 0xa12 <__stack+0x113>
 a0e:	20 e1       	ldi	r18, 0x10	; 16
 a10:	32 e0       	ldi	r19, 0x02	; 2
 a12:	f8 01       	movw	r30, r16
 a14:	b7 fe       	sbrs	r11, 7
 a16:	07 c0       	rjmp	.+14     	; 0xa26 <__stack+0x127>
 a18:	60 81       	ld	r22, Z
 a1a:	71 81       	ldd	r23, Z+1	; 0x01
 a1c:	82 81       	ldd	r24, Z+2	; 0x02
 a1e:	93 81       	ldd	r25, Z+3	; 0x03
 a20:	0c 5f       	subi	r16, 0xFC	; 252
 a22:	1f 4f       	sbci	r17, 0xFF	; 255
 a24:	06 c0       	rjmp	.+12     	; 0xa32 <__stack+0x133>
 a26:	60 81       	ld	r22, Z
 a28:	71 81       	ldd	r23, Z+1	; 0x01
 a2a:	80 e0       	ldi	r24, 0x00	; 0
 a2c:	90 e0       	ldi	r25, 0x00	; 0
 a2e:	0e 5f       	subi	r16, 0xFE	; 254
 a30:	1f 4f       	sbci	r17, 0xFF	; 255
 a32:	a3 01       	movw	r20, r6
 a34:	0e 94 42 07 	call	0xe84	; 0xe84 <__ultoa_invert>
 a38:	88 2e       	mov	r8, r24
 a3a:	86 18       	sub	r8, r6
 a3c:	fb 2d       	mov	r31, r11
 a3e:	ff 77       	andi	r31, 0x7F	; 127
 a40:	3f 2e       	mov	r3, r31
 a42:	36 fe       	sbrs	r3, 6
 a44:	0d c0       	rjmp	.+26     	; 0xa60 <__stack+0x161>
 a46:	23 2d       	mov	r18, r3
 a48:	2e 7f       	andi	r18, 0xFE	; 254
 a4a:	a2 2e       	mov	r10, r18
 a4c:	89 14       	cp	r8, r9
 a4e:	58 f4       	brcc	.+22     	; 0xa66 <__stack+0x167>
 a50:	34 fe       	sbrs	r3, 4
 a52:	0b c0       	rjmp	.+22     	; 0xa6a <__stack+0x16b>
 a54:	32 fc       	sbrc	r3, 2
 a56:	09 c0       	rjmp	.+18     	; 0xa6a <__stack+0x16b>
 a58:	83 2d       	mov	r24, r3
 a5a:	8e 7e       	andi	r24, 0xEE	; 238
 a5c:	a8 2e       	mov	r10, r24
 a5e:	05 c0       	rjmp	.+10     	; 0xa6a <__stack+0x16b>
 a60:	b8 2c       	mov	r11, r8
 a62:	a3 2c       	mov	r10, r3
 a64:	03 c0       	rjmp	.+6      	; 0xa6c <__stack+0x16d>
 a66:	b8 2c       	mov	r11, r8
 a68:	01 c0       	rjmp	.+2      	; 0xa6c <__stack+0x16d>
 a6a:	b9 2c       	mov	r11, r9
 a6c:	a4 fe       	sbrs	r10, 4
 a6e:	0f c0       	rjmp	.+30     	; 0xa8e <__stack+0x18f>
 a70:	fe 01       	movw	r30, r28
 a72:	e8 0d       	add	r30, r8
 a74:	f1 1d       	adc	r31, r1
 a76:	80 81       	ld	r24, Z
 a78:	80 33       	cpi	r24, 0x30	; 48
 a7a:	21 f4       	brne	.+8      	; 0xa84 <__stack+0x185>
 a7c:	9a 2d       	mov	r25, r10
 a7e:	99 7e       	andi	r25, 0xE9	; 233
 a80:	a9 2e       	mov	r10, r25
 a82:	09 c0       	rjmp	.+18     	; 0xa96 <__stack+0x197>
 a84:	a2 fe       	sbrs	r10, 2
 a86:	06 c0       	rjmp	.+12     	; 0xa94 <__stack+0x195>
 a88:	b3 94       	inc	r11
 a8a:	b3 94       	inc	r11
 a8c:	04 c0       	rjmp	.+8      	; 0xa96 <__stack+0x197>
 a8e:	8a 2d       	mov	r24, r10
 a90:	86 78       	andi	r24, 0x86	; 134
 a92:	09 f0       	breq	.+2      	; 0xa96 <__stack+0x197>
 a94:	b3 94       	inc	r11
 a96:	a3 fc       	sbrc	r10, 3
 a98:	11 c0       	rjmp	.+34     	; 0xabc <__stack+0x1bd>
 a9a:	a0 fe       	sbrs	r10, 0
 a9c:	06 c0       	rjmp	.+12     	; 0xaaa <__stack+0x1ab>
 a9e:	b2 14       	cp	r11, r2
 aa0:	88 f4       	brcc	.+34     	; 0xac4 <__stack+0x1c5>
 aa2:	28 0c       	add	r2, r8
 aa4:	92 2c       	mov	r9, r2
 aa6:	9b 18       	sub	r9, r11
 aa8:	0e c0       	rjmp	.+28     	; 0xac6 <__stack+0x1c7>
 aaa:	b2 14       	cp	r11, r2
 aac:	60 f4       	brcc	.+24     	; 0xac6 <__stack+0x1c7>
 aae:	b6 01       	movw	r22, r12
 ab0:	80 e2       	ldi	r24, 0x20	; 32
 ab2:	90 e0       	ldi	r25, 0x00	; 0
 ab4:	0e 94 06 07 	call	0xe0c	; 0xe0c <fputc>
 ab8:	b3 94       	inc	r11
 aba:	f7 cf       	rjmp	.-18     	; 0xaaa <__stack+0x1ab>
 abc:	b2 14       	cp	r11, r2
 abe:	18 f4       	brcc	.+6      	; 0xac6 <__stack+0x1c7>
 ac0:	2b 18       	sub	r2, r11
 ac2:	02 c0       	rjmp	.+4      	; 0xac8 <__stack+0x1c9>
 ac4:	98 2c       	mov	r9, r8
 ac6:	21 2c       	mov	r2, r1
 ac8:	a4 fe       	sbrs	r10, 4
 aca:	10 c0       	rjmp	.+32     	; 0xaec <__stack+0x1ed>
 acc:	b6 01       	movw	r22, r12
 ace:	80 e3       	ldi	r24, 0x30	; 48
 ad0:	90 e0       	ldi	r25, 0x00	; 0
 ad2:	0e 94 06 07 	call	0xe0c	; 0xe0c <fputc>
 ad6:	a2 fe       	sbrs	r10, 2
 ad8:	17 c0       	rjmp	.+46     	; 0xb08 <__stack+0x209>
 ada:	a1 fc       	sbrc	r10, 1
 adc:	03 c0       	rjmp	.+6      	; 0xae4 <__stack+0x1e5>
 ade:	88 e7       	ldi	r24, 0x78	; 120
 ae0:	90 e0       	ldi	r25, 0x00	; 0
 ae2:	02 c0       	rjmp	.+4      	; 0xae8 <__stack+0x1e9>
 ae4:	88 e5       	ldi	r24, 0x58	; 88
 ae6:	90 e0       	ldi	r25, 0x00	; 0
 ae8:	b6 01       	movw	r22, r12
 aea:	0c c0       	rjmp	.+24     	; 0xb04 <__stack+0x205>
 aec:	8a 2d       	mov	r24, r10
 aee:	86 78       	andi	r24, 0x86	; 134
 af0:	59 f0       	breq	.+22     	; 0xb08 <__stack+0x209>
 af2:	a1 fe       	sbrs	r10, 1
 af4:	02 c0       	rjmp	.+4      	; 0xafa <__stack+0x1fb>
 af6:	8b e2       	ldi	r24, 0x2B	; 43
 af8:	01 c0       	rjmp	.+2      	; 0xafc <__stack+0x1fd>
 afa:	80 e2       	ldi	r24, 0x20	; 32
 afc:	a7 fc       	sbrc	r10, 7
 afe:	8d e2       	ldi	r24, 0x2D	; 45
 b00:	b6 01       	movw	r22, r12
 b02:	90 e0       	ldi	r25, 0x00	; 0
 b04:	0e 94 06 07 	call	0xe0c	; 0xe0c <fputc>
 b08:	89 14       	cp	r8, r9
 b0a:	38 f4       	brcc	.+14     	; 0xb1a <__stack+0x21b>
 b0c:	b6 01       	movw	r22, r12
 b0e:	80 e3       	ldi	r24, 0x30	; 48
 b10:	90 e0       	ldi	r25, 0x00	; 0
 b12:	0e 94 06 07 	call	0xe0c	; 0xe0c <fputc>
 b16:	9a 94       	dec	r9
 b18:	f7 cf       	rjmp	.-18     	; 0xb08 <__stack+0x209>
 b1a:	8a 94       	dec	r8
 b1c:	f3 01       	movw	r30, r6
 b1e:	e8 0d       	add	r30, r8
 b20:	f1 1d       	adc	r31, r1
 b22:	80 81       	ld	r24, Z
 b24:	b6 01       	movw	r22, r12
 b26:	90 e0       	ldi	r25, 0x00	; 0
 b28:	0e 94 06 07 	call	0xe0c	; 0xe0c <fputc>
 b2c:	81 10       	cpse	r8, r1
 b2e:	f5 cf       	rjmp	.-22     	; 0xb1a <__stack+0x21b>
 b30:	22 20       	and	r2, r2
 b32:	09 f4       	brne	.+2      	; 0xb36 <__stack+0x237>
 b34:	42 ce       	rjmp	.-892    	; 0x7ba <vfprintf+0x24>
 b36:	b6 01       	movw	r22, r12
 b38:	80 e2       	ldi	r24, 0x20	; 32
 b3a:	90 e0       	ldi	r25, 0x00	; 0
 b3c:	0e 94 06 07 	call	0xe0c	; 0xe0c <fputc>
 b40:	2a 94       	dec	r2
 b42:	f6 cf       	rjmp	.-20     	; 0xb30 <__stack+0x231>
 b44:	f6 01       	movw	r30, r12
 b46:	86 81       	ldd	r24, Z+6	; 0x06
 b48:	97 81       	ldd	r25, Z+7	; 0x07
 b4a:	02 c0       	rjmp	.+4      	; 0xb50 <__stack+0x251>
 b4c:	8f ef       	ldi	r24, 0xFF	; 255
 b4e:	9f ef       	ldi	r25, 0xFF	; 255
 b50:	2b 96       	adiw	r28, 0x0b	; 11
 b52:	e2 e1       	ldi	r30, 0x12	; 18
 b54:	0c 94 bc 07 	jmp	0xf78	; 0xf78 <__epilogue_restores__>

00000b58 <calloc>:
 b58:	0f 93       	push	r16
 b5a:	1f 93       	push	r17
 b5c:	cf 93       	push	r28
 b5e:	df 93       	push	r29
 b60:	86 9f       	mul	r24, r22
 b62:	80 01       	movw	r16, r0
 b64:	87 9f       	mul	r24, r23
 b66:	10 0d       	add	r17, r0
 b68:	96 9f       	mul	r25, r22
 b6a:	10 0d       	add	r17, r0
 b6c:	11 24       	eor	r1, r1
 b6e:	c8 01       	movw	r24, r16
 b70:	0e 94 c8 05 	call	0xb90	; 0xb90 <malloc>
 b74:	ec 01       	movw	r28, r24
 b76:	00 97       	sbiw	r24, 0x00	; 0
 b78:	29 f0       	breq	.+10     	; 0xb84 <calloc+0x2c>
 b7a:	a8 01       	movw	r20, r16
 b7c:	60 e0       	ldi	r22, 0x00	; 0
 b7e:	70 e0       	ldi	r23, 0x00	; 0
 b80:	0e 94 f4 06 	call	0xde8	; 0xde8 <memset>
 b84:	ce 01       	movw	r24, r28
 b86:	df 91       	pop	r29
 b88:	cf 91       	pop	r28
 b8a:	1f 91       	pop	r17
 b8c:	0f 91       	pop	r16
 b8e:	08 95       	ret

00000b90 <malloc>:
 b90:	0f 93       	push	r16
 b92:	1f 93       	push	r17
 b94:	cf 93       	push	r28
 b96:	df 93       	push	r29
 b98:	82 30       	cpi	r24, 0x02	; 2
 b9a:	91 05       	cpc	r25, r1
 b9c:	10 f4       	brcc	.+4      	; 0xba2 <malloc+0x12>
 b9e:	82 e0       	ldi	r24, 0x02	; 2
 ba0:	90 e0       	ldi	r25, 0x00	; 0
 ba2:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <__flp>
 ba6:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <__flp+0x1>
 baa:	20 e0       	ldi	r18, 0x00	; 0
 bac:	30 e0       	ldi	r19, 0x00	; 0
 bae:	a0 e0       	ldi	r26, 0x00	; 0
 bb0:	b0 e0       	ldi	r27, 0x00	; 0
 bb2:	30 97       	sbiw	r30, 0x00	; 0
 bb4:	19 f1       	breq	.+70     	; 0xbfc <malloc+0x6c>
 bb6:	40 81       	ld	r20, Z
 bb8:	51 81       	ldd	r21, Z+1	; 0x01
 bba:	02 81       	ldd	r16, Z+2	; 0x02
 bbc:	13 81       	ldd	r17, Z+3	; 0x03
 bbe:	48 17       	cp	r20, r24
 bc0:	59 07       	cpc	r21, r25
 bc2:	c8 f0       	brcs	.+50     	; 0xbf6 <malloc+0x66>
 bc4:	84 17       	cp	r24, r20
 bc6:	95 07       	cpc	r25, r21
 bc8:	69 f4       	brne	.+26     	; 0xbe4 <malloc+0x54>
 bca:	10 97       	sbiw	r26, 0x00	; 0
 bcc:	31 f0       	breq	.+12     	; 0xbda <malloc+0x4a>
 bce:	12 96       	adiw	r26, 0x02	; 2
 bd0:	0c 93       	st	X, r16
 bd2:	12 97       	sbiw	r26, 0x02	; 2
 bd4:	13 96       	adiw	r26, 0x03	; 3
 bd6:	1c 93       	st	X, r17
 bd8:	27 c0       	rjmp	.+78     	; 0xc28 <malloc+0x98>
 bda:	00 93 0c 02 	sts	0x020C, r16	; 0x80020c <__flp>
 bde:	10 93 0d 02 	sts	0x020D, r17	; 0x80020d <__flp+0x1>
 be2:	22 c0       	rjmp	.+68     	; 0xc28 <malloc+0x98>
 be4:	21 15       	cp	r18, r1
 be6:	31 05       	cpc	r19, r1
 be8:	19 f0       	breq	.+6      	; 0xbf0 <malloc+0x60>
 bea:	42 17       	cp	r20, r18
 bec:	53 07       	cpc	r21, r19
 bee:	18 f4       	brcc	.+6      	; 0xbf6 <malloc+0x66>
 bf0:	9a 01       	movw	r18, r20
 bf2:	bd 01       	movw	r22, r26
 bf4:	ef 01       	movw	r28, r30
 bf6:	df 01       	movw	r26, r30
 bf8:	f8 01       	movw	r30, r16
 bfa:	db cf       	rjmp	.-74     	; 0xbb2 <malloc+0x22>
 bfc:	21 15       	cp	r18, r1
 bfe:	31 05       	cpc	r19, r1
 c00:	f9 f0       	breq	.+62     	; 0xc40 <malloc+0xb0>
 c02:	28 1b       	sub	r18, r24
 c04:	39 0b       	sbc	r19, r25
 c06:	24 30       	cpi	r18, 0x04	; 4
 c08:	31 05       	cpc	r19, r1
 c0a:	80 f4       	brcc	.+32     	; 0xc2c <malloc+0x9c>
 c0c:	8a 81       	ldd	r24, Y+2	; 0x02
 c0e:	9b 81       	ldd	r25, Y+3	; 0x03
 c10:	61 15       	cp	r22, r1
 c12:	71 05       	cpc	r23, r1
 c14:	21 f0       	breq	.+8      	; 0xc1e <malloc+0x8e>
 c16:	fb 01       	movw	r30, r22
 c18:	93 83       	std	Z+3, r25	; 0x03
 c1a:	82 83       	std	Z+2, r24	; 0x02
 c1c:	04 c0       	rjmp	.+8      	; 0xc26 <malloc+0x96>
 c1e:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <__flp+0x1>
 c22:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <__flp>
 c26:	fe 01       	movw	r30, r28
 c28:	32 96       	adiw	r30, 0x02	; 2
 c2a:	44 c0       	rjmp	.+136    	; 0xcb4 <malloc+0x124>
 c2c:	fe 01       	movw	r30, r28
 c2e:	e2 0f       	add	r30, r18
 c30:	f3 1f       	adc	r31, r19
 c32:	81 93       	st	Z+, r24
 c34:	91 93       	st	Z+, r25
 c36:	22 50       	subi	r18, 0x02	; 2
 c38:	31 09       	sbc	r19, r1
 c3a:	39 83       	std	Y+1, r19	; 0x01
 c3c:	28 83       	st	Y, r18
 c3e:	3a c0       	rjmp	.+116    	; 0xcb4 <malloc+0x124>
 c40:	20 91 0a 02 	lds	r18, 0x020A	; 0x80020a <__brkval>
 c44:	30 91 0b 02 	lds	r19, 0x020B	; 0x80020b <__brkval+0x1>
 c48:	23 2b       	or	r18, r19
 c4a:	41 f4       	brne	.+16     	; 0xc5c <malloc+0xcc>
 c4c:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 c50:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 c54:	30 93 0b 02 	sts	0x020B, r19	; 0x80020b <__brkval+0x1>
 c58:	20 93 0a 02 	sts	0x020A, r18	; 0x80020a <__brkval>
 c5c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 c60:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 c64:	21 15       	cp	r18, r1
 c66:	31 05       	cpc	r19, r1
 c68:	41 f4       	brne	.+16     	; 0xc7a <malloc+0xea>
 c6a:	2d b7       	in	r18, 0x3d	; 61
 c6c:	3e b7       	in	r19, 0x3e	; 62
 c6e:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 c72:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 c76:	24 1b       	sub	r18, r20
 c78:	35 0b       	sbc	r19, r21
 c7a:	e0 91 0a 02 	lds	r30, 0x020A	; 0x80020a <__brkval>
 c7e:	f0 91 0b 02 	lds	r31, 0x020B	; 0x80020b <__brkval+0x1>
 c82:	e2 17       	cp	r30, r18
 c84:	f3 07       	cpc	r31, r19
 c86:	a0 f4       	brcc	.+40     	; 0xcb0 <malloc+0x120>
 c88:	2e 1b       	sub	r18, r30
 c8a:	3f 0b       	sbc	r19, r31
 c8c:	28 17       	cp	r18, r24
 c8e:	39 07       	cpc	r19, r25
 c90:	78 f0       	brcs	.+30     	; 0xcb0 <malloc+0x120>
 c92:	ac 01       	movw	r20, r24
 c94:	4e 5f       	subi	r20, 0xFE	; 254
 c96:	5f 4f       	sbci	r21, 0xFF	; 255
 c98:	24 17       	cp	r18, r20
 c9a:	35 07       	cpc	r19, r21
 c9c:	48 f0       	brcs	.+18     	; 0xcb0 <malloc+0x120>
 c9e:	4e 0f       	add	r20, r30
 ca0:	5f 1f       	adc	r21, r31
 ca2:	50 93 0b 02 	sts	0x020B, r21	; 0x80020b <__brkval+0x1>
 ca6:	40 93 0a 02 	sts	0x020A, r20	; 0x80020a <__brkval>
 caa:	81 93       	st	Z+, r24
 cac:	91 93       	st	Z+, r25
 cae:	02 c0       	rjmp	.+4      	; 0xcb4 <malloc+0x124>
 cb0:	e0 e0       	ldi	r30, 0x00	; 0
 cb2:	f0 e0       	ldi	r31, 0x00	; 0
 cb4:	cf 01       	movw	r24, r30
 cb6:	df 91       	pop	r29
 cb8:	cf 91       	pop	r28
 cba:	1f 91       	pop	r17
 cbc:	0f 91       	pop	r16
 cbe:	08 95       	ret

00000cc0 <free>:
 cc0:	cf 93       	push	r28
 cc2:	df 93       	push	r29
 cc4:	00 97       	sbiw	r24, 0x00	; 0
 cc6:	09 f4       	brne	.+2      	; 0xcca <free+0xa>
 cc8:	81 c0       	rjmp	.+258    	; 0xdcc <free+0x10c>
 cca:	fc 01       	movw	r30, r24
 ccc:	32 97       	sbiw	r30, 0x02	; 2
 cce:	13 82       	std	Z+3, r1	; 0x03
 cd0:	12 82       	std	Z+2, r1	; 0x02
 cd2:	a0 91 0c 02 	lds	r26, 0x020C	; 0x80020c <__flp>
 cd6:	b0 91 0d 02 	lds	r27, 0x020D	; 0x80020d <__flp+0x1>
 cda:	10 97       	sbiw	r26, 0x00	; 0
 cdc:	81 f4       	brne	.+32     	; 0xcfe <free+0x3e>
 cde:	20 81       	ld	r18, Z
 ce0:	31 81       	ldd	r19, Z+1	; 0x01
 ce2:	82 0f       	add	r24, r18
 ce4:	93 1f       	adc	r25, r19
 ce6:	20 91 0a 02 	lds	r18, 0x020A	; 0x80020a <__brkval>
 cea:	30 91 0b 02 	lds	r19, 0x020B	; 0x80020b <__brkval+0x1>
 cee:	28 17       	cp	r18, r24
 cf0:	39 07       	cpc	r19, r25
 cf2:	51 f5       	brne	.+84     	; 0xd48 <free+0x88>
 cf4:	f0 93 0b 02 	sts	0x020B, r31	; 0x80020b <__brkval+0x1>
 cf8:	e0 93 0a 02 	sts	0x020A, r30	; 0x80020a <__brkval>
 cfc:	67 c0       	rjmp	.+206    	; 0xdcc <free+0x10c>
 cfe:	ed 01       	movw	r28, r26
 d00:	20 e0       	ldi	r18, 0x00	; 0
 d02:	30 e0       	ldi	r19, 0x00	; 0
 d04:	ce 17       	cp	r28, r30
 d06:	df 07       	cpc	r29, r31
 d08:	40 f4       	brcc	.+16     	; 0xd1a <free+0x5a>
 d0a:	4a 81       	ldd	r20, Y+2	; 0x02
 d0c:	5b 81       	ldd	r21, Y+3	; 0x03
 d0e:	9e 01       	movw	r18, r28
 d10:	41 15       	cp	r20, r1
 d12:	51 05       	cpc	r21, r1
 d14:	f1 f0       	breq	.+60     	; 0xd52 <free+0x92>
 d16:	ea 01       	movw	r28, r20
 d18:	f5 cf       	rjmp	.-22     	; 0xd04 <free+0x44>
 d1a:	d3 83       	std	Z+3, r29	; 0x03
 d1c:	c2 83       	std	Z+2, r28	; 0x02
 d1e:	40 81       	ld	r20, Z
 d20:	51 81       	ldd	r21, Z+1	; 0x01
 d22:	84 0f       	add	r24, r20
 d24:	95 1f       	adc	r25, r21
 d26:	c8 17       	cp	r28, r24
 d28:	d9 07       	cpc	r29, r25
 d2a:	59 f4       	brne	.+22     	; 0xd42 <free+0x82>
 d2c:	88 81       	ld	r24, Y
 d2e:	99 81       	ldd	r25, Y+1	; 0x01
 d30:	84 0f       	add	r24, r20
 d32:	95 1f       	adc	r25, r21
 d34:	02 96       	adiw	r24, 0x02	; 2
 d36:	91 83       	std	Z+1, r25	; 0x01
 d38:	80 83       	st	Z, r24
 d3a:	8a 81       	ldd	r24, Y+2	; 0x02
 d3c:	9b 81       	ldd	r25, Y+3	; 0x03
 d3e:	93 83       	std	Z+3, r25	; 0x03
 d40:	82 83       	std	Z+2, r24	; 0x02
 d42:	21 15       	cp	r18, r1
 d44:	31 05       	cpc	r19, r1
 d46:	29 f4       	brne	.+10     	; 0xd52 <free+0x92>
 d48:	f0 93 0d 02 	sts	0x020D, r31	; 0x80020d <__flp+0x1>
 d4c:	e0 93 0c 02 	sts	0x020C, r30	; 0x80020c <__flp>
 d50:	3d c0       	rjmp	.+122    	; 0xdcc <free+0x10c>
 d52:	e9 01       	movw	r28, r18
 d54:	fb 83       	std	Y+3, r31	; 0x03
 d56:	ea 83       	std	Y+2, r30	; 0x02
 d58:	49 91       	ld	r20, Y+
 d5a:	59 91       	ld	r21, Y+
 d5c:	c4 0f       	add	r28, r20
 d5e:	d5 1f       	adc	r29, r21
 d60:	ec 17       	cp	r30, r28
 d62:	fd 07       	cpc	r31, r29
 d64:	61 f4       	brne	.+24     	; 0xd7e <free+0xbe>
 d66:	80 81       	ld	r24, Z
 d68:	91 81       	ldd	r25, Z+1	; 0x01
 d6a:	84 0f       	add	r24, r20
 d6c:	95 1f       	adc	r25, r21
 d6e:	02 96       	adiw	r24, 0x02	; 2
 d70:	e9 01       	movw	r28, r18
 d72:	99 83       	std	Y+1, r25	; 0x01
 d74:	88 83       	st	Y, r24
 d76:	82 81       	ldd	r24, Z+2	; 0x02
 d78:	93 81       	ldd	r25, Z+3	; 0x03
 d7a:	9b 83       	std	Y+3, r25	; 0x03
 d7c:	8a 83       	std	Y+2, r24	; 0x02
 d7e:	e0 e0       	ldi	r30, 0x00	; 0
 d80:	f0 e0       	ldi	r31, 0x00	; 0
 d82:	12 96       	adiw	r26, 0x02	; 2
 d84:	8d 91       	ld	r24, X+
 d86:	9c 91       	ld	r25, X
 d88:	13 97       	sbiw	r26, 0x03	; 3
 d8a:	00 97       	sbiw	r24, 0x00	; 0
 d8c:	19 f0       	breq	.+6      	; 0xd94 <free+0xd4>
 d8e:	fd 01       	movw	r30, r26
 d90:	dc 01       	movw	r26, r24
 d92:	f7 cf       	rjmp	.-18     	; 0xd82 <free+0xc2>
 d94:	8d 91       	ld	r24, X+
 d96:	9c 91       	ld	r25, X
 d98:	11 97       	sbiw	r26, 0x01	; 1
 d9a:	9d 01       	movw	r18, r26
 d9c:	2e 5f       	subi	r18, 0xFE	; 254
 d9e:	3f 4f       	sbci	r19, 0xFF	; 255
 da0:	82 0f       	add	r24, r18
 da2:	93 1f       	adc	r25, r19
 da4:	20 91 0a 02 	lds	r18, 0x020A	; 0x80020a <__brkval>
 da8:	30 91 0b 02 	lds	r19, 0x020B	; 0x80020b <__brkval+0x1>
 dac:	28 17       	cp	r18, r24
 dae:	39 07       	cpc	r19, r25
 db0:	69 f4       	brne	.+26     	; 0xdcc <free+0x10c>
 db2:	30 97       	sbiw	r30, 0x00	; 0
 db4:	29 f4       	brne	.+10     	; 0xdc0 <free+0x100>
 db6:	10 92 0d 02 	sts	0x020D, r1	; 0x80020d <__flp+0x1>
 dba:	10 92 0c 02 	sts	0x020C, r1	; 0x80020c <__flp>
 dbe:	02 c0       	rjmp	.+4      	; 0xdc4 <free+0x104>
 dc0:	13 82       	std	Z+3, r1	; 0x03
 dc2:	12 82       	std	Z+2, r1	; 0x02
 dc4:	b0 93 0b 02 	sts	0x020B, r27	; 0x80020b <__brkval+0x1>
 dc8:	a0 93 0a 02 	sts	0x020A, r26	; 0x80020a <__brkval>
 dcc:	df 91       	pop	r29
 dce:	cf 91       	pop	r28
 dd0:	08 95       	ret

00000dd2 <strnlen_P>:
 dd2:	fc 01       	movw	r30, r24
 dd4:	05 90       	lpm	r0, Z+
 dd6:	61 50       	subi	r22, 0x01	; 1
 dd8:	70 40       	sbci	r23, 0x00	; 0
 dda:	01 10       	cpse	r0, r1
 ddc:	d8 f7       	brcc	.-10     	; 0xdd4 <strnlen_P+0x2>
 dde:	80 95       	com	r24
 de0:	90 95       	com	r25
 de2:	8e 0f       	add	r24, r30
 de4:	9f 1f       	adc	r25, r31
 de6:	08 95       	ret

00000de8 <memset>:
 de8:	dc 01       	movw	r26, r24
 dea:	01 c0       	rjmp	.+2      	; 0xdee <memset+0x6>
 dec:	6d 93       	st	X+, r22
 dee:	41 50       	subi	r20, 0x01	; 1
 df0:	50 40       	sbci	r21, 0x00	; 0
 df2:	e0 f7       	brcc	.-8      	; 0xdec <memset+0x4>
 df4:	08 95       	ret

00000df6 <strnlen>:
 df6:	fc 01       	movw	r30, r24
 df8:	61 50       	subi	r22, 0x01	; 1
 dfa:	70 40       	sbci	r23, 0x00	; 0
 dfc:	01 90       	ld	r0, Z+
 dfe:	01 10       	cpse	r0, r1
 e00:	d8 f7       	brcc	.-10     	; 0xdf8 <strnlen+0x2>
 e02:	80 95       	com	r24
 e04:	90 95       	com	r25
 e06:	8e 0f       	add	r24, r30
 e08:	9f 1f       	adc	r25, r31
 e0a:	08 95       	ret

00000e0c <fputc>:
 e0c:	0f 93       	push	r16
 e0e:	1f 93       	push	r17
 e10:	cf 93       	push	r28
 e12:	df 93       	push	r29
 e14:	fb 01       	movw	r30, r22
 e16:	23 81       	ldd	r18, Z+3	; 0x03
 e18:	21 fd       	sbrc	r18, 1
 e1a:	03 c0       	rjmp	.+6      	; 0xe22 <fputc+0x16>
 e1c:	8f ef       	ldi	r24, 0xFF	; 255
 e1e:	9f ef       	ldi	r25, 0xFF	; 255
 e20:	2c c0       	rjmp	.+88     	; 0xe7a <fputc+0x6e>
 e22:	22 ff       	sbrs	r18, 2
 e24:	16 c0       	rjmp	.+44     	; 0xe52 <fputc+0x46>
 e26:	46 81       	ldd	r20, Z+6	; 0x06
 e28:	57 81       	ldd	r21, Z+7	; 0x07
 e2a:	24 81       	ldd	r18, Z+4	; 0x04
 e2c:	35 81       	ldd	r19, Z+5	; 0x05
 e2e:	42 17       	cp	r20, r18
 e30:	53 07       	cpc	r21, r19
 e32:	44 f4       	brge	.+16     	; 0xe44 <fputc+0x38>
 e34:	a0 81       	ld	r26, Z
 e36:	b1 81       	ldd	r27, Z+1	; 0x01
 e38:	9d 01       	movw	r18, r26
 e3a:	2f 5f       	subi	r18, 0xFF	; 255
 e3c:	3f 4f       	sbci	r19, 0xFF	; 255
 e3e:	31 83       	std	Z+1, r19	; 0x01
 e40:	20 83       	st	Z, r18
 e42:	8c 93       	st	X, r24
 e44:	26 81       	ldd	r18, Z+6	; 0x06
 e46:	37 81       	ldd	r19, Z+7	; 0x07
 e48:	2f 5f       	subi	r18, 0xFF	; 255
 e4a:	3f 4f       	sbci	r19, 0xFF	; 255
 e4c:	37 83       	std	Z+7, r19	; 0x07
 e4e:	26 83       	std	Z+6, r18	; 0x06
 e50:	14 c0       	rjmp	.+40     	; 0xe7a <fputc+0x6e>
 e52:	8b 01       	movw	r16, r22
 e54:	ec 01       	movw	r28, r24
 e56:	fb 01       	movw	r30, r22
 e58:	00 84       	ldd	r0, Z+8	; 0x08
 e5a:	f1 85       	ldd	r31, Z+9	; 0x09
 e5c:	e0 2d       	mov	r30, r0
 e5e:	09 95       	icall
 e60:	89 2b       	or	r24, r25
 e62:	e1 f6       	brne	.-72     	; 0xe1c <fputc+0x10>
 e64:	d8 01       	movw	r26, r16
 e66:	16 96       	adiw	r26, 0x06	; 6
 e68:	8d 91       	ld	r24, X+
 e6a:	9c 91       	ld	r25, X
 e6c:	17 97       	sbiw	r26, 0x07	; 7
 e6e:	01 96       	adiw	r24, 0x01	; 1
 e70:	17 96       	adiw	r26, 0x07	; 7
 e72:	9c 93       	st	X, r25
 e74:	8e 93       	st	-X, r24
 e76:	16 97       	sbiw	r26, 0x06	; 6
 e78:	ce 01       	movw	r24, r28
 e7a:	df 91       	pop	r29
 e7c:	cf 91       	pop	r28
 e7e:	1f 91       	pop	r17
 e80:	0f 91       	pop	r16
 e82:	08 95       	ret

00000e84 <__ultoa_invert>:
 e84:	fa 01       	movw	r30, r20
 e86:	aa 27       	eor	r26, r26
 e88:	28 30       	cpi	r18, 0x08	; 8
 e8a:	51 f1       	breq	.+84     	; 0xee0 <__ultoa_invert+0x5c>
 e8c:	20 31       	cpi	r18, 0x10	; 16
 e8e:	81 f1       	breq	.+96     	; 0xef0 <__ultoa_invert+0x6c>
 e90:	e8 94       	clt
 e92:	6f 93       	push	r22
 e94:	6e 7f       	andi	r22, 0xFE	; 254
 e96:	6e 5f       	subi	r22, 0xFE	; 254
 e98:	7f 4f       	sbci	r23, 0xFF	; 255
 e9a:	8f 4f       	sbci	r24, 0xFF	; 255
 e9c:	9f 4f       	sbci	r25, 0xFF	; 255
 e9e:	af 4f       	sbci	r26, 0xFF	; 255
 ea0:	b1 e0       	ldi	r27, 0x01	; 1
 ea2:	3e d0       	rcall	.+124    	; 0xf20 <__ultoa_invert+0x9c>
 ea4:	b4 e0       	ldi	r27, 0x04	; 4
 ea6:	3c d0       	rcall	.+120    	; 0xf20 <__ultoa_invert+0x9c>
 ea8:	67 0f       	add	r22, r23
 eaa:	78 1f       	adc	r23, r24
 eac:	89 1f       	adc	r24, r25
 eae:	9a 1f       	adc	r25, r26
 eb0:	a1 1d       	adc	r26, r1
 eb2:	68 0f       	add	r22, r24
 eb4:	79 1f       	adc	r23, r25
 eb6:	8a 1f       	adc	r24, r26
 eb8:	91 1d       	adc	r25, r1
 eba:	a1 1d       	adc	r26, r1
 ebc:	6a 0f       	add	r22, r26
 ebe:	71 1d       	adc	r23, r1
 ec0:	81 1d       	adc	r24, r1
 ec2:	91 1d       	adc	r25, r1
 ec4:	a1 1d       	adc	r26, r1
 ec6:	20 d0       	rcall	.+64     	; 0xf08 <__ultoa_invert+0x84>
 ec8:	09 f4       	brne	.+2      	; 0xecc <__ultoa_invert+0x48>
 eca:	68 94       	set
 ecc:	3f 91       	pop	r19
 ece:	2a e0       	ldi	r18, 0x0A	; 10
 ed0:	26 9f       	mul	r18, r22
 ed2:	11 24       	eor	r1, r1
 ed4:	30 19       	sub	r19, r0
 ed6:	30 5d       	subi	r19, 0xD0	; 208
 ed8:	31 93       	st	Z+, r19
 eda:	de f6       	brtc	.-74     	; 0xe92 <__ultoa_invert+0xe>
 edc:	cf 01       	movw	r24, r30
 ede:	08 95       	ret
 ee0:	46 2f       	mov	r20, r22
 ee2:	47 70       	andi	r20, 0x07	; 7
 ee4:	40 5d       	subi	r20, 0xD0	; 208
 ee6:	41 93       	st	Z+, r20
 ee8:	b3 e0       	ldi	r27, 0x03	; 3
 eea:	0f d0       	rcall	.+30     	; 0xf0a <__ultoa_invert+0x86>
 eec:	c9 f7       	brne	.-14     	; 0xee0 <__ultoa_invert+0x5c>
 eee:	f6 cf       	rjmp	.-20     	; 0xedc <__ultoa_invert+0x58>
 ef0:	46 2f       	mov	r20, r22
 ef2:	4f 70       	andi	r20, 0x0F	; 15
 ef4:	40 5d       	subi	r20, 0xD0	; 208
 ef6:	4a 33       	cpi	r20, 0x3A	; 58
 ef8:	18 f0       	brcs	.+6      	; 0xf00 <__ultoa_invert+0x7c>
 efa:	49 5d       	subi	r20, 0xD9	; 217
 efc:	31 fd       	sbrc	r19, 1
 efe:	40 52       	subi	r20, 0x20	; 32
 f00:	41 93       	st	Z+, r20
 f02:	02 d0       	rcall	.+4      	; 0xf08 <__ultoa_invert+0x84>
 f04:	a9 f7       	brne	.-22     	; 0xef0 <__ultoa_invert+0x6c>
 f06:	ea cf       	rjmp	.-44     	; 0xedc <__ultoa_invert+0x58>
 f08:	b4 e0       	ldi	r27, 0x04	; 4
 f0a:	a6 95       	lsr	r26
 f0c:	97 95       	ror	r25
 f0e:	87 95       	ror	r24
 f10:	77 95       	ror	r23
 f12:	67 95       	ror	r22
 f14:	ba 95       	dec	r27
 f16:	c9 f7       	brne	.-14     	; 0xf0a <__ultoa_invert+0x86>
 f18:	00 97       	sbiw	r24, 0x00	; 0
 f1a:	61 05       	cpc	r22, r1
 f1c:	71 05       	cpc	r23, r1
 f1e:	08 95       	ret
 f20:	9b 01       	movw	r18, r22
 f22:	ac 01       	movw	r20, r24
 f24:	0a 2e       	mov	r0, r26
 f26:	06 94       	lsr	r0
 f28:	57 95       	ror	r21
 f2a:	47 95       	ror	r20
 f2c:	37 95       	ror	r19
 f2e:	27 95       	ror	r18
 f30:	ba 95       	dec	r27
 f32:	c9 f7       	brne	.-14     	; 0xf26 <__ultoa_invert+0xa2>
 f34:	62 0f       	add	r22, r18
 f36:	73 1f       	adc	r23, r19
 f38:	84 1f       	adc	r24, r20
 f3a:	95 1f       	adc	r25, r21
 f3c:	a0 1d       	adc	r26, r0
 f3e:	08 95       	ret

00000f40 <__prologue_saves__>:
 f40:	2f 92       	push	r2
 f42:	3f 92       	push	r3
 f44:	4f 92       	push	r4
 f46:	5f 92       	push	r5
 f48:	6f 92       	push	r6
 f4a:	7f 92       	push	r7
 f4c:	8f 92       	push	r8
 f4e:	9f 92       	push	r9
 f50:	af 92       	push	r10
 f52:	bf 92       	push	r11
 f54:	cf 92       	push	r12
 f56:	df 92       	push	r13
 f58:	ef 92       	push	r14
 f5a:	ff 92       	push	r15
 f5c:	0f 93       	push	r16
 f5e:	1f 93       	push	r17
 f60:	cf 93       	push	r28
 f62:	df 93       	push	r29
 f64:	cd b7       	in	r28, 0x3d	; 61
 f66:	de b7       	in	r29, 0x3e	; 62
 f68:	ca 1b       	sub	r28, r26
 f6a:	db 0b       	sbc	r29, r27
 f6c:	0f b6       	in	r0, 0x3f	; 63
 f6e:	f8 94       	cli
 f70:	de bf       	out	0x3e, r29	; 62
 f72:	0f be       	out	0x3f, r0	; 63
 f74:	cd bf       	out	0x3d, r28	; 61
 f76:	09 94       	ijmp

00000f78 <__epilogue_restores__>:
 f78:	2a 88       	ldd	r2, Y+18	; 0x12
 f7a:	39 88       	ldd	r3, Y+17	; 0x11
 f7c:	48 88       	ldd	r4, Y+16	; 0x10
 f7e:	5f 84       	ldd	r5, Y+15	; 0x0f
 f80:	6e 84       	ldd	r6, Y+14	; 0x0e
 f82:	7d 84       	ldd	r7, Y+13	; 0x0d
 f84:	8c 84       	ldd	r8, Y+12	; 0x0c
 f86:	9b 84       	ldd	r9, Y+11	; 0x0b
 f88:	aa 84       	ldd	r10, Y+10	; 0x0a
 f8a:	b9 84       	ldd	r11, Y+9	; 0x09
 f8c:	c8 84       	ldd	r12, Y+8	; 0x08
 f8e:	df 80       	ldd	r13, Y+7	; 0x07
 f90:	ee 80       	ldd	r14, Y+6	; 0x06
 f92:	fd 80       	ldd	r15, Y+5	; 0x05
 f94:	0c 81       	ldd	r16, Y+4	; 0x04
 f96:	1b 81       	ldd	r17, Y+3	; 0x03
 f98:	aa 81       	ldd	r26, Y+2	; 0x02
 f9a:	b9 81       	ldd	r27, Y+1	; 0x01
 f9c:	ce 0f       	add	r28, r30
 f9e:	d1 1d       	adc	r29, r1
 fa0:	0f b6       	in	r0, 0x3f	; 63
 fa2:	f8 94       	cli
 fa4:	de bf       	out	0x3e, r29	; 62
 fa6:	0f be       	out	0x3f, r0	; 63
 fa8:	cd bf       	out	0x3d, r28	; 61
 faa:	ed 01       	movw	r28, r26
 fac:	08 95       	ret

00000fae <_exit>:
 fae:	f8 94       	cli

00000fb0 <__stop_program>:
 fb0:	ff cf       	rjmp	.-2      	; 0xfb0 <__stop_program>
